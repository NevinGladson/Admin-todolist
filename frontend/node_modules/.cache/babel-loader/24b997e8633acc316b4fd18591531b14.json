{"ast":null,"code":"'use client';import _extends from\"@babel/runtime/helpers/esm/extends\";import*as React from'react';import{ThemeProvider as MuiThemeProvider,useTheme as usePrivateTheme}from'@mui/private-theming';import exactProp from'@mui/utils/exactProp';import{ThemeContext as StyledEngineThemeContext}from'@mui/styled-engine';import useThemeWithoutDefault from'../useThemeWithoutDefault';import RtlProvider from'../RtlProvider';import{jsx as _jsx}from\"react/jsx-runtime\";const EMPTY_THEME={};function useThemeScoping(themeId,upperTheme,localTheme){let isPrivate=arguments.length>3&&arguments[3]!==undefined?arguments[3]:false;return React.useMemo(()=>{const resolvedTheme=themeId?upperTheme[themeId]||upperTheme:upperTheme;if(typeof localTheme==='function'){const mergedTheme=localTheme(resolvedTheme);const result=themeId?_extends({},upperTheme,{[themeId]:mergedTheme}):mergedTheme;// must return a function for the private theme to NOT merge with the upper theme.\n// see the test case \"use provided theme from a callback\" in ThemeProvider.test.js\nif(isPrivate){return()=>result;}return result;}return themeId?_extends({},upperTheme,{[themeId]:localTheme}):_extends({},upperTheme,localTheme);},[themeId,upperTheme,localTheme,isPrivate]);}/**\n * This component makes the `theme` available down the React tree.\n * It should preferably be used at **the root of your component tree**.\n *\n * <ThemeProvider theme={theme}> // existing use case\n * <ThemeProvider theme={{ id: theme }}> // theme scoping\n */function ThemeProvider(props){const{children,theme:localTheme,themeId}=props;const upperTheme=useThemeWithoutDefault(EMPTY_THEME);const upperPrivateTheme=usePrivateTheme()||EMPTY_THEME;if(process.env.NODE_ENV!=='production'){if(upperTheme===null&&typeof localTheme==='function'||themeId&&upperTheme&&!upperTheme[themeId]&&typeof localTheme==='function'){console.error(['MUI: You are providing a theme function prop to the ThemeProvider component:','<ThemeProvider theme={outerTheme => outerTheme} />','','However, no outer theme is present.','Make sure a theme is already injected higher in the React tree '+'or provide a theme object.'].join('\\n'));}}const engineTheme=useThemeScoping(themeId,upperTheme,localTheme);const privateTheme=useThemeScoping(themeId,upperPrivateTheme,localTheme,true);const rtlValue=engineTheme.direction==='rtl';return/*#__PURE__*/_jsx(MuiThemeProvider,{theme:privateTheme,children:/*#__PURE__*/_jsx(StyledEngineThemeContext.Provider,{value:engineTheme,children:/*#__PURE__*/_jsx(RtlProvider,{value:rtlValue,children:children})})});}process.env.NODE_ENV!==\"production\"?void 0:void 0;if(process.env.NODE_ENV!=='production'){process.env.NODE_ENV!==\"production\"?ThemeProvider.propTypes=exactProp(ThemeProvider.propTypes):void 0;}export default ThemeProvider;","map":{"version":3,"names":["_extends","React","ThemeProvider","MuiThemeProvider","useTheme","usePrivateTheme","exactProp","ThemeContext","StyledEngineThemeContext","useThemeWithoutDefault","RtlProvider","jsx","_jsx","EMPTY_THEME","useThemeScoping","themeId","upperTheme","localTheme","isPrivate","arguments","length","undefined","useMemo","resolvedTheme","mergedTheme","result","props","children","theme","upperPrivateTheme","process","env","NODE_ENV","console","error","join","engineTheme","privateTheme","rtlValue","direction","Provider","value","propTypes"],"sources":["/home/nevin/Project-2/test-react-auth/frontend/src/node_modules/@mui/system/esm/ThemeProvider/ThemeProvider.js"],"sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { ThemeProvider as MuiThemeProvider, useTheme as usePrivateTheme } from '@mui/private-theming';\nimport exactProp from '@mui/utils/exactProp';\nimport { ThemeContext as StyledEngineThemeContext } from '@mui/styled-engine';\nimport useThemeWithoutDefault from '../useThemeWithoutDefault';\nimport RtlProvider from '../RtlProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst EMPTY_THEME = {};\nfunction useThemeScoping(themeId, upperTheme, localTheme, isPrivate = false) {\n  return React.useMemo(() => {\n    const resolvedTheme = themeId ? upperTheme[themeId] || upperTheme : upperTheme;\n    if (typeof localTheme === 'function') {\n      const mergedTheme = localTheme(resolvedTheme);\n      const result = themeId ? _extends({}, upperTheme, {\n        [themeId]: mergedTheme\n      }) : mergedTheme;\n      // must return a function for the private theme to NOT merge with the upper theme.\n      // see the test case \"use provided theme from a callback\" in ThemeProvider.test.js\n      if (isPrivate) {\n        return () => result;\n      }\n      return result;\n    }\n    return themeId ? _extends({}, upperTheme, {\n      [themeId]: localTheme\n    }) : _extends({}, upperTheme, localTheme);\n  }, [themeId, upperTheme, localTheme, isPrivate]);\n}\n\n/**\n * This component makes the `theme` available down the React tree.\n * It should preferably be used at **the root of your component tree**.\n *\n * <ThemeProvider theme={theme}> // existing use case\n * <ThemeProvider theme={{ id: theme }}> // theme scoping\n */\nfunction ThemeProvider(props) {\n  const {\n    children,\n    theme: localTheme,\n    themeId\n  } = props;\n  const upperTheme = useThemeWithoutDefault(EMPTY_THEME);\n  const upperPrivateTheme = usePrivateTheme() || EMPTY_THEME;\n  if (process.env.NODE_ENV !== 'production') {\n    if (upperTheme === null && typeof localTheme === 'function' || themeId && upperTheme && !upperTheme[themeId] && typeof localTheme === 'function') {\n      console.error(['MUI: You are providing a theme function prop to the ThemeProvider component:', '<ThemeProvider theme={outerTheme => outerTheme} />', '', 'However, no outer theme is present.', 'Make sure a theme is already injected higher in the React tree ' + 'or provide a theme object.'].join('\\n'));\n    }\n  }\n  const engineTheme = useThemeScoping(themeId, upperTheme, localTheme);\n  const privateTheme = useThemeScoping(themeId, upperPrivateTheme, localTheme, true);\n  const rtlValue = engineTheme.direction === 'rtl';\n  return /*#__PURE__*/_jsx(MuiThemeProvider, {\n    theme: privateTheme,\n    children: /*#__PURE__*/_jsx(StyledEngineThemeContext.Provider, {\n      value: engineTheme,\n      children: /*#__PURE__*/_jsx(RtlProvider, {\n        value: rtlValue,\n        children: children\n      })\n    })\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n  /**\n   * The design system's unique id for getting the corresponded theme when there are multiple design systems.\n   */\n  themeId: PropTypes.string\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  process.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = exactProp(ThemeProvider.propTypes) : void 0;\n}\nexport default ThemeProvider;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}