{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"initialWidth\", \"width\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport getDisplayName from '@mui/utils/getDisplayName';\nimport { getThemeProps } from '@mui/system/useThemeProps';\nimport useTheme from '../styles/useTheme';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\nimport useMediaQuery from '../useMediaQuery';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst breakpointKeys = ['xs', 'sm', 'md', 'lg', 'xl'];\n\n// By default, returns true if screen width is the same or greater than the given breakpoint.\nexport const isWidthUp = (breakpoint, width, inclusive = true) => {\n  if (inclusive) {\n    return breakpointKeys.indexOf(breakpoint) <= breakpointKeys.indexOf(width);\n  }\n  return breakpointKeys.indexOf(breakpoint) < breakpointKeys.indexOf(width);\n};\n\n// By default, returns true if screen width is less than the given breakpoint.\nexport const isWidthDown = (breakpoint, width, inclusive = false) => {\n  if (inclusive) {\n    return breakpointKeys.indexOf(width) <= breakpointKeys.indexOf(breakpoint);\n  }\n  return breakpointKeys.indexOf(width) < breakpointKeys.indexOf(breakpoint);\n};\nconst withWidth = (options = {}) => Component => {\n  var _s2 = $RefreshSig$();\n  const {\n    withTheme: withThemeOption = false,\n    noSSR = false,\n    initialWidth: initialWidthOption\n  } = options;\n  function WithWidth(props) {\n    _s2();\n    var _s = $RefreshSig$();\n    const contextTheme = useTheme();\n    const theme = props.theme || contextTheme;\n    const _getThemeProps = getThemeProps({\n        theme,\n        name: 'MuiWithWidth',\n        props\n      }),\n      {\n        initialWidth,\n        width\n      } = _getThemeProps,\n      other = _objectWithoutPropertiesLoose(_getThemeProps, _excluded);\n    const [mountedState, setMountedState] = React.useState(false);\n    useEnhancedEffect(() => {\n      setMountedState(true);\n    }, []);\n\n    /**\n     * innerWidth |xs      sm      md      lg      xl\n     *            |-------|-------|-------|-------|------>\n     * width      |  xs   |  sm   |  md   |  lg   |  xl\n     */\n    const keys = theme.breakpoints.keys.slice().reverse();\n    const widthComputed = keys.reduce(_s((output, key) => {\n      _s();\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      const matches = useMediaQuery(theme.breakpoints.up(key));\n      return !output && matches ? key : output;\n    }, \"Notg82ym9o1DByeCiLcTemAcsz0=\", false, function () {\n      return [useMediaQuery];\n    }), null);\n    const more = _extends({\n      width: width || (mountedState || noSSR ? widthComputed : undefined) || initialWidth || initialWidthOption\n    }, withThemeOption ? {\n      theme\n    } : {}, other);\n\n    // When rendering the component on the server,\n    // we have no idea about the client browser screen width.\n    // In order to prevent blinks and help the reconciliation of the React tree\n    // we are not rendering the child component.\n    //\n    // An alternative is to use the `initialWidth` property.\n    if (more.width === undefined) {\n      return null;\n    }\n    return /*#__PURE__*/_jsx(Component, _extends({}, more));\n  }\n  _s2(WithWidth, \"MdHr0anHUIXcNMiCQjYiwvZ0ctk=\", false, function () {\n    return [useTheme, useEnhancedEffect];\n  });\n  process.env.NODE_ENV !== \"production\" ? WithWidth.propTypes = {\n    /**\n     * As `window.innerWidth` is unavailable on the server,\n     * we default to rendering an empty component during the first mount.\n     * You might want to use a heuristic to approximate\n     * the screen width of the client browser screen width.\n     *\n     * For instance, you could be using the user-agent or the client-hints.\n     * https://caniuse.com/#search=client%20hint\n     */\n    initialWidth: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']),\n    /**\n     * @ignore\n     */\n    theme: PropTypes.object,\n    /**\n     * Bypass the width calculation logic.\n     */\n    width: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl'])\n  } : void 0;\n  if (process.env.NODE_ENV !== 'production') {\n    WithWidth.displayName = `WithWidth(${getDisplayName(Component)})`;\n  }\n  return WithWidth;\n};\nexport default withWidth;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","getDisplayName","getThemeProps","useTheme","useEnhancedEffect","useMediaQuery","jsx","_jsx","breakpointKeys","isWidthUp","breakpoint","width","inclusive","indexOf","isWidthDown","withWidth","options","Component","_s2","$RefreshSig$","withTheme","withThemeOption","noSSR","initialWidth","initialWidthOption","WithWidth","props","_s","contextTheme","theme","_getThemeProps","name","other","mountedState","setMountedState","useState","keys","breakpoints","slice","reverse","widthComputed","reduce","output","key","matches","up","more","undefined","process","env","NODE_ENV","propTypes","oneOf","object","displayName"],"sources":["/home/nevin/Project-2/test-react-auth/frontend/src/node_modules/@mui/material/Hidden/withWidth.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"initialWidth\", \"width\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport getDisplayName from '@mui/utils/getDisplayName';\nimport { getThemeProps } from '@mui/system/useThemeProps';\nimport useTheme from '../styles/useTheme';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\nimport useMediaQuery from '../useMediaQuery';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst breakpointKeys = ['xs', 'sm', 'md', 'lg', 'xl'];\n\n// By default, returns true if screen width is the same or greater than the given breakpoint.\nexport const isWidthUp = (breakpoint, width, inclusive = true) => {\n  if (inclusive) {\n    return breakpointKeys.indexOf(breakpoint) <= breakpointKeys.indexOf(width);\n  }\n  return breakpointKeys.indexOf(breakpoint) < breakpointKeys.indexOf(width);\n};\n\n// By default, returns true if screen width is less than the given breakpoint.\nexport const isWidthDown = (breakpoint, width, inclusive = false) => {\n  if (inclusive) {\n    return breakpointKeys.indexOf(width) <= breakpointKeys.indexOf(breakpoint);\n  }\n  return breakpointKeys.indexOf(width) < breakpointKeys.indexOf(breakpoint);\n};\nconst withWidth = (options = {}) => Component => {\n  const {\n    withTheme: withThemeOption = false,\n    noSSR = false,\n    initialWidth: initialWidthOption\n  } = options;\n  function WithWidth(props) {\n    const contextTheme = useTheme();\n    const theme = props.theme || contextTheme;\n    const _getThemeProps = getThemeProps({\n        theme,\n        name: 'MuiWithWidth',\n        props\n      }),\n      {\n        initialWidth,\n        width\n      } = _getThemeProps,\n      other = _objectWithoutPropertiesLoose(_getThemeProps, _excluded);\n    const [mountedState, setMountedState] = React.useState(false);\n    useEnhancedEffect(() => {\n      setMountedState(true);\n    }, []);\n\n    /**\n     * innerWidth |xs      sm      md      lg      xl\n     *            |-------|-------|-------|-------|------>\n     * width      |  xs   |  sm   |  md   |  lg   |  xl\n     */\n    const keys = theme.breakpoints.keys.slice().reverse();\n    const widthComputed = keys.reduce((output, key) => {\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      const matches = useMediaQuery(theme.breakpoints.up(key));\n      return !output && matches ? key : output;\n    }, null);\n    const more = _extends({\n      width: width || (mountedState || noSSR ? widthComputed : undefined) || initialWidth || initialWidthOption\n    }, withThemeOption ? {\n      theme\n    } : {}, other);\n\n    // When rendering the component on the server,\n    // we have no idea about the client browser screen width.\n    // In order to prevent blinks and help the reconciliation of the React tree\n    // we are not rendering the child component.\n    //\n    // An alternative is to use the `initialWidth` property.\n    if (more.width === undefined) {\n      return null;\n    }\n    return /*#__PURE__*/_jsx(Component, _extends({}, more));\n  }\n  process.env.NODE_ENV !== \"production\" ? WithWidth.propTypes = {\n    /**\n     * As `window.innerWidth` is unavailable on the server,\n     * we default to rendering an empty component during the first mount.\n     * You might want to use a heuristic to approximate\n     * the screen width of the client browser screen width.\n     *\n     * For instance, you could be using the user-agent or the client-hints.\n     * https://caniuse.com/#search=client%20hint\n     */\n    initialWidth: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']),\n    /**\n     * @ignore\n     */\n    theme: PropTypes.object,\n    /**\n     * Bypass the width calculation logic.\n     */\n    width: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl'])\n  } : void 0;\n  if (process.env.NODE_ENV !== 'production') {\n    WithWidth.displayName = `WithWidth(${getDisplayName(Component)})`;\n  }\n  return WithWidth;\n};\nexport default withWidth;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}