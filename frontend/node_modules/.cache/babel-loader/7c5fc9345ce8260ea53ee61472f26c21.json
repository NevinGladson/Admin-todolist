{"ast":null,"code":"'use client';import{createStack}from'@mui/system';import styled from'../styles/styled';import useThemeProps from'../styles/useThemeProps';const Stack=createStack({createStyledComponent:styled('div',{name:'MuiStack',slot:'Root',overridesResolver:(props,styles)=>styles.root}),useThemeProps:inProps=>useThemeProps({props:inProps,name:'MuiStack'})});process.env.NODE_ENV!==\"production\"?void 0:void 0;export default Stack;","map":{"version":3,"names":["createStack","styled","useThemeProps","Stack","createStyledComponent","name","slot","overridesResolver","props","styles","root","inProps","process","env","NODE_ENV"],"sources":["/home/nevin/Project-2/test-react-auth/frontend/src/node_modules/@mui/material/Stack/Stack.js"],"sourcesContent":["'use client';\n\nimport PropTypes from 'prop-types';\nimport { createStack } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nconst Stack = createStack({\n  createStyledComponent: styled('div', {\n    name: 'MuiStack',\n    slot: 'Root',\n    overridesResolver: (props, styles) => styles.root\n  }),\n  useThemeProps: inProps => useThemeProps({\n    props: inProps,\n    name: 'MuiStack'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Stack.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'column'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n  /**\n   * Add an element between each child.\n   */\n  divider: PropTypes.node,\n  /**\n   * Defines the space between immediate children.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The system prop, which allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * If `true`, the CSS flexbox `gap` is used instead of applying `margin` to children.\n   *\n   * While CSS `gap` removes the [known limitations](https://mui.com/joy-ui/react-stack/#limitations),\n   * it is not fully supported in some browsers. We recommend checking https://caniuse.com/?search=flex%20gap before using this flag.\n   *\n   * To enable this flag globally, follow the [theme's default props](https://mui.com/material-ui/customization/theme-components/#default-props) configuration.\n   * @default false\n   */\n  useFlexGap: PropTypes.bool\n} : void 0;\nexport default Stack;"],"mappings":"AAAA,YAAY,CAGZ,OAASA,WAAW,KAAQ,aAAa,CACzC,MAAO,CAAAC,MAAM,KAAM,kBAAkB,CACrC,MAAO,CAAAC,aAAa,KAAM,yBAAyB,CACnD,KAAM,CAAAC,KAAK,CAAGH,WAAW,CAAC,CACxBI,qBAAqB,CAAEH,MAAM,CAAC,KAAK,CAAE,CACnCI,IAAI,CAAE,UAAU,CAChBC,IAAI,CAAE,MAAM,CACZC,iBAAiB,CAAEA,CAACC,KAAK,CAAEC,MAAM,GAAKA,MAAM,CAACC,IAC/C,CAAC,CAAC,CACFR,aAAa,CAAES,OAAO,EAAIT,aAAa,CAAC,CACtCM,KAAK,CAAEG,OAAO,CACdN,IAAI,CAAE,UACR,CAAC,CACH,CAAC,CAAC,CACFO,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAK,YAAY,QA2CjC,IAAK,EAAC,CACV,cAAe,CAAAX,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module"}