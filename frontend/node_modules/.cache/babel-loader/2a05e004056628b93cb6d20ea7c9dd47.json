{"ast":null,"code":"/**\n * TODO v5: consider making it private\n *\n * passes {value} to {ref}\n *\n * WARNING: Be sure to only call this inside a callback that is passed as a ref.\n * Otherwise, make sure to cleanup the previous {ref} if it changes. See\n * https://github.com/mui/material-ui/issues/13539\n *\n * Useful if you want to expose the ref of an inner component to the public API\n * while still using it inside the component.\n * @param ref A ref callback or ref object. If anything falsy, this is a no-op.\n */export default function setRef(ref,value){if(typeof ref==='function'){ref(value);}else if(ref){ref.current=value;}}","map":{"version":3,"names":["setRef","ref","value","current"],"sources":["/home/nevin/Project-2/test-react-auth/frontend/src/node_modules/@mui/utils/setRef/setRef.js"],"sourcesContent":["/**\n * TODO v5: consider making it private\n *\n * passes {value} to {ref}\n *\n * WARNING: Be sure to only call this inside a callback that is passed as a ref.\n * Otherwise, make sure to cleanup the previous {ref} if it changes. See\n * https://github.com/mui/material-ui/issues/13539\n *\n * Useful if you want to expose the ref of an inner component to the public API\n * while still using it inside the component.\n * @param ref A ref callback or ref object. If anything falsy, this is a no-op.\n */\nexport default function setRef(ref, value) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,cAAe,SAAS,CAAAA,MAAMA,CAACC,GAAG,CAAEC,KAAK,CAAE,CACzC,GAAI,MAAO,CAAAD,GAAG,GAAK,UAAU,CAAE,CAC7BA,GAAG,CAACC,KAAK,CAAC,CACZ,CAAC,IAAM,IAAID,GAAG,CAAE,CACdA,GAAG,CAACE,OAAO,CAAGD,KAAK,CACrB,CACF","ignoreList":[]},"metadata":{},"sourceType":"module"}