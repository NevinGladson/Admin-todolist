{"ast":null,"code":"import{Button,TextField}from\"@mui/material\";import{useContext,useState}from\"react\";import{Link,useLocation,useNavigate}from\"react-router-dom\";import{useUser,UserContext}from\"../contexts/user.context\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Signup=()=>{const{emailPasswordSignup}=useUser();const navigate=useNavigate();const location=useLocation();// As explained in the Login page.\n//const { emailPasswordSignup } = useContext(UserContext);\nconst[form,setForm]=useState({username:\"\",// Add this line for the username\nemail:\"\",password:\"\",confirmPassword:\"\"// Add this line\n});const emailRegex=/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;// As explained in the Login page.\nconst onFormInputChange=event=>{const{name,value}=event.target;setForm({...form,[name]:value});};// As explained in the Login page.\nconst redirectNow=()=>{const redirectTo=location.search.replace(\"?redirectTo=\",\"\");navigate(redirectTo?redirectTo:\"/users\");};// As explained in the Login page.\nconst onSubmit=async event=>{event.preventDefault();if(form.password!==form.confirmPassword){alert(\"Passwords do not match.\");return;// Prevent the form from submitting\n}if(!emailRegex.test(form.email)){alert(\"Please enter a valid email address.\");return;// Prevent the form from submitting\n}try{const user=await emailPasswordSignup(form.email,form.password,form.username);if(user){redirectNow();}}catch(error){alert(error);}};return/*#__PURE__*/_jsxs(\"form\",{style:{display:\"flex\",flexDirection:\"column\",maxWidth:\"300px\",margin:\"auto\"},children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Signup\"}),/*#__PURE__*/_jsx(TextField,{label:\"Username\",type:\"text\",variant:\"outlined\",name:\"username\",value:form.username,onInput:onFormInputChange,style:{marginBottom:\"1rem\"}}),/*#__PURE__*/_jsx(TextField,{label:\"Email\",type:\"email\",variant:\"outlined\",name:\"email\",value:form.email,onInput:onFormInputChange,style:{marginBottom:\"1rem\"}}),/*#__PURE__*/_jsx(TextField,{label:\"Password\",type:\"password\",variant:\"outlined\",name:\"password\",value:form.password,onInput:onFormInputChange,style:{marginBottom:\"1rem\"}}),/*#__PURE__*/_jsx(TextField// New Confirm Password TextField\n,{label:\"Confirm Password\",type:\"password\",variant:\"outlined\",name:\"confirmPassword\",value:form.confirmPassword,onInput:onFormInputChange,style:{marginBottom:\"1rem\"}}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",onClick:onSubmit,children:\"Signup\"}),/*#__PURE__*/_jsx(\"p\",{style:{color:'#d32f2f',fontSize:'0.8rem',marginTop:'20px',textAlign:'center'},children:\"Do not enter your actual credentials. Enter fake but memorable credentials. For example, email: admin@gmail.com, username=admin, password=admin. The above example credentials are already in use.\"})]});};export default Signup;","map":{"version":3,"names":["Button","TextField","useContext","useState","Link","useLocation","useNavigate","useUser","UserContext","jsx","_jsx","jsxs","_jsxs","Signup","emailPasswordSignup","navigate","location","form","setForm","username","email","password","confirmPassword","emailRegex","onFormInputChange","event","name","value","target","redirectNow","redirectTo","search","replace","onSubmit","preventDefault","alert","test","user","error","style","display","flexDirection","maxWidth","margin","children","label","type","variant","onInput","marginBottom","color","onClick","fontSize","marginTop","textAlign"],"sources":["/home/nevin/Project-2/test-react-auth/frontend/src/pages/Signup.page.js"],"sourcesContent":["import { Button, TextField } from \"@mui/material\";\nimport { useContext, useState } from \"react\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport { useUser, UserContext } from \"../contexts/user.context\";\n \nconst Signup = () => {\n  const { emailPasswordSignup } = useUser();\n const navigate = useNavigate();\n const location = useLocation();\n \n // As explained in the Login page.\n //const { emailPasswordSignup } = useContext(UserContext);\n const [form, setForm] = useState({\n   username: \"\", // Add this line for the username\n   email: \"\",\n   password: \"\",\n   confirmPassword: \"\" // Add this line\n });\n\n const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n \n // As explained in the Login page.\n const onFormInputChange = (event) => {\n   const { name, value } = event.target;\n   setForm({ ...form, [name]: value });\n };\n \n \n // As explained in the Login page.\n const redirectNow = () => {\n   const redirectTo = location.search.replace(\"?redirectTo=\", \"\");\n   navigate(redirectTo ? redirectTo : \"/users\");\n }\n \n // As explained in the Login page.\n const onSubmit = async (event) => {\n    event.preventDefault();\n    if (form.password !== form.confirmPassword) {\n    alert(\"Passwords do not match.\");\n    return; // Prevent the form from submitting\n    }\n\n    if (!emailRegex.test(form.email)) {\n      alert(\"Please enter a valid email address.\");\n      return; // Prevent the form from submitting\n  }\n  \n   try {\n    const user = await emailPasswordSignup(form.email, form.password, form.username);\n     if (user) {\n       redirectNow();\n     }\n   } catch (error) {\n     alert(error);\n   }\n };\n \n return <form style={{ display: \"flex\", flexDirection: \"column\", maxWidth: \"300px\", margin: \"auto\" }}>\n   <h1>Signup</h1>\n   <TextField\n     label=\"Username\"\n     type=\"text\"\n     variant=\"outlined\"\n     name=\"username\"\n     value={form.username}\n     onInput={onFormInputChange}\n     style={{ marginBottom: \"1rem\" }} />\n\n   <TextField\n     label=\"Email\"\n     type=\"email\"\n     variant=\"outlined\"\n     name=\"email\"\n     value={form.email}\n     onInput={onFormInputChange}\n     style={{ marginBottom: \"1rem\" }} />\n   <TextField\n     label=\"Password\"\n     type=\"password\"\n     variant=\"outlined\"\n     name=\"password\"\n     value={form.password}\n     onInput={onFormInputChange}\n     style={{ marginBottom: \"1rem\" }} />\n   <TextField // New Confirm Password TextField\n\n     label=\"Confirm Password\"\n     type=\"password\"\n     variant=\"outlined\"\n     name=\"confirmPassword\"\n     value={form.confirmPassword}\n     onInput={onFormInputChange}\n     style={{ marginBottom: \"1rem\" }} />\n   <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\n     Signup\n   </Button>\n   <p style={{ color: '#d32f2f', fontSize: '0.8rem', marginTop: '20px', textAlign: 'center' }}>\n     Do not enter your actual credentials. Enter fake but memorable credentials. For example, email: admin@gmail.com, username=admin, password=admin. The above example credentials are already in use.\n   </p>\n </form>\n}\n \nexport default Signup;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}