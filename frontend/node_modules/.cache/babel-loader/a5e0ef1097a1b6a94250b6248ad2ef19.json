{"ast":null,"code":"'use client';import _extends from\"@babel/runtime/helpers/esm/extends\";import _objectWithoutPropertiesLoose from\"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";const _excluded=[\"children\",\"disabled\",\"label\",\"slots\",\"slotProps\",\"focusableWhenDisabled\"];import*as React from'react';import{useSlotProps}from'../utils';import{useMenuButton}from'../useMenuButton';import{unstable_composeClasses as composeClasses}from'../composeClasses';import{useClassNamesOverride}from'../utils/ClassNameConfigurator';import{getMenuButtonUtilityClass}from'./menuButtonClasses';import{jsx as _jsx}from\"react/jsx-runtime\";const useUtilityClasses=ownerState=>{const{active,disabled,open}=ownerState;const slots={root:['root',disabled&&'disabled',active&&'active',open&&'expanded']};return composeClasses(slots,useClassNamesOverride(getMenuButtonUtilityClass));};/**\n *\n * Demos:\n *\n * - [Menu](https://mui.com/base-ui/react-menu/)\n *\n * API:\n *\n * - [MenuButton API](https://mui.com/base-ui/react-menu/components-api/#menu-button)\n */const MenuButton=/*#__PURE__*/React.forwardRef(function MenuButton(props,forwardedRef){const{children,disabled=false,slots={},slotProps={},focusableWhenDisabled=false}=props,other=_objectWithoutPropertiesLoose(props,_excluded);const{getRootProps,open,active}=useMenuButton({disabled,focusableWhenDisabled,rootRef:forwardedRef});const ownerState=_extends({},props,{open,active,disabled,focusableWhenDisabled});const classes=useUtilityClasses(ownerState);const Root=slots.root||'button';const rootProps=useSlotProps({elementType:Root,getSlotProps:getRootProps,externalForwardedProps:other,externalSlotProps:slotProps.root,additionalProps:{ref:forwardedRef,type:'button'},ownerState,className:classes.root});return/*#__PURE__*/_jsx(Root,_extends({},rootProps,{children:children}));});process.env.NODE_ENV!==\"production\"?void 0:void 0;export{MenuButton};","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","useSlotProps","useMenuButton","unstable_composeClasses","composeClasses","useClassNamesOverride","getMenuButtonUtilityClass","jsx","_jsx","useUtilityClasses","ownerState","active","disabled","open","slots","root","MenuButton","forwardRef","props","forwardedRef","children","slotProps","focusableWhenDisabled","other","getRootProps","rootRef","classes","Root","rootProps","elementType","getSlotProps","externalForwardedProps","externalSlotProps","additionalProps","ref","type","className","process","env","NODE_ENV"],"sources":["/home/nevin/Project-2/test-react-auth/frontend/src/node_modules/@mui/base/MenuButton/MenuButton.js"],"sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"disabled\", \"label\", \"slots\", \"slotProps\", \"focusableWhenDisabled\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSlotProps } from '../utils';\nimport { useMenuButton } from '../useMenuButton';\nimport { unstable_composeClasses as composeClasses } from '../composeClasses';\nimport { useClassNamesOverride } from '../utils/ClassNameConfigurator';\nimport { getMenuButtonUtilityClass } from './menuButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    active,\n    disabled,\n    open\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', active && 'active', open && 'expanded']\n  };\n  return composeClasses(slots, useClassNamesOverride(getMenuButtonUtilityClass));\n};\n\n/**\n *\n * Demos:\n *\n * - [Menu](https://mui.com/base-ui/react-menu/)\n *\n * API:\n *\n * - [MenuButton API](https://mui.com/base-ui/react-menu/components-api/#menu-button)\n */\nconst MenuButton = /*#__PURE__*/React.forwardRef(function MenuButton(props, forwardedRef) {\n  const {\n      children,\n      disabled = false,\n      slots = {},\n      slotProps = {},\n      focusableWhenDisabled = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    getRootProps,\n    open,\n    active\n  } = useMenuButton({\n    disabled,\n    focusableWhenDisabled,\n    rootRef: forwardedRef\n  });\n  const ownerState = _extends({}, props, {\n    open,\n    active,\n    disabled,\n    focusableWhenDisabled\n  });\n  const classes = useUtilityClasses(ownerState);\n  const Root = slots.root || 'button';\n  const rootProps = useSlotProps({\n    elementType: Root,\n    getSlotProps: getRootProps,\n    externalForwardedProps: other,\n    externalSlotProps: slotProps.root,\n    additionalProps: {\n      ref: forwardedRef,\n      type: 'button'\n    },\n    ownerState,\n    className: classes.root\n  });\n  return /*#__PURE__*/_jsx(Root, _extends({}, rootProps, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuButton.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Class name applied to the root element.\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, allows a disabled button to receive focus.\n   * @default false\n   */\n  focusableWhenDisabled: PropTypes.bool,\n  /**\n   * Label of the button\n   */\n  label: PropTypes.string,\n  /**\n   * The components used for each slot inside the MenuButton.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The props used for each slot inside the MenuButton.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    root: PropTypes.elementType\n  })\n} : void 0;\nexport { MenuButton };"],"mappings":"AAAA,YAAY,CAEZ,MAAO,CAAAA,QAAQ,KAAM,oCAAoC,CACzD,MAAO,CAAAC,6BAA6B,KAAM,yDAAyD,CACnG,KAAM,CAAAC,SAAS,CAAG,CAAC,UAAU,CAAE,UAAU,CAAE,OAAO,CAAE,OAAO,CAAE,WAAW,CAAE,uBAAuB,CAAC,CAClG,MAAO,GAAK,CAAAC,KAAK,KAAM,OAAO,CAE9B,OAASC,YAAY,KAAQ,UAAU,CACvC,OAASC,aAAa,KAAQ,kBAAkB,CAChD,OAASC,uBAAuB,GAAI,CAAAC,cAAc,KAAQ,mBAAmB,CAC7E,OAASC,qBAAqB,KAAQ,gCAAgC,CACtE,OAASC,yBAAyB,KAAQ,qBAAqB,CAC/D,OAASC,GAAG,GAAI,CAAAC,IAAI,KAAQ,mBAAmB,CAC/C,KAAM,CAAAC,iBAAiB,CAAGC,UAAU,EAAI,CACtC,KAAM,CACJC,MAAM,CACNC,QAAQ,CACRC,IACF,CAAC,CAAGH,UAAU,CACd,KAAM,CAAAI,KAAK,CAAG,CACZC,IAAI,CAAE,CAAC,MAAM,CAAEH,QAAQ,EAAI,UAAU,CAAED,MAAM,EAAI,QAAQ,CAAEE,IAAI,EAAI,UAAU,CAC/E,CAAC,CACD,MAAO,CAAAT,cAAc,CAACU,KAAK,CAAET,qBAAqB,CAACC,yBAAyB,CAAC,CAAC,CAChF,CAAC,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,KAAM,CAAAU,UAAU,CAAG,aAAahB,KAAK,CAACiB,UAAU,CAAC,QAAS,CAAAD,UAAUA,CAACE,KAAK,CAAEC,YAAY,CAAE,CACxF,KAAM,CACFC,QAAQ,CACRR,QAAQ,CAAG,KAAK,CAChBE,KAAK,CAAG,CAAC,CAAC,CACVO,SAAS,CAAG,CAAC,CAAC,CACdC,qBAAqB,CAAG,KAC1B,CAAC,CAAGJ,KAAK,CACTK,KAAK,CAAGzB,6BAA6B,CAACoB,KAAK,CAAEnB,SAAS,CAAC,CACzD,KAAM,CACJyB,YAAY,CACZX,IAAI,CACJF,MACF,CAAC,CAAGT,aAAa,CAAC,CAChBU,QAAQ,CACRU,qBAAqB,CACrBG,OAAO,CAAEN,YACX,CAAC,CAAC,CACF,KAAM,CAAAT,UAAU,CAAGb,QAAQ,CAAC,CAAC,CAAC,CAAEqB,KAAK,CAAE,CACrCL,IAAI,CACJF,MAAM,CACNC,QAAQ,CACRU,qBACF,CAAC,CAAC,CACF,KAAM,CAAAI,OAAO,CAAGjB,iBAAiB,CAACC,UAAU,CAAC,CAC7C,KAAM,CAAAiB,IAAI,CAAGb,KAAK,CAACC,IAAI,EAAI,QAAQ,CACnC,KAAM,CAAAa,SAAS,CAAG3B,YAAY,CAAC,CAC7B4B,WAAW,CAAEF,IAAI,CACjBG,YAAY,CAAEN,YAAY,CAC1BO,sBAAsB,CAAER,KAAK,CAC7BS,iBAAiB,CAAEX,SAAS,CAACN,IAAI,CACjCkB,eAAe,CAAE,CACfC,GAAG,CAAEf,YAAY,CACjBgB,IAAI,CAAE,QACR,CAAC,CACDzB,UAAU,CACV0B,SAAS,CAAEV,OAAO,CAACX,IACrB,CAAC,CAAC,CACF,MAAO,aAAaP,IAAI,CAACmB,IAAI,CAAE9B,QAAQ,CAAC,CAAC,CAAC,CAAE+B,SAAS,CAAE,CACrDR,QAAQ,CAAEA,QACZ,CAAC,CAAC,CAAC,CACL,CAAC,CAAC,CACFiB,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAK,YAAY,QA0CjC,IAAK,EAAC,CACV,OAASvB,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module"}