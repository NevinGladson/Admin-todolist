{"ast":null,"code":"'use client';import _extends from\"@babel/runtime/helpers/esm/extends\";import _objectWithoutPropertiesLoose from\"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";const _excluded=[\"BackdropProps\"],_excluded2=[\"anchor\",\"disableBackdropTransition\",\"disableDiscovery\",\"disableSwipeToOpen\",\"hideBackdrop\",\"hysteresis\",\"allowSwipeInChildren\",\"minFlingVelocity\",\"ModalProps\",\"onClose\",\"onOpen\",\"open\",\"PaperProps\",\"SwipeAreaProps\",\"swipeAreaWidth\",\"transitionDuration\",\"variant\"];import*as React from'react';import*as ReactDOM from'react-dom';import elementTypeAcceptingRef from'@mui/utils/elementTypeAcceptingRef';import useThemeProps from'@mui/system/useThemeProps';import{NoSsr}from'@mui/base';import Drawer,{getAnchor,isHorizontal}from'../Drawer/Drawer';import useForkRef from'../utils/useForkRef';import ownerDocument from'../utils/ownerDocument';import ownerWindow from'../utils/ownerWindow';import useEventCallback from'../utils/useEventCallback';import useEnhancedEffect from'../utils/useEnhancedEffect';import useTheme from'../styles/useTheme';import{getTransitionProps}from'../transitions/utils';import SwipeArea from'./SwipeArea';// This value is closed to what browsers are using internally to\n// trigger a native scroll.\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const UNCERTAINTY_THRESHOLD=3;// px\n// This is the part of the drawer displayed on touch start.\nconst DRAG_STARTED_SIGNAL=20;// px\n// We can only have one instance at the time claiming ownership for handling the swipe.\n// Otherwise, the UX would be confusing.\n// That's why we use a singleton here.\nlet claimedSwipeInstance=null;// Exported for test purposes.\nexport function reset(){claimedSwipeInstance=null;}function calculateCurrentX(anchor,touches,doc){return anchor==='right'?doc.body.offsetWidth-touches[0].pageX:touches[0].pageX;}function calculateCurrentY(anchor,touches,containerWindow){return anchor==='bottom'?containerWindow.innerHeight-touches[0].clientY:touches[0].clientY;}function getMaxTranslate(horizontalSwipe,paperInstance){return horizontalSwipe?paperInstance.clientWidth:paperInstance.clientHeight;}function getTranslate(currentTranslate,startLocation,open,maxTranslate){return Math.min(Math.max(open?startLocation-currentTranslate:maxTranslate+startLocation-currentTranslate,0),maxTranslate);}/**\n * @param {Element | null} element\n * @param {Element} rootNode\n */function getDomTreeShapes(element,rootNode){// Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L129\nconst domTreeShapes=[];while(element&&element!==rootNode.parentElement){const style=ownerWindow(rootNode).getComputedStyle(element);if(// Ignore the scroll children if the element is absolute positioned.\nstyle.getPropertyValue('position')==='absolute'||// Ignore the scroll children if the element has an overflowX hidden\nstyle.getPropertyValue('overflow-x')==='hidden'){// noop\n}else if(element.clientWidth>0&&element.scrollWidth>element.clientWidth||element.clientHeight>0&&element.scrollHeight>element.clientHeight){// Ignore the nodes that have no width.\n// Keep elements with a scroll\ndomTreeShapes.push(element);}element=element.parentElement;}return domTreeShapes;}/**\n * @param {object} param0\n * @param {ReturnType<getDomTreeShapes>} param0.domTreeShapes\n */function computeHasNativeHandler(_ref){let{domTreeShapes,start,current,anchor}=_ref;// Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L175\nconst axisProperties={scrollPosition:{x:'scrollLeft',y:'scrollTop'},scrollLength:{x:'scrollWidth',y:'scrollHeight'},clientLength:{x:'clientWidth',y:'clientHeight'}};return domTreeShapes.some(shape=>{// Determine if we are going backward or forward.\nlet goingForward=current>=start;if(anchor==='top'||anchor==='left'){goingForward=!goingForward;}const axis=anchor==='left'||anchor==='right'?'x':'y';const scrollPosition=Math.round(shape[axisProperties.scrollPosition[axis]]);const areNotAtStart=scrollPosition>0;const areNotAtEnd=scrollPosition+shape[axisProperties.clientLength[axis]]<shape[axisProperties.scrollLength[axis]];if(goingForward&&areNotAtEnd||!goingForward&&areNotAtStart){return true;}return false;});}const iOS=typeof navigator!=='undefined'&&/iPad|iPhone|iPod/.test(navigator.userAgent);const SwipeableDrawer=/*#__PURE__*/React.forwardRef(function SwipeableDrawer(inProps,ref){const props=useThemeProps({name:'MuiSwipeableDrawer',props:inProps});const theme=useTheme();const transitionDurationDefault={enter:theme.transitions.duration.enteringScreen,exit:theme.transitions.duration.leavingScreen};const{anchor='left',disableBackdropTransition=false,disableDiscovery=false,disableSwipeToOpen=iOS,hideBackdrop,hysteresis=0.52,allowSwipeInChildren=false,minFlingVelocity=450,ModalProps:{BackdropProps}={},onClose,onOpen,open=false,PaperProps={},SwipeAreaProps,swipeAreaWidth=20,transitionDuration=transitionDurationDefault,variant='temporary'// Mobile first.\n}=props,ModalPropsProp=_objectWithoutPropertiesLoose(props.ModalProps,_excluded),other=_objectWithoutPropertiesLoose(props,_excluded2);const[maybeSwiping,setMaybeSwiping]=React.useState(false);const swipeInstance=React.useRef({isSwiping:null});const swipeAreaRef=React.useRef();const backdropRef=React.useRef();const paperRef=React.useRef();const handleRef=useForkRef(PaperProps.ref,paperRef);const touchDetected=React.useRef(false);// Ref for transition duration based on / to match swipe speed\nconst calculatedDurationRef=React.useRef();// Use a ref so the open value used is always up to date inside useCallback.\nuseEnhancedEffect(()=>{calculatedDurationRef.current=null;},[open]);const setPosition=React.useCallback(function(translate){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};const{mode=null,changeTransition=true}=options;const anchorRtl=getAnchor(theme,anchor);const rtlTranslateMultiplier=['right','bottom'].indexOf(anchorRtl)!==-1?1:-1;const horizontalSwipe=isHorizontal(anchor);const transform=horizontalSwipe?\"translate(\".concat(rtlTranslateMultiplier*translate,\"px, 0)\"):\"translate(0, \".concat(rtlTranslateMultiplier*translate,\"px)\");const drawerStyle=paperRef.current.style;drawerStyle.webkitTransform=transform;drawerStyle.transform=transform;let transition='';if(mode){transition=theme.transitions.create('all',getTransitionProps({easing:undefined,style:undefined,timeout:transitionDuration},{mode}));}if(changeTransition){drawerStyle.webkitTransition=transition;drawerStyle.transition=transition;}if(!disableBackdropTransition&&!hideBackdrop){const backdropStyle=backdropRef.current.style;backdropStyle.opacity=1-translate/getMaxTranslate(horizontalSwipe,paperRef.current);if(changeTransition){backdropStyle.webkitTransition=transition;backdropStyle.transition=transition;}}},[anchor,disableBackdropTransition,hideBackdrop,theme,transitionDuration]);const handleBodyTouchEnd=useEventCallback(nativeEvent=>{if(!touchDetected.current){return;}claimedSwipeInstance=null;touchDetected.current=false;ReactDOM.flushSync(()=>{setMaybeSwiping(false);});// The swipe wasn't started.\nif(!swipeInstance.current.isSwiping){swipeInstance.current.isSwiping=null;return;}swipeInstance.current.isSwiping=null;const anchorRtl=getAnchor(theme,anchor);const horizontal=isHorizontal(anchor);let current;if(horizontal){current=calculateCurrentX(anchorRtl,nativeEvent.changedTouches,ownerDocument(nativeEvent.currentTarget));}else{current=calculateCurrentY(anchorRtl,nativeEvent.changedTouches,ownerWindow(nativeEvent.currentTarget));}const startLocation=horizontal?swipeInstance.current.startX:swipeInstance.current.startY;const maxTranslate=getMaxTranslate(horizontal,paperRef.current);const currentTranslate=getTranslate(current,startLocation,open,maxTranslate);const translateRatio=currentTranslate/maxTranslate;if(Math.abs(swipeInstance.current.velocity)>minFlingVelocity){// Calculate transition duration to match swipe speed\ncalculatedDurationRef.current=Math.abs((maxTranslate-currentTranslate)/swipeInstance.current.velocity)*1000;}if(open){if(swipeInstance.current.velocity>minFlingVelocity||translateRatio>hysteresis){onClose();}else{// Reset the position, the swipe was aborted.\nsetPosition(0,{mode:'exit'});}return;}if(swipeInstance.current.velocity<-minFlingVelocity||1-translateRatio>hysteresis){onOpen();}else{// Reset the position, the swipe was aborted.\nsetPosition(getMaxTranslate(horizontal,paperRef.current),{mode:'enter'});}});const startMaybeSwiping=function(){let force=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;if(!maybeSwiping){// on Safari Mobile, if you want to be able to have the 'click' event fired on child elements, nothing in the DOM can be changed.\n// this is because Safari Mobile will not fire any mouse events (still fires touch though) if the DOM changes during mousemove.\n// so do this change on first touchmove instead of touchstart\nif(force||!(disableDiscovery&&allowSwipeInChildren)){ReactDOM.flushSync(()=>{setMaybeSwiping(true);});}const horizontalSwipe=isHorizontal(anchor);if(!open&&paperRef.current){// The ref may be null when a parent component updates while swiping.\nsetPosition(getMaxTranslate(horizontalSwipe,paperRef.current)+(disableDiscovery?15:-DRAG_STARTED_SIGNAL),{changeTransition:false});}swipeInstance.current.velocity=0;swipeInstance.current.lastTime=null;swipeInstance.current.lastTranslate=null;swipeInstance.current.paperHit=false;touchDetected.current=true;}};const handleBodyTouchMove=useEventCallback(nativeEvent=>{// the ref may be null when a parent component updates while swiping\nif(!paperRef.current||!touchDetected.current){return;}// We are not supposed to handle this touch move because the swipe was started in a scrollable container in the drawer\nif(claimedSwipeInstance!==null&&claimedSwipeInstance!==swipeInstance.current){return;}startMaybeSwiping(true);const anchorRtl=getAnchor(theme,anchor);const horizontalSwipe=isHorizontal(anchor);const currentX=calculateCurrentX(anchorRtl,nativeEvent.touches,ownerDocument(nativeEvent.currentTarget));const currentY=calculateCurrentY(anchorRtl,nativeEvent.touches,ownerWindow(nativeEvent.currentTarget));if(open&&paperRef.current.contains(nativeEvent.target)&&claimedSwipeInstance===null){const domTreeShapes=getDomTreeShapes(nativeEvent.target,paperRef.current);const hasNativeHandler=computeHasNativeHandler({domTreeShapes,start:horizontalSwipe?swipeInstance.current.startX:swipeInstance.current.startY,current:horizontalSwipe?currentX:currentY,anchor});if(hasNativeHandler){claimedSwipeInstance=true;return;}claimedSwipeInstance=swipeInstance.current;}// We don't know yet.\nif(swipeInstance.current.isSwiping==null){const dx=Math.abs(currentX-swipeInstance.current.startX);const dy=Math.abs(currentY-swipeInstance.current.startY);const definitelySwiping=horizontalSwipe?dx>dy&&dx>UNCERTAINTY_THRESHOLD:dy>dx&&dy>UNCERTAINTY_THRESHOLD;if(definitelySwiping&&nativeEvent.cancelable){nativeEvent.preventDefault();}if(definitelySwiping===true||(horizontalSwipe?dy>UNCERTAINTY_THRESHOLD:dx>UNCERTAINTY_THRESHOLD)){swipeInstance.current.isSwiping=definitelySwiping;if(!definitelySwiping){handleBodyTouchEnd(nativeEvent);return;}// Shift the starting point.\nswipeInstance.current.startX=currentX;swipeInstance.current.startY=currentY;// Compensate for the part of the drawer displayed on touch start.\nif(!disableDiscovery&&!open){if(horizontalSwipe){swipeInstance.current.startX-=DRAG_STARTED_SIGNAL;}else{swipeInstance.current.startY-=DRAG_STARTED_SIGNAL;}}}}if(!swipeInstance.current.isSwiping){return;}const maxTranslate=getMaxTranslate(horizontalSwipe,paperRef.current);let startLocation=horizontalSwipe?swipeInstance.current.startX:swipeInstance.current.startY;if(open&&!swipeInstance.current.paperHit){startLocation=Math.min(startLocation,maxTranslate);}const translate=getTranslate(horizontalSwipe?currentX:currentY,startLocation,open,maxTranslate);if(open){if(!swipeInstance.current.paperHit){const paperHit=horizontalSwipe?currentX<maxTranslate:currentY<maxTranslate;if(paperHit){swipeInstance.current.paperHit=true;swipeInstance.current.startX=currentX;swipeInstance.current.startY=currentY;}else{return;}}else if(translate===0){swipeInstance.current.startX=currentX;swipeInstance.current.startY=currentY;}}if(swipeInstance.current.lastTranslate===null){swipeInstance.current.lastTranslate=translate;swipeInstance.current.lastTime=performance.now()+1;}const velocity=(translate-swipeInstance.current.lastTranslate)/(performance.now()-swipeInstance.current.lastTime)*1e3;// Low Pass filter.\nswipeInstance.current.velocity=swipeInstance.current.velocity*0.4+velocity*0.6;swipeInstance.current.lastTranslate=translate;swipeInstance.current.lastTime=performance.now();// We are swiping, let's prevent the scroll event on iOS.\nif(nativeEvent.cancelable){nativeEvent.preventDefault();}setPosition(translate);});const handleBodyTouchStart=useEventCallback(nativeEvent=>{// We are not supposed to handle this touch move.\n// Example of use case: ignore the event if there is a Slider.\nif(nativeEvent.defaultPrevented){return;}// We can only have one node at the time claiming ownership for handling the swipe.\nif(nativeEvent.defaultMuiPrevented){return;}// At least one element clogs the drawer interaction zone.\nif(open&&(hideBackdrop||!backdropRef.current.contains(nativeEvent.target))&&!paperRef.current.contains(nativeEvent.target)){return;}const anchorRtl=getAnchor(theme,anchor);const horizontalSwipe=isHorizontal(anchor);const currentX=calculateCurrentX(anchorRtl,nativeEvent.touches,ownerDocument(nativeEvent.currentTarget));const currentY=calculateCurrentY(anchorRtl,nativeEvent.touches,ownerWindow(nativeEvent.currentTarget));if(!open){var _paperRef$current;// logic for if swipe should be ignored:\n// if disableSwipeToOpen\n// if target != swipeArea, and target is not a child of paper ref\n// if is a child of paper ref, and `allowSwipeInChildren` does not allow it\nif(disableSwipeToOpen||!(nativeEvent.target===swipeAreaRef.current||(_paperRef$current=paperRef.current)!=null&&_paperRef$current.contains(nativeEvent.target)&&(typeof allowSwipeInChildren==='function'?allowSwipeInChildren(nativeEvent,swipeAreaRef.current,paperRef.current):allowSwipeInChildren))){return;}if(horizontalSwipe){if(currentX>swipeAreaWidth){return;}}else if(currentY>swipeAreaWidth){return;}}nativeEvent.defaultMuiPrevented=true;claimedSwipeInstance=null;swipeInstance.current.startX=currentX;swipeInstance.current.startY=currentY;startMaybeSwiping();});React.useEffect(()=>{if(variant==='temporary'){const doc=ownerDocument(paperRef.current);doc.addEventListener('touchstart',handleBodyTouchStart);// A blocking listener prevents Firefox's navbar to auto-hide on scroll.\n// It only needs to prevent scrolling on the drawer's content when open.\n// When closed, the overlay prevents scrolling.\ndoc.addEventListener('touchmove',handleBodyTouchMove,{passive:!open});doc.addEventListener('touchend',handleBodyTouchEnd);return()=>{doc.removeEventListener('touchstart',handleBodyTouchStart);doc.removeEventListener('touchmove',handleBodyTouchMove,{passive:!open});doc.removeEventListener('touchend',handleBodyTouchEnd);};}return undefined;},[variant,open,handleBodyTouchStart,handleBodyTouchMove,handleBodyTouchEnd]);React.useEffect(()=>()=>{// We need to release the lock.\nif(claimedSwipeInstance===swipeInstance.current){claimedSwipeInstance=null;}},[]);React.useEffect(()=>{if(!open){setMaybeSwiping(false);}},[open]);return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(Drawer,_extends({open:variant==='temporary'&&maybeSwiping?true:open,variant:variant,ModalProps:_extends({BackdropProps:_extends({},BackdropProps,{ref:backdropRef})},variant==='temporary'&&{keepMounted:true},ModalPropsProp),hideBackdrop:hideBackdrop,PaperProps:_extends({},PaperProps,{style:_extends({pointerEvents:variant==='temporary'&&!open&&!allowSwipeInChildren?'none':''},PaperProps.style),ref:handleRef}),anchor:anchor,transitionDuration:calculatedDurationRef.current||transitionDuration,onClose:onClose,ref:ref},other)),!disableSwipeToOpen&&variant==='temporary'&&/*#__PURE__*/_jsx(NoSsr,{children:/*#__PURE__*/_jsx(SwipeArea,_extends({anchor:anchor,ref:swipeAreaRef,width:swipeAreaWidth},SwipeAreaProps))})]});});process.env.NODE_ENV!==\"production\"?void 0:void 0;export default SwipeableDrawer;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","_excluded2","React","ReactDOM","elementTypeAcceptingRef","useThemeProps","NoSsr","Drawer","getAnchor","isHorizontal","useForkRef","ownerDocument","ownerWindow","useEventCallback","useEnhancedEffect","useTheme","getTransitionProps","SwipeArea","jsx","_jsx","jsxs","_jsxs","UNCERTAINTY_THRESHOLD","DRAG_STARTED_SIGNAL","claimedSwipeInstance","reset","calculateCurrentX","anchor","touches","doc","body","offsetWidth","pageX","calculateCurrentY","containerWindow","innerHeight","clientY","getMaxTranslate","horizontalSwipe","paperInstance","clientWidth","clientHeight","getTranslate","currentTranslate","startLocation","open","maxTranslate","Math","min","max","getDomTreeShapes","element","rootNode","domTreeShapes","parentElement","style","getComputedStyle","getPropertyValue","scrollWidth","scrollHeight","push","computeHasNativeHandler","_ref","start","current","axisProperties","scrollPosition","x","y","scrollLength","clientLength","some","shape","goingForward","axis","round","areNotAtStart","areNotAtEnd","iOS","navigator","test","userAgent","SwipeableDrawer","forwardRef","inProps","ref","props","name","theme","transitionDurationDefault","enter","transitions","duration","enteringScreen","exit","leavingScreen","disableBackdropTransition","disableDiscovery","disableSwipeToOpen","hideBackdrop","hysteresis","allowSwipeInChildren","minFlingVelocity","ModalProps","BackdropProps","onClose","onOpen","PaperProps","SwipeAreaProps","swipeAreaWidth","transitionDuration","variant","ModalPropsProp","other","maybeSwiping","setMaybeSwiping","useState","swipeInstance","useRef","isSwiping","swipeAreaRef","backdropRef","paperRef","handleRef","touchDetected","calculatedDurationRef","setPosition","useCallback","translate","options","arguments","length","undefined","mode","changeTransition","anchorRtl","rtlTranslateMultiplier","indexOf","transform","concat","drawerStyle","webkitTransform","transition","create","easing","timeout","webkitTransition","backdropStyle","opacity","handleBodyTouchEnd","nativeEvent","flushSync","horizontal","changedTouches","currentTarget","startX","startY","translateRatio","abs","velocity","startMaybeSwiping","force","lastTime","lastTranslate","paperHit","handleBodyTouchMove","currentX","currentY","contains","target","hasNativeHandler","dx","dy","definitelySwiping","cancelable","preventDefault","performance","now","handleBodyTouchStart","defaultPrevented","defaultMuiPrevented","_paperRef$current","useEffect","addEventListener","passive","removeEventListener","Fragment","children","keepMounted","pointerEvents","width","process","env","NODE_ENV"],"sources":["/home/nevin/Project-2/test-react-auth/frontend/src/node_modules/@mui/material/SwipeableDrawer/SwipeableDrawer.js"],"sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"BackdropProps\"],\n  _excluded2 = [\"anchor\", \"disableBackdropTransition\", \"disableDiscovery\", \"disableSwipeToOpen\", \"hideBackdrop\", \"hysteresis\", \"allowSwipeInChildren\", \"minFlingVelocity\", \"ModalProps\", \"onClose\", \"onOpen\", \"open\", \"PaperProps\", \"SwipeAreaProps\", \"swipeAreaWidth\", \"transitionDuration\", \"variant\"];\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport elementTypeAcceptingRef from '@mui/utils/elementTypeAcceptingRef';\nimport useThemeProps from '@mui/system/useThemeProps';\nimport { NoSsr } from '@mui/base';\nimport Drawer, { getAnchor, isHorizontal } from '../Drawer/Drawer';\nimport useForkRef from '../utils/useForkRef';\nimport ownerDocument from '../utils/ownerDocument';\nimport ownerWindow from '../utils/ownerWindow';\nimport useEventCallback from '../utils/useEventCallback';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\nimport useTheme from '../styles/useTheme';\nimport { getTransitionProps } from '../transitions/utils';\nimport SwipeArea from './SwipeArea';\n\n// This value is closed to what browsers are using internally to\n// trigger a native scroll.\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst UNCERTAINTY_THRESHOLD = 3; // px\n\n// This is the part of the drawer displayed on touch start.\nconst DRAG_STARTED_SIGNAL = 20; // px\n\n// We can only have one instance at the time claiming ownership for handling the swipe.\n// Otherwise, the UX would be confusing.\n// That's why we use a singleton here.\nlet claimedSwipeInstance = null;\n\n// Exported for test purposes.\nexport function reset() {\n  claimedSwipeInstance = null;\n}\nfunction calculateCurrentX(anchor, touches, doc) {\n  return anchor === 'right' ? doc.body.offsetWidth - touches[0].pageX : touches[0].pageX;\n}\nfunction calculateCurrentY(anchor, touches, containerWindow) {\n  return anchor === 'bottom' ? containerWindow.innerHeight - touches[0].clientY : touches[0].clientY;\n}\nfunction getMaxTranslate(horizontalSwipe, paperInstance) {\n  return horizontalSwipe ? paperInstance.clientWidth : paperInstance.clientHeight;\n}\nfunction getTranslate(currentTranslate, startLocation, open, maxTranslate) {\n  return Math.min(Math.max(open ? startLocation - currentTranslate : maxTranslate + startLocation - currentTranslate, 0), maxTranslate);\n}\n\n/**\n * @param {Element | null} element\n * @param {Element} rootNode\n */\nfunction getDomTreeShapes(element, rootNode) {\n  // Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L129\n  const domTreeShapes = [];\n  while (element && element !== rootNode.parentElement) {\n    const style = ownerWindow(rootNode).getComputedStyle(element);\n    if (\n    // Ignore the scroll children if the element is absolute positioned.\n    style.getPropertyValue('position') === 'absolute' ||\n    // Ignore the scroll children if the element has an overflowX hidden\n    style.getPropertyValue('overflow-x') === 'hidden') {\n      // noop\n    } else if (element.clientWidth > 0 && element.scrollWidth > element.clientWidth || element.clientHeight > 0 && element.scrollHeight > element.clientHeight) {\n      // Ignore the nodes that have no width.\n      // Keep elements with a scroll\n      domTreeShapes.push(element);\n    }\n    element = element.parentElement;\n  }\n  return domTreeShapes;\n}\n\n/**\n * @param {object} param0\n * @param {ReturnType<getDomTreeShapes>} param0.domTreeShapes\n */\nfunction computeHasNativeHandler({\n  domTreeShapes,\n  start,\n  current,\n  anchor\n}) {\n  // Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L175\n  const axisProperties = {\n    scrollPosition: {\n      x: 'scrollLeft',\n      y: 'scrollTop'\n    },\n    scrollLength: {\n      x: 'scrollWidth',\n      y: 'scrollHeight'\n    },\n    clientLength: {\n      x: 'clientWidth',\n      y: 'clientHeight'\n    }\n  };\n  return domTreeShapes.some(shape => {\n    // Determine if we are going backward or forward.\n    let goingForward = current >= start;\n    if (anchor === 'top' || anchor === 'left') {\n      goingForward = !goingForward;\n    }\n    const axis = anchor === 'left' || anchor === 'right' ? 'x' : 'y';\n    const scrollPosition = Math.round(shape[axisProperties.scrollPosition[axis]]);\n    const areNotAtStart = scrollPosition > 0;\n    const areNotAtEnd = scrollPosition + shape[axisProperties.clientLength[axis]] < shape[axisProperties.scrollLength[axis]];\n    if (goingForward && areNotAtEnd || !goingForward && areNotAtStart) {\n      return true;\n    }\n    return false;\n  });\n}\nconst iOS = typeof navigator !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent);\nconst SwipeableDrawer = /*#__PURE__*/React.forwardRef(function SwipeableDrawer(inProps, ref) {\n  const props = useThemeProps({\n    name: 'MuiSwipeableDrawer',\n    props: inProps\n  });\n  const theme = useTheme();\n  const transitionDurationDefault = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen\n  };\n  const {\n      anchor = 'left',\n      disableBackdropTransition = false,\n      disableDiscovery = false,\n      disableSwipeToOpen = iOS,\n      hideBackdrop,\n      hysteresis = 0.52,\n      allowSwipeInChildren = false,\n      minFlingVelocity = 450,\n      ModalProps: {\n        BackdropProps\n      } = {},\n      onClose,\n      onOpen,\n      open = false,\n      PaperProps = {},\n      SwipeAreaProps,\n      swipeAreaWidth = 20,\n      transitionDuration = transitionDurationDefault,\n      variant = 'temporary' // Mobile first.\n    } = props,\n    ModalPropsProp = _objectWithoutPropertiesLoose(props.ModalProps, _excluded),\n    other = _objectWithoutPropertiesLoose(props, _excluded2);\n  const [maybeSwiping, setMaybeSwiping] = React.useState(false);\n  const swipeInstance = React.useRef({\n    isSwiping: null\n  });\n  const swipeAreaRef = React.useRef();\n  const backdropRef = React.useRef();\n  const paperRef = React.useRef();\n  const handleRef = useForkRef(PaperProps.ref, paperRef);\n  const touchDetected = React.useRef(false);\n\n  // Ref for transition duration based on / to match swipe speed\n  const calculatedDurationRef = React.useRef();\n\n  // Use a ref so the open value used is always up to date inside useCallback.\n  useEnhancedEffect(() => {\n    calculatedDurationRef.current = null;\n  }, [open]);\n  const setPosition = React.useCallback((translate, options = {}) => {\n    const {\n      mode = null,\n      changeTransition = true\n    } = options;\n    const anchorRtl = getAnchor(theme, anchor);\n    const rtlTranslateMultiplier = ['right', 'bottom'].indexOf(anchorRtl) !== -1 ? 1 : -1;\n    const horizontalSwipe = isHorizontal(anchor);\n    const transform = horizontalSwipe ? `translate(${rtlTranslateMultiplier * translate}px, 0)` : `translate(0, ${rtlTranslateMultiplier * translate}px)`;\n    const drawerStyle = paperRef.current.style;\n    drawerStyle.webkitTransform = transform;\n    drawerStyle.transform = transform;\n    let transition = '';\n    if (mode) {\n      transition = theme.transitions.create('all', getTransitionProps({\n        easing: undefined,\n        style: undefined,\n        timeout: transitionDuration\n      }, {\n        mode\n      }));\n    }\n    if (changeTransition) {\n      drawerStyle.webkitTransition = transition;\n      drawerStyle.transition = transition;\n    }\n    if (!disableBackdropTransition && !hideBackdrop) {\n      const backdropStyle = backdropRef.current.style;\n      backdropStyle.opacity = 1 - translate / getMaxTranslate(horizontalSwipe, paperRef.current);\n      if (changeTransition) {\n        backdropStyle.webkitTransition = transition;\n        backdropStyle.transition = transition;\n      }\n    }\n  }, [anchor, disableBackdropTransition, hideBackdrop, theme, transitionDuration]);\n  const handleBodyTouchEnd = useEventCallback(nativeEvent => {\n    if (!touchDetected.current) {\n      return;\n    }\n    claimedSwipeInstance = null;\n    touchDetected.current = false;\n    ReactDOM.flushSync(() => {\n      setMaybeSwiping(false);\n    });\n\n    // The swipe wasn't started.\n    if (!swipeInstance.current.isSwiping) {\n      swipeInstance.current.isSwiping = null;\n      return;\n    }\n    swipeInstance.current.isSwiping = null;\n    const anchorRtl = getAnchor(theme, anchor);\n    const horizontal = isHorizontal(anchor);\n    let current;\n    if (horizontal) {\n      current = calculateCurrentX(anchorRtl, nativeEvent.changedTouches, ownerDocument(nativeEvent.currentTarget));\n    } else {\n      current = calculateCurrentY(anchorRtl, nativeEvent.changedTouches, ownerWindow(nativeEvent.currentTarget));\n    }\n    const startLocation = horizontal ? swipeInstance.current.startX : swipeInstance.current.startY;\n    const maxTranslate = getMaxTranslate(horizontal, paperRef.current);\n    const currentTranslate = getTranslate(current, startLocation, open, maxTranslate);\n    const translateRatio = currentTranslate / maxTranslate;\n    if (Math.abs(swipeInstance.current.velocity) > minFlingVelocity) {\n      // Calculate transition duration to match swipe speed\n      calculatedDurationRef.current = Math.abs((maxTranslate - currentTranslate) / swipeInstance.current.velocity) * 1000;\n    }\n    if (open) {\n      if (swipeInstance.current.velocity > minFlingVelocity || translateRatio > hysteresis) {\n        onClose();\n      } else {\n        // Reset the position, the swipe was aborted.\n        setPosition(0, {\n          mode: 'exit'\n        });\n      }\n      return;\n    }\n    if (swipeInstance.current.velocity < -minFlingVelocity || 1 - translateRatio > hysteresis) {\n      onOpen();\n    } else {\n      // Reset the position, the swipe was aborted.\n      setPosition(getMaxTranslate(horizontal, paperRef.current), {\n        mode: 'enter'\n      });\n    }\n  });\n  const startMaybeSwiping = (force = false) => {\n    if (!maybeSwiping) {\n      // on Safari Mobile, if you want to be able to have the 'click' event fired on child elements, nothing in the DOM can be changed.\n      // this is because Safari Mobile will not fire any mouse events (still fires touch though) if the DOM changes during mousemove.\n      // so do this change on first touchmove instead of touchstart\n      if (force || !(disableDiscovery && allowSwipeInChildren)) {\n        ReactDOM.flushSync(() => {\n          setMaybeSwiping(true);\n        });\n      }\n      const horizontalSwipe = isHorizontal(anchor);\n      if (!open && paperRef.current) {\n        // The ref may be null when a parent component updates while swiping.\n        setPosition(getMaxTranslate(horizontalSwipe, paperRef.current) + (disableDiscovery ? 15 : -DRAG_STARTED_SIGNAL), {\n          changeTransition: false\n        });\n      }\n      swipeInstance.current.velocity = 0;\n      swipeInstance.current.lastTime = null;\n      swipeInstance.current.lastTranslate = null;\n      swipeInstance.current.paperHit = false;\n      touchDetected.current = true;\n    }\n  };\n  const handleBodyTouchMove = useEventCallback(nativeEvent => {\n    // the ref may be null when a parent component updates while swiping\n    if (!paperRef.current || !touchDetected.current) {\n      return;\n    }\n\n    // We are not supposed to handle this touch move because the swipe was started in a scrollable container in the drawer\n    if (claimedSwipeInstance !== null && claimedSwipeInstance !== swipeInstance.current) {\n      return;\n    }\n    startMaybeSwiping(true);\n    const anchorRtl = getAnchor(theme, anchor);\n    const horizontalSwipe = isHorizontal(anchor);\n    const currentX = calculateCurrentX(anchorRtl, nativeEvent.touches, ownerDocument(nativeEvent.currentTarget));\n    const currentY = calculateCurrentY(anchorRtl, nativeEvent.touches, ownerWindow(nativeEvent.currentTarget));\n    if (open && paperRef.current.contains(nativeEvent.target) && claimedSwipeInstance === null) {\n      const domTreeShapes = getDomTreeShapes(nativeEvent.target, paperRef.current);\n      const hasNativeHandler = computeHasNativeHandler({\n        domTreeShapes,\n        start: horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY,\n        current: horizontalSwipe ? currentX : currentY,\n        anchor\n      });\n      if (hasNativeHandler) {\n        claimedSwipeInstance = true;\n        return;\n      }\n      claimedSwipeInstance = swipeInstance.current;\n    }\n\n    // We don't know yet.\n    if (swipeInstance.current.isSwiping == null) {\n      const dx = Math.abs(currentX - swipeInstance.current.startX);\n      const dy = Math.abs(currentY - swipeInstance.current.startY);\n      const definitelySwiping = horizontalSwipe ? dx > dy && dx > UNCERTAINTY_THRESHOLD : dy > dx && dy > UNCERTAINTY_THRESHOLD;\n      if (definitelySwiping && nativeEvent.cancelable) {\n        nativeEvent.preventDefault();\n      }\n      if (definitelySwiping === true || (horizontalSwipe ? dy > UNCERTAINTY_THRESHOLD : dx > UNCERTAINTY_THRESHOLD)) {\n        swipeInstance.current.isSwiping = definitelySwiping;\n        if (!definitelySwiping) {\n          handleBodyTouchEnd(nativeEvent);\n          return;\n        }\n\n        // Shift the starting point.\n        swipeInstance.current.startX = currentX;\n        swipeInstance.current.startY = currentY;\n\n        // Compensate for the part of the drawer displayed on touch start.\n        if (!disableDiscovery && !open) {\n          if (horizontalSwipe) {\n            swipeInstance.current.startX -= DRAG_STARTED_SIGNAL;\n          } else {\n            swipeInstance.current.startY -= DRAG_STARTED_SIGNAL;\n          }\n        }\n      }\n    }\n    if (!swipeInstance.current.isSwiping) {\n      return;\n    }\n    const maxTranslate = getMaxTranslate(horizontalSwipe, paperRef.current);\n    let startLocation = horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY;\n    if (open && !swipeInstance.current.paperHit) {\n      startLocation = Math.min(startLocation, maxTranslate);\n    }\n    const translate = getTranslate(horizontalSwipe ? currentX : currentY, startLocation, open, maxTranslate);\n    if (open) {\n      if (!swipeInstance.current.paperHit) {\n        const paperHit = horizontalSwipe ? currentX < maxTranslate : currentY < maxTranslate;\n        if (paperHit) {\n          swipeInstance.current.paperHit = true;\n          swipeInstance.current.startX = currentX;\n          swipeInstance.current.startY = currentY;\n        } else {\n          return;\n        }\n      } else if (translate === 0) {\n        swipeInstance.current.startX = currentX;\n        swipeInstance.current.startY = currentY;\n      }\n    }\n    if (swipeInstance.current.lastTranslate === null) {\n      swipeInstance.current.lastTranslate = translate;\n      swipeInstance.current.lastTime = performance.now() + 1;\n    }\n    const velocity = (translate - swipeInstance.current.lastTranslate) / (performance.now() - swipeInstance.current.lastTime) * 1e3;\n\n    // Low Pass filter.\n    swipeInstance.current.velocity = swipeInstance.current.velocity * 0.4 + velocity * 0.6;\n    swipeInstance.current.lastTranslate = translate;\n    swipeInstance.current.lastTime = performance.now();\n\n    // We are swiping, let's prevent the scroll event on iOS.\n    if (nativeEvent.cancelable) {\n      nativeEvent.preventDefault();\n    }\n    setPosition(translate);\n  });\n  const handleBodyTouchStart = useEventCallback(nativeEvent => {\n    // We are not supposed to handle this touch move.\n    // Example of use case: ignore the event if there is a Slider.\n    if (nativeEvent.defaultPrevented) {\n      return;\n    }\n\n    // We can only have one node at the time claiming ownership for handling the swipe.\n    if (nativeEvent.defaultMuiPrevented) {\n      return;\n    }\n\n    // At least one element clogs the drawer interaction zone.\n    if (open && (hideBackdrop || !backdropRef.current.contains(nativeEvent.target)) && !paperRef.current.contains(nativeEvent.target)) {\n      return;\n    }\n    const anchorRtl = getAnchor(theme, anchor);\n    const horizontalSwipe = isHorizontal(anchor);\n    const currentX = calculateCurrentX(anchorRtl, nativeEvent.touches, ownerDocument(nativeEvent.currentTarget));\n    const currentY = calculateCurrentY(anchorRtl, nativeEvent.touches, ownerWindow(nativeEvent.currentTarget));\n    if (!open) {\n      var _paperRef$current;\n      // logic for if swipe should be ignored:\n      // if disableSwipeToOpen\n      // if target != swipeArea, and target is not a child of paper ref\n      // if is a child of paper ref, and `allowSwipeInChildren` does not allow it\n      if (disableSwipeToOpen || !(nativeEvent.target === swipeAreaRef.current || (_paperRef$current = paperRef.current) != null && _paperRef$current.contains(nativeEvent.target) && (typeof allowSwipeInChildren === 'function' ? allowSwipeInChildren(nativeEvent, swipeAreaRef.current, paperRef.current) : allowSwipeInChildren))) {\n        return;\n      }\n      if (horizontalSwipe) {\n        if (currentX > swipeAreaWidth) {\n          return;\n        }\n      } else if (currentY > swipeAreaWidth) {\n        return;\n      }\n    }\n    nativeEvent.defaultMuiPrevented = true;\n    claimedSwipeInstance = null;\n    swipeInstance.current.startX = currentX;\n    swipeInstance.current.startY = currentY;\n    startMaybeSwiping();\n  });\n  React.useEffect(() => {\n    if (variant === 'temporary') {\n      const doc = ownerDocument(paperRef.current);\n      doc.addEventListener('touchstart', handleBodyTouchStart);\n      // A blocking listener prevents Firefox's navbar to auto-hide on scroll.\n      // It only needs to prevent scrolling on the drawer's content when open.\n      // When closed, the overlay prevents scrolling.\n      doc.addEventListener('touchmove', handleBodyTouchMove, {\n        passive: !open\n      });\n      doc.addEventListener('touchend', handleBodyTouchEnd);\n      return () => {\n        doc.removeEventListener('touchstart', handleBodyTouchStart);\n        doc.removeEventListener('touchmove', handleBodyTouchMove, {\n          passive: !open\n        });\n        doc.removeEventListener('touchend', handleBodyTouchEnd);\n      };\n    }\n    return undefined;\n  }, [variant, open, handleBodyTouchStart, handleBodyTouchMove, handleBodyTouchEnd]);\n  React.useEffect(() => () => {\n    // We need to release the lock.\n    if (claimedSwipeInstance === swipeInstance.current) {\n      claimedSwipeInstance = null;\n    }\n  }, []);\n  React.useEffect(() => {\n    if (!open) {\n      setMaybeSwiping(false);\n    }\n  }, [open]);\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(Drawer, _extends({\n      open: variant === 'temporary' && maybeSwiping ? true : open,\n      variant: variant,\n      ModalProps: _extends({\n        BackdropProps: _extends({}, BackdropProps, {\n          ref: backdropRef\n        })\n      }, variant === 'temporary' && {\n        keepMounted: true\n      }, ModalPropsProp),\n      hideBackdrop: hideBackdrop,\n      PaperProps: _extends({}, PaperProps, {\n        style: _extends({\n          pointerEvents: variant === 'temporary' && !open && !allowSwipeInChildren ? 'none' : ''\n        }, PaperProps.style),\n        ref: handleRef\n      }),\n      anchor: anchor,\n      transitionDuration: calculatedDurationRef.current || transitionDuration,\n      onClose: onClose,\n      ref: ref\n    }, other)), !disableSwipeToOpen && variant === 'temporary' && /*#__PURE__*/_jsx(NoSsr, {\n      children: /*#__PURE__*/_jsx(SwipeArea, _extends({\n        anchor: anchor,\n        ref: swipeAreaRef,\n        width: swipeAreaWidth\n      }, SwipeAreaProps))\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? SwipeableDrawer.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If set to true, the swipe event will open the drawer even if the user begins the swipe on one of the drawer's children.\n   * This can be useful in scenarios where the drawer is partially visible.\n   * You can customize it further with a callback that determines which children the user can drag over to open the drawer\n   * (for example, to ignore other elements that handle touch move events, like sliders).\n   *\n   * @param {TouchEvent} event The 'touchstart' event\n   * @param {HTMLDivElement} swipeArea The swipe area element\n   * @param {HTMLDivElement} paper The drawer's paper element\n   *\n   * @default false\n   */\n  allowSwipeInChildren: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  /**\n   * @ignore\n   */\n  anchor: PropTypes.oneOf(['bottom', 'left', 'right', 'top']),\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Disable the backdrop transition.\n   * This can improve the FPS on low-end devices.\n   * @default false\n   */\n  disableBackdropTransition: PropTypes.bool,\n  /**\n   * If `true`, touching the screen near the edge of the drawer will not slide in the drawer a bit\n   * to promote accidental discovery of the swipe gesture.\n   * @default false\n   */\n  disableDiscovery: PropTypes.bool,\n  /**\n   * If `true`, swipe to open is disabled. This is useful in browsers where swiping triggers\n   * navigation actions. Swipe to open is disabled on iOS browsers by default.\n   * @default typeof navigator !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent)\n   */\n  disableSwipeToOpen: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  hideBackdrop: PropTypes.bool,\n  /**\n   * Affects how far the drawer must be opened/closed to change its state.\n   * Specified as percent (0-1) of the width of the drawer\n   * @default 0.52\n   */\n  hysteresis: PropTypes.number,\n  /**\n   * Defines, from which (average) velocity on, the swipe is\n   * defined as complete although hysteresis isn't reached.\n   * Good threshold is between 250 - 1000 px/s\n   * @default 450\n   */\n  minFlingVelocity: PropTypes.number,\n  /**\n   * @ignore\n   */\n  ModalProps: PropTypes /* @typescript-to-proptypes-ignore */.shape({\n    BackdropProps: PropTypes.shape({\n      component: elementTypeAcceptingRef\n    })\n  }),\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {React.SyntheticEvent<{}>} event The event source of the callback.\n   */\n  onClose: PropTypes.func.isRequired,\n  /**\n   * Callback fired when the component requests to be opened.\n   *\n   * @param {React.SyntheticEvent<{}>} event The event source of the callback.\n   */\n  onOpen: PropTypes.func.isRequired,\n  /**\n   * If `true`, the component is shown.\n   * @default false\n   */\n  open: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  PaperProps: PropTypes /* @typescript-to-proptypes-ignore */.shape({\n    component: elementTypeAcceptingRef,\n    style: PropTypes.object\n  }),\n  /**\n   * The element is used to intercept the touch events on the edge.\n   */\n  SwipeAreaProps: PropTypes.object,\n  /**\n   * The width of the left most (or right most) area in `px` that\n   * the drawer can be swiped open from.\n   * @default 20\n   */\n  swipeAreaWidth: PropTypes.number,\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default {\n   *   enter: theme.transitions.duration.enteringScreen,\n   *   exit: theme.transitions.duration.leavingScreen,\n   * }\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n  /**\n   * @ignore\n   */\n  variant: PropTypes.oneOf(['permanent', 'persistent', 'temporary'])\n} : void 0;\nexport default SwipeableDrawer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}