{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/esm/extends\";import _objectWithoutPropertiesLoose from\"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";const _excluded=[\"initialWidth\",\"width\"];import*as React from'react';import PropTypes from'prop-types';import getDisplayName from'@mui/utils/getDisplayName';import{getThemeProps}from'@mui/system/useThemeProps';import useTheme from'../styles/useTheme';import useEnhancedEffect from'../utils/useEnhancedEffect';import useMediaQuery from'../useMediaQuery';import{jsx as _jsx}from\"react/jsx-runtime\";const breakpointKeys=['xs','sm','md','lg','xl'];// By default, returns true if screen width is the same or greater than the given breakpoint.\nexport const isWidthUp=function(breakpoint,width){let inclusive=arguments.length>2&&arguments[2]!==undefined?arguments[2]:true;if(inclusive){return breakpointKeys.indexOf(breakpoint)<=breakpointKeys.indexOf(width);}return breakpointKeys.indexOf(breakpoint)<breakpointKeys.indexOf(width);};// By default, returns true if screen width is less than the given breakpoint.\nexport const isWidthDown=function(breakpoint,width){let inclusive=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;if(inclusive){return breakpointKeys.indexOf(width)<=breakpointKeys.indexOf(breakpoint);}return breakpointKeys.indexOf(width)<breakpointKeys.indexOf(breakpoint);};const withWidth=function(){let options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};return Component=>{const{withTheme:withThemeOption=false,noSSR=false,initialWidth:initialWidthOption}=options;function WithWidth(props){const contextTheme=useTheme();const theme=props.theme||contextTheme;const _getThemeProps=getThemeProps({theme,name:'MuiWithWidth',props}),{initialWidth,width}=_getThemeProps,other=_objectWithoutPropertiesLoose(_getThemeProps,_excluded);const[mountedState,setMountedState]=React.useState(false);useEnhancedEffect(()=>{setMountedState(true);},[]);/**\n     * innerWidth |xs      sm      md      lg      xl\n     *            |-------|-------|-------|-------|------>\n     * width      |  xs   |  sm   |  md   |  lg   |  xl\n     */const keys=theme.breakpoints.keys.slice().reverse();const widthComputed=keys.reduce((output,key)=>{// eslint-disable-next-line react-hooks/rules-of-hooks\nconst matches=useMediaQuery(theme.breakpoints.up(key));return!output&&matches?key:output;},null);const more=_extends({width:width||(mountedState||noSSR?widthComputed:undefined)||initialWidth||initialWidthOption},withThemeOption?{theme}:{},other);// When rendering the component on the server,\n// we have no idea about the client browser screen width.\n// In order to prevent blinks and help the reconciliation of the React tree\n// we are not rendering the child component.\n//\n// An alternative is to use the `initialWidth` property.\nif(more.width===undefined){return null;}return/*#__PURE__*/_jsx(Component,_extends({},more));}process.env.NODE_ENV!==\"production\"?WithWidth.propTypes={/**\n     * As `window.innerWidth` is unavailable on the server,\n     * we default to rendering an empty component during the first mount.\n     * You might want to use a heuristic to approximate\n     * the screen width of the client browser screen width.\n     *\n     * For instance, you could be using the user-agent or the client-hints.\n     * https://caniuse.com/#search=client%20hint\n     */initialWidth:PropTypes.oneOf(['xs','sm','md','lg','xl']),/**\n     * @ignore\n     */theme:PropTypes.object,/**\n     * Bypass the width calculation logic.\n     */width:PropTypes.oneOf(['xs','sm','md','lg','xl'])}:void 0;if(process.env.NODE_ENV!=='production'){WithWidth.displayName=\"WithWidth(\".concat(getDisplayName(Component),\")\");}return WithWidth;};};export default withWidth;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","getDisplayName","getThemeProps","useTheme","useEnhancedEffect","useMediaQuery","jsx","_jsx","breakpointKeys","isWidthUp","breakpoint","width","inclusive","arguments","length","undefined","indexOf","isWidthDown","withWidth","options","Component","withTheme","withThemeOption","noSSR","initialWidth","initialWidthOption","WithWidth","props","contextTheme","theme","_getThemeProps","name","other","mountedState","setMountedState","useState","keys","breakpoints","slice","reverse","widthComputed","reduce","output","key","matches","up","more","process","env","NODE_ENV","propTypes","oneOf","object","displayName","concat"],"sources":["/home/nevin/Project-2/test-react-auth/frontend/src/node_modules/@mui/material/Hidden/withWidth.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"initialWidth\", \"width\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport getDisplayName from '@mui/utils/getDisplayName';\nimport { getThemeProps } from '@mui/system/useThemeProps';\nimport useTheme from '../styles/useTheme';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\nimport useMediaQuery from '../useMediaQuery';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst breakpointKeys = ['xs', 'sm', 'md', 'lg', 'xl'];\n\n// By default, returns true if screen width is the same or greater than the given breakpoint.\nexport const isWidthUp = (breakpoint, width, inclusive = true) => {\n  if (inclusive) {\n    return breakpointKeys.indexOf(breakpoint) <= breakpointKeys.indexOf(width);\n  }\n  return breakpointKeys.indexOf(breakpoint) < breakpointKeys.indexOf(width);\n};\n\n// By default, returns true if screen width is less than the given breakpoint.\nexport const isWidthDown = (breakpoint, width, inclusive = false) => {\n  if (inclusive) {\n    return breakpointKeys.indexOf(width) <= breakpointKeys.indexOf(breakpoint);\n  }\n  return breakpointKeys.indexOf(width) < breakpointKeys.indexOf(breakpoint);\n};\nconst withWidth = (options = {}) => Component => {\n  const {\n    withTheme: withThemeOption = false,\n    noSSR = false,\n    initialWidth: initialWidthOption\n  } = options;\n  function WithWidth(props) {\n    const contextTheme = useTheme();\n    const theme = props.theme || contextTheme;\n    const _getThemeProps = getThemeProps({\n        theme,\n        name: 'MuiWithWidth',\n        props\n      }),\n      {\n        initialWidth,\n        width\n      } = _getThemeProps,\n      other = _objectWithoutPropertiesLoose(_getThemeProps, _excluded);\n    const [mountedState, setMountedState] = React.useState(false);\n    useEnhancedEffect(() => {\n      setMountedState(true);\n    }, []);\n\n    /**\n     * innerWidth |xs      sm      md      lg      xl\n     *            |-------|-------|-------|-------|------>\n     * width      |  xs   |  sm   |  md   |  lg   |  xl\n     */\n    const keys = theme.breakpoints.keys.slice().reverse();\n    const widthComputed = keys.reduce((output, key) => {\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      const matches = useMediaQuery(theme.breakpoints.up(key));\n      return !output && matches ? key : output;\n    }, null);\n    const more = _extends({\n      width: width || (mountedState || noSSR ? widthComputed : undefined) || initialWidth || initialWidthOption\n    }, withThemeOption ? {\n      theme\n    } : {}, other);\n\n    // When rendering the component on the server,\n    // we have no idea about the client browser screen width.\n    // In order to prevent blinks and help the reconciliation of the React tree\n    // we are not rendering the child component.\n    //\n    // An alternative is to use the `initialWidth` property.\n    if (more.width === undefined) {\n      return null;\n    }\n    return /*#__PURE__*/_jsx(Component, _extends({}, more));\n  }\n  process.env.NODE_ENV !== \"production\" ? WithWidth.propTypes = {\n    /**\n     * As `window.innerWidth` is unavailable on the server,\n     * we default to rendering an empty component during the first mount.\n     * You might want to use a heuristic to approximate\n     * the screen width of the client browser screen width.\n     *\n     * For instance, you could be using the user-agent or the client-hints.\n     * https://caniuse.com/#search=client%20hint\n     */\n    initialWidth: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']),\n    /**\n     * @ignore\n     */\n    theme: PropTypes.object,\n    /**\n     * Bypass the width calculation logic.\n     */\n    width: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl'])\n  } : void 0;\n  if (process.env.NODE_ENV !== 'production') {\n    WithWidth.displayName = `WithWidth(${getDisplayName(Component)})`;\n  }\n  return WithWidth;\n};\nexport default withWidth;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}