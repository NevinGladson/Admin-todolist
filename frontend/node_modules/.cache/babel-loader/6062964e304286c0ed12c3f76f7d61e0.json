{"ast":null,"code":"'use client';\n\nvar _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"disabled\", \"label\", \"slots\", \"slotProps\", \"focusableWhenDisabled\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSlotProps } from '../utils';\nimport { useMenuButton } from '../useMenuButton';\nimport { unstable_composeClasses as composeClasses } from '../composeClasses';\nimport { useClassNamesOverride } from '../utils/ClassNameConfigurator';\nimport { getMenuButtonUtilityClass } from './menuButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  _s();\n  const {\n    active,\n    disabled,\n    open\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', active && 'active', open && 'expanded']\n  };\n  return composeClasses(slots, useClassNamesOverride(getMenuButtonUtilityClass));\n};\n\n/**\n *\n * Demos:\n *\n * - [Menu](https://mui.com/base-ui/react-menu/)\n *\n * API:\n *\n * - [MenuButton API](https://mui.com/base-ui/react-menu/components-api/#menu-button)\n */\n_s(useUtilityClasses, \"cJWx6VTT6CgpSMluWdlxUAZFz/I=\", false, function () {\n  return [useClassNamesOverride];\n});\nconst MenuButton = /*#__PURE__*/React.forwardRef(_c = _s2(function MenuButton(props, forwardedRef) {\n  _s2();\n  const {\n      children,\n      disabled = false,\n      slots = {},\n      slotProps = {},\n      focusableWhenDisabled = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    getRootProps,\n    open,\n    active\n  } = useMenuButton({\n    disabled,\n    focusableWhenDisabled,\n    rootRef: forwardedRef\n  });\n  const ownerState = _extends({}, props, {\n    open,\n    active,\n    disabled,\n    focusableWhenDisabled\n  });\n  const classes = useUtilityClasses(ownerState);\n  const Root = slots.root || 'button';\n  const rootProps = useSlotProps({\n    elementType: Root,\n    getSlotProps: getRootProps,\n    externalForwardedProps: other,\n    externalSlotProps: slotProps.root,\n    additionalProps: {\n      ref: forwardedRef,\n      type: 'button'\n    },\n    ownerState,\n    className: classes.root\n  });\n  return /*#__PURE__*/_jsx(Root, _extends({}, rootProps, {\n    children: children\n  }));\n}, \"A3sv3a0NcSDBYWtXzsky9RR6wsk=\", false, function () {\n  return [useMenuButton, useUtilityClasses, useSlotProps];\n}));\n_c2 = MenuButton;\nprocess.env.NODE_ENV !== \"production\" ? MenuButton.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Class name applied to the root element.\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, allows a disabled button to receive focus.\n   * @default false\n   */\n  focusableWhenDisabled: PropTypes.bool,\n  /**\n   * Label of the button\n   */\n  label: PropTypes.string,\n  /**\n   * The components used for each slot inside the MenuButton.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The props used for each slot inside the MenuButton.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    root: PropTypes.elementType\n  })\n} : void 0;\nexport { MenuButton };\nvar _c, _c2;\n$RefreshReg$(_c, \"MenuButton$React.forwardRef\");\n$RefreshReg$(_c2, \"MenuButton\");","map":{"version":3,"names":["_s","$RefreshSig$","_s2","_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","useSlotProps","useMenuButton","unstable_composeClasses","composeClasses","useClassNamesOverride","getMenuButtonUtilityClass","jsx","_jsx","useUtilityClasses","ownerState","active","disabled","open","slots","root","MenuButton","forwardRef","_c","props","forwardedRef","children","slotProps","focusableWhenDisabled","other","getRootProps","rootRef","classes","Root","rootProps","elementType","getSlotProps","externalForwardedProps","externalSlotProps","additionalProps","ref","type","className","_c2","process","env","NODE_ENV","propTypes","node","string","bool","label","shape","oneOfType","func","object","$RefreshReg$"],"sources":["/home/nevin/Project-2/test-react-auth/frontend/src/node_modules/@mui/base/MenuButton/MenuButton.js"],"sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"disabled\", \"label\", \"slots\", \"slotProps\", \"focusableWhenDisabled\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSlotProps } from '../utils';\nimport { useMenuButton } from '../useMenuButton';\nimport { unstable_composeClasses as composeClasses } from '../composeClasses';\nimport { useClassNamesOverride } from '../utils/ClassNameConfigurator';\nimport { getMenuButtonUtilityClass } from './menuButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    active,\n    disabled,\n    open\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', active && 'active', open && 'expanded']\n  };\n  return composeClasses(slots, useClassNamesOverride(getMenuButtonUtilityClass));\n};\n\n/**\n *\n * Demos:\n *\n * - [Menu](https://mui.com/base-ui/react-menu/)\n *\n * API:\n *\n * - [MenuButton API](https://mui.com/base-ui/react-menu/components-api/#menu-button)\n */\nconst MenuButton = /*#__PURE__*/React.forwardRef(function MenuButton(props, forwardedRef) {\n  const {\n      children,\n      disabled = false,\n      slots = {},\n      slotProps = {},\n      focusableWhenDisabled = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    getRootProps,\n    open,\n    active\n  } = useMenuButton({\n    disabled,\n    focusableWhenDisabled,\n    rootRef: forwardedRef\n  });\n  const ownerState = _extends({}, props, {\n    open,\n    active,\n    disabled,\n    focusableWhenDisabled\n  });\n  const classes = useUtilityClasses(ownerState);\n  const Root = slots.root || 'button';\n  const rootProps = useSlotProps({\n    elementType: Root,\n    getSlotProps: getRootProps,\n    externalForwardedProps: other,\n    externalSlotProps: slotProps.root,\n    additionalProps: {\n      ref: forwardedRef,\n      type: 'button'\n    },\n    ownerState,\n    className: classes.root\n  });\n  return /*#__PURE__*/_jsx(Root, _extends({}, rootProps, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuButton.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Class name applied to the root element.\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, allows a disabled button to receive focus.\n   * @default false\n   */\n  focusableWhenDisabled: PropTypes.bool,\n  /**\n   * Label of the button\n   */\n  label: PropTypes.string,\n  /**\n   * The components used for each slot inside the MenuButton.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The props used for each slot inside the MenuButton.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    root: PropTypes.elementType\n  })\n} : void 0;\nexport { MenuButton };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}