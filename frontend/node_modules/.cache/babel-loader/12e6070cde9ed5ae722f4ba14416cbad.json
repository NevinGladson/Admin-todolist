{"ast":null,"code":"'use client';import*as React from'react';import{exactProp}from'@mui/utils';import{DropdownContext}from'../useDropdown/DropdownContext';import{useDropdown}from'../useDropdown/useDropdown';/**\n *\n * Demos:\n *\n * - [Menu](https://mui.com/base-ui/react-menu/)\n *\n * API:\n *\n * - [Dropdown API](https://mui.com/base-ui/react-menu/components-api/#dropdown)\n */import{jsx as _jsx}from\"react/jsx-runtime\";function Dropdown(props){const{children,open,defaultOpen,onOpenChange}=props;const{contextValue}=useDropdown({defaultOpen,onOpenChange,open});return/*#__PURE__*/_jsx(DropdownContext.Provider,{value:contextValue,children:children});}process.env.NODE_ENV!==\"production\"?void 0:void 0;if(process.env.NODE_ENV!=='production'){// eslint-disable-next-line\nDropdown['propTypes'+'']=exactProp(Dropdown.propTypes);}export{Dropdown};","map":{"version":3,"names":["React","exactProp","DropdownContext","useDropdown","jsx","_jsx","Dropdown","props","children","open","defaultOpen","onOpenChange","contextValue","Provider","value","process","env","NODE_ENV","propTypes"],"sources":["/home/nevin/Project-2/test-react-auth/frontend/src/node_modules/@mui/base/Dropdown/Dropdown.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { exactProp } from '@mui/utils';\nimport { DropdownContext } from '../useDropdown/DropdownContext';\nimport { useDropdown } from '../useDropdown/useDropdown';\n/**\n *\n * Demos:\n *\n * - [Menu](https://mui.com/base-ui/react-menu/)\n *\n * API:\n *\n * - [Dropdown API](https://mui.com/base-ui/react-menu/components-api/#dropdown)\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction Dropdown(props) {\n  const {\n    children,\n    open,\n    defaultOpen,\n    onOpenChange\n  } = props;\n  const {\n    contextValue\n  } = useDropdown({\n    defaultOpen,\n    onOpenChange,\n    open\n  });\n  return /*#__PURE__*/_jsx(DropdownContext.Provider, {\n    value: contextValue,\n    children: children\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? Dropdown.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * If `true`, the dropdown is initially open.\n   */\n  defaultOpen: PropTypes.bool,\n  /**\n   * Callback fired when the component requests to be opened or closed.\n   */\n  onOpenChange: PropTypes.func,\n  /**\n   * Allows to control whether the dropdown is open.\n   * This is a controlled counterpart of `defaultOpen`.\n   */\n  open: PropTypes.bool\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  Dropdown['propTypes' + ''] = exactProp(Dropdown.propTypes);\n}\nexport { Dropdown };"],"mappings":"AAAA,YAAY,CAEZ,MAAO,GAAK,CAAAA,KAAK,KAAM,OAAO,CAE9B,OAASC,SAAS,KAAQ,YAAY,CACtC,OAASC,eAAe,KAAQ,gCAAgC,CAChE,OAASC,WAAW,KAAQ,4BAA4B,CACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,OAASC,GAAG,GAAI,CAAAC,IAAI,KAAQ,mBAAmB,CAC/C,QAAS,CAAAC,QAAQA,CAACC,KAAK,CAAE,CACvB,KAAM,CACJC,QAAQ,CACRC,IAAI,CACJC,WAAW,CACXC,YACF,CAAC,CAAGJ,KAAK,CACT,KAAM,CACJK,YACF,CAAC,CAAGT,WAAW,CAAC,CACdO,WAAW,CACXC,YAAY,CACZF,IACF,CAAC,CAAC,CACF,MAAO,aAAaJ,IAAI,CAACH,eAAe,CAACW,QAAQ,CAAE,CACjDC,KAAK,CAAEF,YAAY,CACnBJ,QAAQ,CAAEA,QACZ,CAAC,CAAC,CACJ,CACAO,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAK,YAAY,QAsBjC,IAAK,EAAC,CACV,GAAIF,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAK,YAAY,CAAE,CACzC;AACAX,QAAQ,CAAC,WAAW,CAAG,EAAE,CAAC,CAAGL,SAAS,CAACK,QAAQ,CAACY,SAAS,CAAC,CAC5D,CACA,OAASZ,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module"}