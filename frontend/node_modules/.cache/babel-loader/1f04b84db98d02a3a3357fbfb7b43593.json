{"ast":null,"code":"'use client';\n\nvar _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"slotProps\", \"slots\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '../composeClasses';\nimport { useSlotProps } from '../utils';\nimport { getTabsListUtilityClass } from './tabsListClasses';\nimport { useTabsList } from '../useTabsList';\nimport { useClassNamesOverride } from '../utils/ClassNameConfigurator';\nimport { TabsListProvider } from '../useTabsList/TabsListProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  _s();\n  const {\n    orientation\n  } = ownerState;\n  const slots = {\n    root: ['root', orientation]\n  };\n  return composeClasses(slots, useClassNamesOverride(getTabsListUtilityClass));\n};\n\n/**\n *\n * Demos:\n *\n * - [Tabs](https://mui.com/base-ui/react-tabs/)\n *\n * API:\n *\n * - [TabsList API](https://mui.com/base-ui/react-tabs/components-api/#tabs-list)\n */\n_s(useUtilityClasses, \"cJWx6VTT6CgpSMluWdlxUAZFz/I=\", false, function () {\n  return [useClassNamesOverride];\n});\nconst TabsList = /*#__PURE__*/React.forwardRef(_c = _s2(function TabsList(props, forwardedRef) {\n  _s2();\n  var _slots$root;\n  const {\n      children,\n      slotProps = {},\n      slots = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    isRtl,\n    orientation,\n    getRootProps,\n    contextValue\n  } = useTabsList({\n    rootRef: forwardedRef\n  });\n  const ownerState = _extends({}, props, {\n    isRtl,\n    orientation\n  });\n  const classes = useUtilityClasses(ownerState);\n  const TabsListRoot = (_slots$root = slots.root) != null ? _slots$root : 'div';\n  const tabsListRootProps = useSlotProps({\n    elementType: TabsListRoot,\n    getSlotProps: getRootProps,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    ownerState,\n    className: classes.root\n  });\n  return /*#__PURE__*/_jsx(TabsListProvider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(TabsListRoot, _extends({}, tabsListRootProps, {\n      children: children\n    }))\n  });\n}, \"RSHz/md9Xuyzb2//NOaLEz/UN0k=\", false, function () {\n  return [useTabsList, useUtilityClasses, useSlotProps];\n}));\n_c2 = TabsList;\nprocess.env.NODE_ENV !== \"production\" ? TabsList.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The props used for each slot inside the TabsList.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the TabsList.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    root: PropTypes.elementType\n  })\n} : void 0;\nexport { TabsList };\nvar _c, _c2;\n$RefreshReg$(_c, \"TabsList$React.forwardRef\");\n$RefreshReg$(_c2, \"TabsList\");","map":{"version":3,"names":["_s","$RefreshSig$","_s2","_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","unstable_composeClasses","composeClasses","useSlotProps","getTabsListUtilityClass","useTabsList","useClassNamesOverride","TabsListProvider","jsx","_jsx","useUtilityClasses","ownerState","orientation","slots","root","TabsList","forwardRef","_c","props","forwardedRef","_slots$root","children","slotProps","other","isRtl","getRootProps","contextValue","rootRef","classes","TabsListRoot","tabsListRootProps","elementType","getSlotProps","externalSlotProps","externalForwardedProps","className","value","_c2","process","env","NODE_ENV","propTypes","node","string","shape","oneOfType","func","object","$RefreshReg$"],"sources":["/home/nevin/Project-2/test-react-auth/frontend/src/node_modules/@mui/base/TabsList/TabsList.js"],"sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"slotProps\", \"slots\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '../composeClasses';\nimport { useSlotProps } from '../utils';\nimport { getTabsListUtilityClass } from './tabsListClasses';\nimport { useTabsList } from '../useTabsList';\nimport { useClassNamesOverride } from '../utils/ClassNameConfigurator';\nimport { TabsListProvider } from '../useTabsList/TabsListProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    orientation\n  } = ownerState;\n  const slots = {\n    root: ['root', orientation]\n  };\n  return composeClasses(slots, useClassNamesOverride(getTabsListUtilityClass));\n};\n\n/**\n *\n * Demos:\n *\n * - [Tabs](https://mui.com/base-ui/react-tabs/)\n *\n * API:\n *\n * - [TabsList API](https://mui.com/base-ui/react-tabs/components-api/#tabs-list)\n */\nconst TabsList = /*#__PURE__*/React.forwardRef(function TabsList(props, forwardedRef) {\n  var _slots$root;\n  const {\n      children,\n      slotProps = {},\n      slots = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    isRtl,\n    orientation,\n    getRootProps,\n    contextValue\n  } = useTabsList({\n    rootRef: forwardedRef\n  });\n  const ownerState = _extends({}, props, {\n    isRtl,\n    orientation\n  });\n  const classes = useUtilityClasses(ownerState);\n  const TabsListRoot = (_slots$root = slots.root) != null ? _slots$root : 'div';\n  const tabsListRootProps = useSlotProps({\n    elementType: TabsListRoot,\n    getSlotProps: getRootProps,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    ownerState,\n    className: classes.root\n  });\n  return /*#__PURE__*/_jsx(TabsListProvider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(TabsListRoot, _extends({}, tabsListRootProps, {\n      children: children\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TabsList.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The props used for each slot inside the TabsList.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the TabsList.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    root: PropTypes.elementType\n  })\n} : void 0;\nexport { TabsList };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}