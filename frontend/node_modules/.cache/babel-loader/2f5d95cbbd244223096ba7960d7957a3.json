{"ast":null,"code":"import _objectWithoutPropertiesLoose from\"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";import _extends from\"@babel/runtime/helpers/esm/extends\";import _assertThisInitialized from\"@babel/runtime/helpers/esm/assertThisInitialized\";import _inheritsLoose from\"@babel/runtime/helpers/esm/inheritsLoose\";import React from'react';import TransitionGroupContext from'./TransitionGroupContext';import{getChildMapping,getInitialChildMapping,getNextChildMapping}from'./utils/ChildMapping';var values=Object.values||function(obj){return Object.keys(obj).map(function(k){return obj[k];});};var defaultProps={component:'div',childFactory:function childFactory(child){return child;}};/**\n * The `<TransitionGroup>` component manages a set of transition components\n * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition\n * components, `<TransitionGroup>` is a state machine for managing the mounting\n * and unmounting of components over time.\n *\n * Consider the example below. As items are removed or added to the TodoList the\n * `in` prop is toggled automatically by the `<TransitionGroup>`.\n *\n * Note that `<TransitionGroup>`  does not define any animation behavior!\n * Exactly _how_ a list item animates is up to the individual transition\n * component. This means you can mix and match animations across different list\n * items.\n */var TransitionGroup=/*#__PURE__*/function(_React$Component){_inheritsLoose(TransitionGroup,_React$Component);function TransitionGroup(props,context){var _this;_this=_React$Component.call(this,props,context)||this;var handleExited=_this.handleExited.bind(_assertThisInitialized(_this));// Initial children should all be entering, dependent on appear\n_this.state={contextValue:{isMounting:true},handleExited:handleExited,firstRender:true};return _this;}var _proto=TransitionGroup.prototype;_proto.componentDidMount=function componentDidMount(){this.mounted=true;this.setState({contextValue:{isMounting:false}});};_proto.componentWillUnmount=function componentWillUnmount(){this.mounted=false;};TransitionGroup.getDerivedStateFromProps=function getDerivedStateFromProps(nextProps,_ref){var prevChildMapping=_ref.children,handleExited=_ref.handleExited,firstRender=_ref.firstRender;return{children:firstRender?getInitialChildMapping(nextProps,handleExited):getNextChildMapping(nextProps,prevChildMapping,handleExited),firstRender:false};}// node is `undefined` when user provided `nodeRef` prop\n;_proto.handleExited=function handleExited(child,node){var currentChildMapping=getChildMapping(this.props.children);if(child.key in currentChildMapping)return;if(child.props.onExited){child.props.onExited(node);}if(this.mounted){this.setState(function(state){var children=_extends({},state.children);delete children[child.key];return{children:children};});}};_proto.render=function render(){var _this$props=this.props,Component=_this$props.component,childFactory=_this$props.childFactory,props=_objectWithoutPropertiesLoose(_this$props,[\"component\",\"childFactory\"]);var contextValue=this.state.contextValue;var children=values(this.state.children).map(childFactory);delete props.appear;delete props.enter;delete props.exit;if(Component===null){return/*#__PURE__*/React.createElement(TransitionGroupContext.Provider,{value:contextValue},children);}return/*#__PURE__*/React.createElement(TransitionGroupContext.Provider,{value:contextValue},/*#__PURE__*/React.createElement(Component,props,children));};return TransitionGroup;}(React.Component);TransitionGroup.defaultProps=defaultProps;export default TransitionGroup;","map":{"version":3,"names":["_objectWithoutPropertiesLoose","_extends","_assertThisInitialized","_inheritsLoose","React","TransitionGroupContext","getChildMapping","getInitialChildMapping","getNextChildMapping","values","Object","obj","keys","map","k","defaultProps","component","childFactory","child","TransitionGroup","_React$Component","props","context","_this","call","handleExited","bind","state","contextValue","isMounting","firstRender","_proto","prototype","componentDidMount","mounted","setState","componentWillUnmount","getDerivedStateFromProps","nextProps","_ref","prevChildMapping","children","node","currentChildMapping","key","onExited","render","_this$props","Component","appear","enter","exit","createElement","Provider","value"],"sources":["/home/nevin/Project-2/test-react-auth/frontend/src/node_modules/react-transition-group/esm/TransitionGroup.js"],"sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { getChildMapping, getInitialChildMapping, getNextChildMapping } from './utils/ChildMapping';\n\nvar values = Object.values || function (obj) {\n  return Object.keys(obj).map(function (k) {\n    return obj[k];\n  });\n};\n\nvar defaultProps = {\n  component: 'div',\n  childFactory: function childFactory(child) {\n    return child;\n  }\n};\n/**\n * The `<TransitionGroup>` component manages a set of transition components\n * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition\n * components, `<TransitionGroup>` is a state machine for managing the mounting\n * and unmounting of components over time.\n *\n * Consider the example below. As items are removed or added to the TodoList the\n * `in` prop is toggled automatically by the `<TransitionGroup>`.\n *\n * Note that `<TransitionGroup>`  does not define any animation behavior!\n * Exactly _how_ a list item animates is up to the individual transition\n * component. This means you can mix and match animations across different list\n * items.\n */\n\nvar TransitionGroup = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(TransitionGroup, _React$Component);\n\n  function TransitionGroup(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n\n    var handleExited = _this.handleExited.bind(_assertThisInitialized(_this)); // Initial children should all be entering, dependent on appear\n\n\n    _this.state = {\n      contextValue: {\n        isMounting: true\n      },\n      handleExited: handleExited,\n      firstRender: true\n    };\n    return _this;\n  }\n\n  var _proto = TransitionGroup.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.mounted = true;\n    this.setState({\n      contextValue: {\n        isMounting: false\n      }\n    });\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.mounted = false;\n  };\n\n  TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {\n    var prevChildMapping = _ref.children,\n        handleExited = _ref.handleExited,\n        firstRender = _ref.firstRender;\n    return {\n      children: firstRender ? getInitialChildMapping(nextProps, handleExited) : getNextChildMapping(nextProps, prevChildMapping, handleExited),\n      firstRender: false\n    };\n  } // node is `undefined` when user provided `nodeRef` prop\n  ;\n\n  _proto.handleExited = function handleExited(child, node) {\n    var currentChildMapping = getChildMapping(this.props.children);\n    if (child.key in currentChildMapping) return;\n\n    if (child.props.onExited) {\n      child.props.onExited(node);\n    }\n\n    if (this.mounted) {\n      this.setState(function (state) {\n        var children = _extends({}, state.children);\n\n        delete children[child.key];\n        return {\n          children: children\n        };\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        Component = _this$props.component,\n        childFactory = _this$props.childFactory,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"component\", \"childFactory\"]);\n\n    var contextValue = this.state.contextValue;\n    var children = values(this.state.children).map(childFactory);\n    delete props.appear;\n    delete props.enter;\n    delete props.exit;\n\n    if (Component === null) {\n      return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n        value: contextValue\n      }, children);\n    }\n\n    return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n      value: contextValue\n    }, /*#__PURE__*/React.createElement(Component, props, children));\n  };\n\n  return TransitionGroup;\n}(React.Component);\n\nTransitionGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * `<TransitionGroup>` renders a `<div>` by default. You can change this\n   * behavior by providing a `component` prop.\n   * If you use React v16+ and would like to avoid a wrapping `<div>` element\n   * you can pass in `component={null}`. This is useful if the wrapping div\n   * borks your css styles.\n   */\n  component: PropTypes.any,\n\n  /**\n   * A set of `<Transition>` components, that are toggled `in` and out as they\n   * leave. the `<TransitionGroup>` will inject specific transition props, so\n   * remember to spread them through if you are wrapping the `<Transition>` as\n   * with our `<Fade>` example.\n   *\n   * While this component is meant for multiple `Transition` or `CSSTransition`\n   * children, sometimes you may want to have a single transition child with\n   * content that you want to be transitioned out and in when you change it\n   * (e.g. routes, images etc.) In that case you can change the `key` prop of\n   * the transition child as you change its content, this will cause\n   * `TransitionGroup` to transition the child out and back in.\n   */\n  children: PropTypes.node,\n\n  /**\n   * A convenience prop that enables or disables appear animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables enter animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables exit animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * You may need to apply reactive updates to a child as it is exiting.\n   * This is generally done by using `cloneElement` however in the case of an exiting\n   * child the element has already been removed and not accessible to the consumer.\n   *\n   * If you do need to update a child as it leaves you can provide a `childFactory`\n   * to wrap every child, even the ones that are leaving.\n   *\n   * @type Function(child: ReactElement) -> ReactElement\n   */\n  childFactory: PropTypes.func\n} : {};\nTransitionGroup.defaultProps = defaultProps;\nexport default TransitionGroup;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}