{"ast":null,"code":"'use client';import _extends from\"@babel/runtime/helpers/esm/extends\";import _objectWithoutPropertiesLoose from\"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";const _excluded=[\"children\",\"value\",\"slotProps\",\"slots\"];import*as React from'react';import{useSlotProps}from'../utils';import{unstable_composeClasses as composeClasses}from'../composeClasses';import{getTabPanelUtilityClass}from'./tabPanelClasses';import{useTabPanel}from'../useTabPanel/useTabPanel';import{useClassNamesOverride}from'../utils/ClassNameConfigurator';import{jsx as _jsx}from\"react/jsx-runtime\";const useUtilityClasses=ownerState=>{const{hidden}=ownerState;const slots={root:['root',hidden&&'hidden']};return composeClasses(slots,useClassNamesOverride(getTabPanelUtilityClass));};/**\n *\n * Demos:\n *\n * - [Tabs](https://mui.com/base-ui/react-tabs/)\n *\n * API:\n *\n * - [TabPanel API](https://mui.com/base-ui/react-tabs/components-api/#tab-panel)\n */const TabPanel=/*#__PURE__*/React.forwardRef(function TabPanel(props,forwardedRef){var _slots$root;const{children,slotProps={},slots={}}=props,other=_objectWithoutPropertiesLoose(props,_excluded);const{hidden,getRootProps}=useTabPanel(props);const ownerState=_extends({},props,{hidden});const classes=useUtilityClasses(ownerState);const TabPanelRoot=(_slots$root=slots.root)!=null?_slots$root:'div';const tabPanelRootProps=useSlotProps({elementType:TabPanelRoot,getSlotProps:getRootProps,externalSlotProps:slotProps.root,externalForwardedProps:other,additionalProps:{role:'tabpanel',ref:forwardedRef},ownerState,className:classes.root});return/*#__PURE__*/_jsx(TabPanelRoot,_extends({},tabPanelRootProps,{children:!hidden&&children}));});process.env.NODE_ENV!==\"production\"?void 0:void 0;export{TabPanel};","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","useSlotProps","unstable_composeClasses","composeClasses","getTabPanelUtilityClass","useTabPanel","useClassNamesOverride","jsx","_jsx","useUtilityClasses","ownerState","hidden","slots","root","TabPanel","forwardRef","props","forwardedRef","_slots$root","children","slotProps","other","getRootProps","classes","TabPanelRoot","tabPanelRootProps","elementType","getSlotProps","externalSlotProps","externalForwardedProps","additionalProps","role","ref","className","process","env","NODE_ENV"],"sources":["/home/nevin/Project-2/test-react-auth/frontend/src/node_modules/@mui/base/TabPanel/TabPanel.js"],"sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"value\", \"slotProps\", \"slots\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSlotProps } from '../utils';\nimport { unstable_composeClasses as composeClasses } from '../composeClasses';\nimport { getTabPanelUtilityClass } from './tabPanelClasses';\nimport { useTabPanel } from '../useTabPanel/useTabPanel';\nimport { useClassNamesOverride } from '../utils/ClassNameConfigurator';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    hidden\n  } = ownerState;\n  const slots = {\n    root: ['root', hidden && 'hidden']\n  };\n  return composeClasses(slots, useClassNamesOverride(getTabPanelUtilityClass));\n};\n/**\n *\n * Demos:\n *\n * - [Tabs](https://mui.com/base-ui/react-tabs/)\n *\n * API:\n *\n * - [TabPanel API](https://mui.com/base-ui/react-tabs/components-api/#tab-panel)\n */\nconst TabPanel = /*#__PURE__*/React.forwardRef(function TabPanel(props, forwardedRef) {\n  var _slots$root;\n  const {\n      children,\n      slotProps = {},\n      slots = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    hidden,\n    getRootProps\n  } = useTabPanel(props);\n  const ownerState = _extends({}, props, {\n    hidden\n  });\n  const classes = useUtilityClasses(ownerState);\n  const TabPanelRoot = (_slots$root = slots.root) != null ? _slots$root : 'div';\n  const tabPanelRootProps = useSlotProps({\n    elementType: TabPanelRoot,\n    getSlotProps: getRootProps,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    additionalProps: {\n      role: 'tabpanel',\n      ref: forwardedRef\n    },\n    ownerState,\n    className: classes.root\n  });\n  return /*#__PURE__*/_jsx(TabPanelRoot, _extends({}, tabPanelRootProps, {\n    children: !hidden && children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TabPanel.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The props used for each slot inside the TabPanel.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the TabPanel.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    root: PropTypes.elementType\n  }),\n  /**\n   * The value of the TabPanel. It will be shown when the Tab with the corresponding value is selected.\n   * If not provided, it will fall back to the index of the panel.\n   * It is recommended to explicitly provide it, as it's required for the tab panel to be rendered on the server.\n   */\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nexport { TabPanel };"],"mappings":"AAAA,YAAY,CAEZ,MAAO,CAAAA,QAAQ,KAAM,oCAAoC,CACzD,MAAO,CAAAC,6BAA6B,KAAM,yDAAyD,CACnG,KAAM,CAAAC,SAAS,CAAG,CAAC,UAAU,CAAE,OAAO,CAAE,WAAW,CAAE,OAAO,CAAC,CAC7D,MAAO,GAAK,CAAAC,KAAK,KAAM,OAAO,CAE9B,OAASC,YAAY,KAAQ,UAAU,CACvC,OAASC,uBAAuB,GAAI,CAAAC,cAAc,KAAQ,mBAAmB,CAC7E,OAASC,uBAAuB,KAAQ,mBAAmB,CAC3D,OAASC,WAAW,KAAQ,4BAA4B,CACxD,OAASC,qBAAqB,KAAQ,gCAAgC,CACtE,OAASC,GAAG,GAAI,CAAAC,IAAI,KAAQ,mBAAmB,CAC/C,KAAM,CAAAC,iBAAiB,CAAGC,UAAU,EAAI,CACtC,KAAM,CACJC,MACF,CAAC,CAAGD,UAAU,CACd,KAAM,CAAAE,KAAK,CAAG,CACZC,IAAI,CAAE,CAAC,MAAM,CAAEF,MAAM,EAAI,QAAQ,CACnC,CAAC,CACD,MAAO,CAAAR,cAAc,CAACS,KAAK,CAAEN,qBAAqB,CAACF,uBAAuB,CAAC,CAAC,CAC9E,CAAC,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,KAAM,CAAAU,QAAQ,CAAG,aAAad,KAAK,CAACe,UAAU,CAAC,QAAS,CAAAD,QAAQA,CAACE,KAAK,CAAEC,YAAY,CAAE,CACpF,GAAI,CAAAC,WAAW,CACf,KAAM,CACFC,QAAQ,CACRC,SAAS,CAAG,CAAC,CAAC,CACdR,KAAK,CAAG,CAAC,CACX,CAAC,CAAGI,KAAK,CACTK,KAAK,CAAGvB,6BAA6B,CAACkB,KAAK,CAAEjB,SAAS,CAAC,CACzD,KAAM,CACJY,MAAM,CACNW,YACF,CAAC,CAAGjB,WAAW,CAACW,KAAK,CAAC,CACtB,KAAM,CAAAN,UAAU,CAAGb,QAAQ,CAAC,CAAC,CAAC,CAAEmB,KAAK,CAAE,CACrCL,MACF,CAAC,CAAC,CACF,KAAM,CAAAY,OAAO,CAAGd,iBAAiB,CAACC,UAAU,CAAC,CAC7C,KAAM,CAAAc,YAAY,CAAG,CAACN,WAAW,CAAGN,KAAK,CAACC,IAAI,GAAK,IAAI,CAAGK,WAAW,CAAG,KAAK,CAC7E,KAAM,CAAAO,iBAAiB,CAAGxB,YAAY,CAAC,CACrCyB,WAAW,CAAEF,YAAY,CACzBG,YAAY,CAAEL,YAAY,CAC1BM,iBAAiB,CAAER,SAAS,CAACP,IAAI,CACjCgB,sBAAsB,CAAER,KAAK,CAC7BS,eAAe,CAAE,CACfC,IAAI,CAAE,UAAU,CAChBC,GAAG,CAAEf,YACP,CAAC,CACDP,UAAU,CACVuB,SAAS,CAAEV,OAAO,CAACV,IACrB,CAAC,CAAC,CACF,MAAO,aAAaL,IAAI,CAACgB,YAAY,CAAE3B,QAAQ,CAAC,CAAC,CAAC,CAAE4B,iBAAiB,CAAE,CACrEN,QAAQ,CAAE,CAACR,MAAM,EAAIQ,QACvB,CAAC,CAAC,CAAC,CACL,CAAC,CAAC,CACFe,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAK,YAAY,QAkCjC,IAAK,EAAC,CACV,OAAStB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module"}