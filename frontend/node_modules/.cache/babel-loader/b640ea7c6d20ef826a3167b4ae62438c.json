{"ast":null,"code":"'use client';import _extends from\"@babel/runtime/helpers/esm/extends\";import*as React from'react';import{unstable_useId as useId,unstable_useForkRef as useForkRef}from'@mui/utils';import{useTabsContext}from'../Tabs';import{extractEventHandlers}from'../utils/extractEventHandlers';import{useCompoundItem}from'../useCompound';import{useListItem}from'../useList';import{useButton}from'../useButton';import{combineHooksSlotProps}from'../utils/combineHooksSlotProps';function tabValueGenerator(otherTabValues){return otherTabValues.size;}/**\n *\n * Demos:\n *\n * - [Tabs](https://mui.com/base-ui/react-tabs/#hooks)\n *\n * API:\n *\n * - [useTab API](https://mui.com/base-ui/react-tabs/hooks-api/#use-tab)\n */function useTab(parameters){const{value:valueParam,rootRef:externalRef,disabled=false,id:idParam}=parameters;const tabRef=React.useRef(null);const id=useId(idParam);const{value:selectedValue,selectionFollowsFocus,getTabPanelId}=useTabsContext();const tabMetadata=React.useMemo(()=>({disabled,ref:tabRef,id}),[disabled,tabRef,id]);const{id:value,index,totalItemCount:totalTabsCount}=useCompoundItem(valueParam!=null?valueParam:tabValueGenerator,tabMetadata);const{getRootProps:getTabProps,highlighted,selected}=useListItem({item:value});const{getRootProps:getButtonProps,rootRef:buttonRefHandler,active,focusVisible,setFocusVisible}=useButton({disabled,focusableWhenDisabled:!selectionFollowsFocus,type:'button'});const handleRef=useForkRef(tabRef,externalRef,buttonRefHandler);const tabPanelId=value!==undefined?getTabPanelId(value):undefined;const getRootProps=function(){let externalProps=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const externalEventHandlers=extractEventHandlers(externalProps);const getCombinedRootProps=combineHooksSlotProps(getTabProps,getButtonProps);return _extends({},externalProps,getCombinedRootProps(externalEventHandlers),{role:'tab','aria-controls':tabPanelId,'aria-selected':selected,id,ref:handleRef});};return{getRootProps,active,focusVisible,highlighted,index,rootRef:handleRef,// the `selected` state isn't set on the server (it relies on effects to be calculated),\n// so we fall back to checking the `value` prop with the selectedValue from the TabsContext\nselected:selected||value===selectedValue,setFocusVisible,totalTabsCount};}export{useTab};","map":{"version":3,"names":["_extends","React","unstable_useId","useId","unstable_useForkRef","useForkRef","useTabsContext","extractEventHandlers","useCompoundItem","useListItem","useButton","combineHooksSlotProps","tabValueGenerator","otherTabValues","size","useTab","parameters","value","valueParam","rootRef","externalRef","disabled","id","idParam","tabRef","useRef","selectedValue","selectionFollowsFocus","getTabPanelId","tabMetadata","useMemo","ref","index","totalItemCount","totalTabsCount","getRootProps","getTabProps","highlighted","selected","item","getButtonProps","buttonRefHandler","active","focusVisible","setFocusVisible","focusableWhenDisabled","type","handleRef","tabPanelId","undefined","externalProps","arguments","length","externalEventHandlers","getCombinedRootProps","role"],"sources":["/home/nevin/Project-2/test-react-auth/frontend/src/node_modules/@mui/base/useTab/useTab.js"],"sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useId as useId, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { useTabsContext } from '../Tabs';\nimport { extractEventHandlers } from '../utils/extractEventHandlers';\nimport { useCompoundItem } from '../useCompound';\nimport { useListItem } from '../useList';\nimport { useButton } from '../useButton';\nimport { combineHooksSlotProps } from '../utils/combineHooksSlotProps';\nfunction tabValueGenerator(otherTabValues) {\n  return otherTabValues.size;\n}\n\n/**\n *\n * Demos:\n *\n * - [Tabs](https://mui.com/base-ui/react-tabs/#hooks)\n *\n * API:\n *\n * - [useTab API](https://mui.com/base-ui/react-tabs/hooks-api/#use-tab)\n */\nfunction useTab(parameters) {\n  const {\n    value: valueParam,\n    rootRef: externalRef,\n    disabled = false,\n    id: idParam\n  } = parameters;\n  const tabRef = React.useRef(null);\n  const id = useId(idParam);\n  const {\n    value: selectedValue,\n    selectionFollowsFocus,\n    getTabPanelId\n  } = useTabsContext();\n  const tabMetadata = React.useMemo(() => ({\n    disabled,\n    ref: tabRef,\n    id\n  }), [disabled, tabRef, id]);\n  const {\n    id: value,\n    index,\n    totalItemCount: totalTabsCount\n  } = useCompoundItem(valueParam != null ? valueParam : tabValueGenerator, tabMetadata);\n  const {\n    getRootProps: getTabProps,\n    highlighted,\n    selected\n  } = useListItem({\n    item: value\n  });\n  const {\n    getRootProps: getButtonProps,\n    rootRef: buttonRefHandler,\n    active,\n    focusVisible,\n    setFocusVisible\n  } = useButton({\n    disabled,\n    focusableWhenDisabled: !selectionFollowsFocus,\n    type: 'button'\n  });\n  const handleRef = useForkRef(tabRef, externalRef, buttonRefHandler);\n  const tabPanelId = value !== undefined ? getTabPanelId(value) : undefined;\n  const getRootProps = (externalProps = {}) => {\n    const externalEventHandlers = extractEventHandlers(externalProps);\n    const getCombinedRootProps = combineHooksSlotProps(getTabProps, getButtonProps);\n    return _extends({}, externalProps, getCombinedRootProps(externalEventHandlers), {\n      role: 'tab',\n      'aria-controls': tabPanelId,\n      'aria-selected': selected,\n      id,\n      ref: handleRef\n    });\n  };\n  return {\n    getRootProps,\n    active,\n    focusVisible,\n    highlighted,\n    index,\n    rootRef: handleRef,\n    // the `selected` state isn't set on the server (it relies on effects to be calculated),\n    // so we fall back to checking the `value` prop with the selectedValue from the TabsContext\n    selected: selected || value === selectedValue,\n    setFocusVisible,\n    totalTabsCount\n  };\n}\nexport { useTab };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}