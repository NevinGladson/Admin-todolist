{"ast":null,"code":"'use client';import*as React from'react';import setRef from'../setRef';export default function useForkRef(){for(var _len=arguments.length,refs=new Array(_len),_key=0;_key<_len;_key++){refs[_key]=arguments[_key];}/**\n   * This will create a new function if the refs passed to this hook change and are all defined.\n   * This means react will call the old forkRef with `null` and the new forkRef\n   * with the ref. Cleanup naturally emerges from this behavior.\n   */return React.useMemo(()=>{if(refs.every(ref=>ref==null)){return null;}return instance=>{refs.forEach(ref=>{setRef(ref,instance);});};// eslint-disable-next-line react-hooks/exhaustive-deps\n},refs);}","map":{"version":3,"names":["React","setRef","useForkRef","_len","arguments","length","refs","Array","_key","useMemo","every","ref","instance","forEach"],"sources":["/home/nevin/Project-2/test-react-auth/frontend/src/node_modules/@mui/utils/useForkRef/useForkRef.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport setRef from '../setRef';\nexport default function useForkRef(...refs) {\n  /**\n   * This will create a new function if the refs passed to this hook change and are all defined.\n   * This means react will call the old forkRef with `null` and the new forkRef\n   * with the ref. Cleanup naturally emerges from this behavior.\n   */\n  return React.useMemo(() => {\n    if (refs.every(ref => ref == null)) {\n      return null;\n    }\n    return instance => {\n      refs.forEach(ref => {\n        setRef(ref, instance);\n      });\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, refs);\n}"],"mappings":"AAAA,YAAY,CAEZ,MAAO,GAAK,CAAAA,KAAK,KAAM,OAAO,CAC9B,MAAO,CAAAC,MAAM,KAAM,WAAW,CAC9B,cAAe,SAAS,CAAAC,UAAUA,CAAA,CAAU,SAAAC,IAAA,CAAAC,SAAA,CAAAC,MAAA,CAANC,IAAI,KAAAC,KAAA,CAAAJ,IAAA,EAAAK,IAAA,GAAAA,IAAA,CAAAL,IAAA,CAAAK,IAAA,IAAJF,IAAI,CAAAE,IAAA,EAAAJ,SAAA,CAAAI,IAAA,GACxC;AACF;AACA;AACA;AACA,KACE,MAAO,CAAAR,KAAK,CAACS,OAAO,CAAC,IAAM,CACzB,GAAIH,IAAI,CAACI,KAAK,CAACC,GAAG,EAAIA,GAAG,EAAI,IAAI,CAAC,CAAE,CAClC,MAAO,KAAI,CACb,CACA,MAAO,CAAAC,QAAQ,EAAI,CACjBN,IAAI,CAACO,OAAO,CAACF,GAAG,EAAI,CAClBV,MAAM,CAACU,GAAG,CAAEC,QAAQ,CAAC,CACvB,CAAC,CAAC,CACJ,CAAC,CACD;AACF,CAAC,CAAEN,IAAI,CAAC,CACV","ignoreList":[]},"metadata":{},"sourceType":"module"}