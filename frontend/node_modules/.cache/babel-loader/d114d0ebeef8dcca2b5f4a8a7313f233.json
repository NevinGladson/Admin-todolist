{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/esm/extends\";import clsx from'clsx';import{extractEventHandlers}from'./extractEventHandlers';import{omitEventHandlers}from'./omitEventHandlers';/**\n * Merges the slot component internal props (usually coming from a hook)\n * with the externally provided ones.\n *\n * The merge order is (the latter overrides the former):\n * 1. The internal props (specified as a getter function to work with get*Props hook result)\n * 2. Additional props (specified internally on a Base UI component)\n * 3. External props specified on the owner component. These should only be used on a root slot.\n * 4. External props specified in the `slotProps.*` prop.\n * 5. The `className` prop - combined from all the above.\n * @param parameters\n * @returns\n */export function mergeSlotProps(parameters){const{getSlotProps,additionalProps,externalSlotProps,externalForwardedProps,className}=parameters;if(!getSlotProps){// The simpler case - getSlotProps is not defined, so no internal event handlers are defined,\n// so we can simply merge all the props without having to worry about extracting event handlers.\nconst joinedClasses=clsx(additionalProps==null?void 0:additionalProps.className,className,externalForwardedProps==null?void 0:externalForwardedProps.className,externalSlotProps==null?void 0:externalSlotProps.className);const mergedStyle=_extends({},additionalProps==null?void 0:additionalProps.style,externalForwardedProps==null?void 0:externalForwardedProps.style,externalSlotProps==null?void 0:externalSlotProps.style);const props=_extends({},additionalProps,externalForwardedProps,externalSlotProps);if(joinedClasses.length>0){props.className=joinedClasses;}if(Object.keys(mergedStyle).length>0){props.style=mergedStyle;}return{props,internalRef:undefined};}// In this case, getSlotProps is responsible for calling the external event handlers.\n// We don't need to include them in the merged props because of this.\nconst eventHandlers=extractEventHandlers(_extends({},externalForwardedProps,externalSlotProps));const componentsPropsWithoutEventHandlers=omitEventHandlers(externalSlotProps);const otherPropsWithoutEventHandlers=omitEventHandlers(externalForwardedProps);const internalSlotProps=getSlotProps(eventHandlers);// The order of classes is important here.\n// Emotion (that we use in libraries consuming Base UI) depends on this order\n// to properly override style. It requires the most important classes to be last\n// (see https://github.com/mui/material-ui/pull/33205) for the related discussion.\nconst joinedClasses=clsx(internalSlotProps==null?void 0:internalSlotProps.className,additionalProps==null?void 0:additionalProps.className,className,externalForwardedProps==null?void 0:externalForwardedProps.className,externalSlotProps==null?void 0:externalSlotProps.className);const mergedStyle=_extends({},internalSlotProps==null?void 0:internalSlotProps.style,additionalProps==null?void 0:additionalProps.style,externalForwardedProps==null?void 0:externalForwardedProps.style,externalSlotProps==null?void 0:externalSlotProps.style);const props=_extends({},internalSlotProps,additionalProps,otherPropsWithoutEventHandlers,componentsPropsWithoutEventHandlers);if(joinedClasses.length>0){props.className=joinedClasses;}if(Object.keys(mergedStyle).length>0){props.style=mergedStyle;}return{props,internalRef:internalSlotProps.ref};}","map":{"version":3,"names":["_extends","clsx","extractEventHandlers","omitEventHandlers","mergeSlotProps","parameters","getSlotProps","additionalProps","externalSlotProps","externalForwardedProps","className","joinedClasses","mergedStyle","style","props","length","Object","keys","internalRef","undefined","eventHandlers","componentsPropsWithoutEventHandlers","otherPropsWithoutEventHandlers","internalSlotProps","ref"],"sources":["/home/nevin/Project-2/test-react-auth/frontend/src/node_modules/@mui/base/utils/mergeSlotProps.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport clsx from 'clsx';\nimport { extractEventHandlers } from './extractEventHandlers';\nimport { omitEventHandlers } from './omitEventHandlers';\n/**\n * Merges the slot component internal props (usually coming from a hook)\n * with the externally provided ones.\n *\n * The merge order is (the latter overrides the former):\n * 1. The internal props (specified as a getter function to work with get*Props hook result)\n * 2. Additional props (specified internally on a Base UI component)\n * 3. External props specified on the owner component. These should only be used on a root slot.\n * 4. External props specified in the `slotProps.*` prop.\n * 5. The `className` prop - combined from all the above.\n * @param parameters\n * @returns\n */\nexport function mergeSlotProps(parameters) {\n  const {\n    getSlotProps,\n    additionalProps,\n    externalSlotProps,\n    externalForwardedProps,\n    className\n  } = parameters;\n  if (!getSlotProps) {\n    // The simpler case - getSlotProps is not defined, so no internal event handlers are defined,\n    // so we can simply merge all the props without having to worry about extracting event handlers.\n    const joinedClasses = clsx(additionalProps == null ? void 0 : additionalProps.className, className, externalForwardedProps == null ? void 0 : externalForwardedProps.className, externalSlotProps == null ? void 0 : externalSlotProps.className);\n    const mergedStyle = _extends({}, additionalProps == null ? void 0 : additionalProps.style, externalForwardedProps == null ? void 0 : externalForwardedProps.style, externalSlotProps == null ? void 0 : externalSlotProps.style);\n    const props = _extends({}, additionalProps, externalForwardedProps, externalSlotProps);\n    if (joinedClasses.length > 0) {\n      props.className = joinedClasses;\n    }\n    if (Object.keys(mergedStyle).length > 0) {\n      props.style = mergedStyle;\n    }\n    return {\n      props,\n      internalRef: undefined\n    };\n  }\n\n  // In this case, getSlotProps is responsible for calling the external event handlers.\n  // We don't need to include them in the merged props because of this.\n\n  const eventHandlers = extractEventHandlers(_extends({}, externalForwardedProps, externalSlotProps));\n  const componentsPropsWithoutEventHandlers = omitEventHandlers(externalSlotProps);\n  const otherPropsWithoutEventHandlers = omitEventHandlers(externalForwardedProps);\n  const internalSlotProps = getSlotProps(eventHandlers);\n\n  // The order of classes is important here.\n  // Emotion (that we use in libraries consuming Base UI) depends on this order\n  // to properly override style. It requires the most important classes to be last\n  // (see https://github.com/mui/material-ui/pull/33205) for the related discussion.\n  const joinedClasses = clsx(internalSlotProps == null ? void 0 : internalSlotProps.className, additionalProps == null ? void 0 : additionalProps.className, className, externalForwardedProps == null ? void 0 : externalForwardedProps.className, externalSlotProps == null ? void 0 : externalSlotProps.className);\n  const mergedStyle = _extends({}, internalSlotProps == null ? void 0 : internalSlotProps.style, additionalProps == null ? void 0 : additionalProps.style, externalForwardedProps == null ? void 0 : externalForwardedProps.style, externalSlotProps == null ? void 0 : externalSlotProps.style);\n  const props = _extends({}, internalSlotProps, additionalProps, otherPropsWithoutEventHandlers, componentsPropsWithoutEventHandlers);\n  if (joinedClasses.length > 0) {\n    props.className = joinedClasses;\n  }\n  if (Object.keys(mergedStyle).length > 0) {\n    props.style = mergedStyle;\n  }\n  return {\n    props,\n    internalRef: internalSlotProps.ref\n  };\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}