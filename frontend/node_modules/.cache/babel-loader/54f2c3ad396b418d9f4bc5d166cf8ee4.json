{"ast":null,"code":"import{useContext}from\"react\";import{Navigate,Outlet,useLocation}from\"react-router-dom\";import{useUser,UserContext}from\"../contexts/user.context\";import{jsx as _jsx}from\"react/jsx-runtime\";const PrivateRoute=()=>{// Fetching the user from the user context.\n//  const { user } = useContext(UserContext);\nconst{user}=useUser();const location=useLocation();const redirectLoginUrl=\"/login?redirectTo=\".concat(encodeURI(location.pathname));// If the user is not logged in we are redirecting them\n// to the login page. Otherwise we are letting them to\n// continue to the page as per the URL using <Outlet />.\nreturn!user?/*#__PURE__*/_jsx(Navigate,{to:redirectLoginUrl}):/*#__PURE__*/_jsx(Outlet,{});};export default PrivateRoute;","map":{"version":3,"names":["useContext","Navigate","Outlet","useLocation","useUser","UserContext","jsx","_jsx","PrivateRoute","user","location","redirectLoginUrl","concat","encodeURI","pathname","to"],"sources":["/home/nevin/Project-2/test-react-auth/frontend/src/pages/PrivateRoute.page.js"],"sourcesContent":["import { useContext } from \"react\";\nimport { Navigate, Outlet, useLocation } from \"react-router-dom\";\nimport { useUser, UserContext } from \"../contexts/user.context\";\n \nconst PrivateRoute = () => {\n \n // Fetching the user from the user context.\n//  const { user } = useContext(UserContext);\nconst { user } = useUser();\nconst location = useLocation();\n const redirectLoginUrl = `/login?redirectTo=${encodeURI(location.pathname)}`;\n \n // If the user is not logged in we are redirecting them\n // to the login page. Otherwise we are letting them to\n // continue to the page as per the URL using <Outlet />.\n return !user ? <Navigate to={redirectLoginUrl} /> : <Outlet /> ;\n}\n \nexport default PrivateRoute;"],"mappings":"AAAA,OAASA,UAAU,KAAQ,OAAO,CAClC,OAASC,QAAQ,CAAEC,MAAM,CAAEC,WAAW,KAAQ,kBAAkB,CAChE,OAASC,OAAO,CAAEC,WAAW,KAAQ,0BAA0B,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEhE,KAAM,CAAAC,YAAY,CAAGA,CAAA,GAAM,CAE1B;AACD;AACA,KAAM,CAAEC,IAAK,CAAC,CAAGL,OAAO,CAAC,CAAC,CAC1B,KAAM,CAAAM,QAAQ,CAAGP,WAAW,CAAC,CAAC,CAC7B,KAAM,CAAAQ,gBAAgB,sBAAAC,MAAA,CAAwBC,SAAS,CAACH,QAAQ,CAACI,QAAQ,CAAC,CAAE,CAE5E;AACA;AACA;AACA,MAAO,CAACL,IAAI,cAAGF,IAAA,CAACN,QAAQ,EAACc,EAAE,CAAEJ,gBAAiB,CAAE,CAAC,cAAGJ,IAAA,CAACL,MAAM,GAAE,CAAC,CAC/D,CAAC,CAED,cAAe,CAAAM,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module"}