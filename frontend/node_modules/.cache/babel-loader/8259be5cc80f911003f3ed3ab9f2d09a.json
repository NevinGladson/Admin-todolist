{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/esm/extends\";// https://github.com/sindresorhus/is-plain-obj/blob/main/index.js\nexport function isPlainObject(item){if(typeof item!=='object'||item===null){return false;}const prototype=Object.getPrototypeOf(item);return(prototype===null||prototype===Object.prototype||Object.getPrototypeOf(prototype)===null)&&!(Symbol.toStringTag in item)&&!(Symbol.iterator in item);}function deepClone(source){if(!isPlainObject(source)){return source;}const output={};Object.keys(source).forEach(key=>{output[key]=deepClone(source[key]);});return output;}export default function deepmerge(target,source){let options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{clone:true};const output=options.clone?_extends({},target):target;if(isPlainObject(target)&&isPlainObject(source)){Object.keys(source).forEach(key=>{// Avoid prototype pollution\nif(key==='__proto__'){return;}if(isPlainObject(source[key])&&key in target&&isPlainObject(target[key])){// Since `output` is a clone of `target` and we have narrowed `target` in this block we can cast to the same type.\noutput[key]=deepmerge(target[key],source[key],options);}else if(options.clone){output[key]=isPlainObject(source[key])?deepClone(source[key]):source[key];}else{output[key]=source[key];}});}return output;}","map":{"version":3,"names":["_extends","isPlainObject","item","prototype","Object","getPrototypeOf","Symbol","toStringTag","iterator","deepClone","source","output","keys","forEach","key","deepmerge","target","options","arguments","length","undefined","clone"],"sources":["/home/nevin/Project-2/test-react-auth/frontend/src/node_modules/@mui/utils/deepmerge/deepmerge.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\n// https://github.com/sindresorhus/is-plain-obj/blob/main/index.js\nexport function isPlainObject(item) {\n  if (typeof item !== 'object' || item === null) {\n    return false;\n  }\n  const prototype = Object.getPrototypeOf(item);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in item) && !(Symbol.iterator in item);\n}\nfunction deepClone(source) {\n  if (!isPlainObject(source)) {\n    return source;\n  }\n  const output = {};\n  Object.keys(source).forEach(key => {\n    output[key] = deepClone(source[key]);\n  });\n  return output;\n}\nexport default function deepmerge(target, source, options = {\n  clone: true\n}) {\n  const output = options.clone ? _extends({}, target) : target;\n  if (isPlainObject(target) && isPlainObject(source)) {\n    Object.keys(source).forEach(key => {\n      // Avoid prototype pollution\n      if (key === '__proto__') {\n        return;\n      }\n      if (isPlainObject(source[key]) && key in target && isPlainObject(target[key])) {\n        // Since `output` is a clone of `target` and we have narrowed `target` in this block we can cast to the same type.\n        output[key] = deepmerge(target[key], source[key], options);\n      } else if (options.clone) {\n        output[key] = isPlainObject(source[key]) ? deepClone(source[key]) : source[key];\n      } else {\n        output[key] = source[key];\n      }\n    });\n  }\n  return output;\n}"],"mappings":"AAAA,MAAO,CAAAA,QAAQ,KAAM,oCAAoC,CACzD;AACA,MAAO,SAAS,CAAAC,aAAaA,CAACC,IAAI,CAAE,CAClC,GAAI,MAAO,CAAAA,IAAI,GAAK,QAAQ,EAAIA,IAAI,GAAK,IAAI,CAAE,CAC7C,MAAO,MAAK,CACd,CACA,KAAM,CAAAC,SAAS,CAAGC,MAAM,CAACC,cAAc,CAACH,IAAI,CAAC,CAC7C,MAAO,CAACC,SAAS,GAAK,IAAI,EAAIA,SAAS,GAAKC,MAAM,CAACD,SAAS,EAAIC,MAAM,CAACC,cAAc,CAACF,SAAS,CAAC,GAAK,IAAI,GAAK,EAAEG,MAAM,CAACC,WAAW,GAAI,CAAAL,IAAI,CAAC,EAAI,EAAEI,MAAM,CAACE,QAAQ,GAAI,CAAAN,IAAI,CAAC,CAC3K,CACA,QAAS,CAAAO,SAASA,CAACC,MAAM,CAAE,CACzB,GAAI,CAACT,aAAa,CAACS,MAAM,CAAC,CAAE,CAC1B,MAAO,CAAAA,MAAM,CACf,CACA,KAAM,CAAAC,MAAM,CAAG,CAAC,CAAC,CACjBP,MAAM,CAACQ,IAAI,CAACF,MAAM,CAAC,CAACG,OAAO,CAACC,GAAG,EAAI,CACjCH,MAAM,CAACG,GAAG,CAAC,CAAGL,SAAS,CAACC,MAAM,CAACI,GAAG,CAAC,CAAC,CACtC,CAAC,CAAC,CACF,MAAO,CAAAH,MAAM,CACf,CACA,cAAe,SAAS,CAAAI,SAASA,CAACC,MAAM,CAAEN,MAAM,CAE7C,IAF+C,CAAAO,OAAO,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAC1DG,KAAK,CAAE,IACT,CAAC,CACC,KAAM,CAAAV,MAAM,CAAGM,OAAO,CAACI,KAAK,CAAGrB,QAAQ,CAAC,CAAC,CAAC,CAAEgB,MAAM,CAAC,CAAGA,MAAM,CAC5D,GAAIf,aAAa,CAACe,MAAM,CAAC,EAAIf,aAAa,CAACS,MAAM,CAAC,CAAE,CAClDN,MAAM,CAACQ,IAAI,CAACF,MAAM,CAAC,CAACG,OAAO,CAACC,GAAG,EAAI,CACjC;AACA,GAAIA,GAAG,GAAK,WAAW,CAAE,CACvB,OACF,CACA,GAAIb,aAAa,CAACS,MAAM,CAACI,GAAG,CAAC,CAAC,EAAIA,GAAG,GAAI,CAAAE,MAAM,EAAIf,aAAa,CAACe,MAAM,CAACF,GAAG,CAAC,CAAC,CAAE,CAC7E;AACAH,MAAM,CAACG,GAAG,CAAC,CAAGC,SAAS,CAACC,MAAM,CAACF,GAAG,CAAC,CAAEJ,MAAM,CAACI,GAAG,CAAC,CAAEG,OAAO,CAAC,CAC5D,CAAC,IAAM,IAAIA,OAAO,CAACI,KAAK,CAAE,CACxBV,MAAM,CAACG,GAAG,CAAC,CAAGb,aAAa,CAACS,MAAM,CAACI,GAAG,CAAC,CAAC,CAAGL,SAAS,CAACC,MAAM,CAACI,GAAG,CAAC,CAAC,CAAGJ,MAAM,CAACI,GAAG,CAAC,CACjF,CAAC,IAAM,CACLH,MAAM,CAACG,GAAG,CAAC,CAAGJ,MAAM,CAACI,GAAG,CAAC,CAC3B,CACF,CAAC,CAAC,CACJ,CACA,MAAO,CAAAH,MAAM,CACf","ignoreList":[]},"metadata":{},"sourceType":"module"}