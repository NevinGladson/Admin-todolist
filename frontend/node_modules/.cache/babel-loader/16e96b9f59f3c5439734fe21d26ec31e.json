{"ast":null,"code":"'use client';import _extends from\"@babel/runtime/helpers/esm/extends\";import _objectWithoutPropertiesLoose from\"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";const _excluded=[\"children\",\"className\",\"lastTransitionedPropertyOnExit\",\"enterClassName\",\"exitClassName\"];import*as React from'react';import PropTypes from'prop-types';import clsx from'clsx';import{useTransitionStateManager}from'../useTransition';import{jsx as _jsx}from\"react/jsx-runtime\";/**\n * A utility component that hooks up to the Base UI transitions API and\n * applies a CSS transition to its children when necessary.\n *\n * Demos:\n *\n * - [Transitions](https://mui.com/base-ui/react-transitions/)\n *\n * API:\n *\n * - [CssTransition API](https://mui.com/base-ui/react-transitions/components-api/#css-transition)\n */const CssTransition=/*#__PURE__*/React.forwardRef(function CssTransition(props,forwardedRef){const{children,className,lastTransitionedPropertyOnExit,enterClassName,exitClassName}=props,other=_objectWithoutPropertiesLoose(props,_excluded);const{requestedEnter,onExited}=useTransitionStateManager();const[isEntering,setIsEntering]=React.useState(false);// The `isEntering` state (which is used to determine the right CSS class to apply)\n// is updated slightly (one animation frame) after the `requestedEnter` state is updated.\n// Thanks to this, elements that are mounted will have their enter transition applied\n// (if the `enterClassName` was applied when the element was mounted, the transition would not be fired).\nReact.useEffect(()=>{if(requestedEnter){requestAnimationFrame(()=>{setIsEntering(true);});}else{setIsEntering(false);}},[requestedEnter]);const handleTransitionEnd=React.useCallback(event=>{if(!requestedEnter&&(lastTransitionedPropertyOnExit==null||event.propertyName===lastTransitionedPropertyOnExit)){onExited();}},[onExited,requestedEnter,lastTransitionedPropertyOnExit]);return/*#__PURE__*/_jsx(\"div\",_extends({onTransitionEnd:handleTransitionEnd,className:clsx(className,isEntering?enterClassName:exitClassName)},other,{ref:forwardedRef,children:children}));});process.env.NODE_ENV!==\"production\"?CssTransition.propTypes={children:PropTypes.node,className:PropTypes.string,enterClassName:PropTypes.string,exitClassName:PropTypes.string,lastTransitionedPropertyOnEnter:PropTypes.string,lastTransitionedPropertyOnExit:PropTypes.string}:void 0;export{CssTransition};","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","clsx","useTransitionStateManager","jsx","_jsx","CssTransition","forwardRef","props","forwardedRef","children","className","lastTransitionedPropertyOnExit","enterClassName","exitClassName","other","requestedEnter","onExited","isEntering","setIsEntering","useState","useEffect","requestAnimationFrame","handleTransitionEnd","useCallback","event","propertyName","onTransitionEnd","ref","process","env","NODE_ENV","propTypes","node","string","lastTransitionedPropertyOnEnter"],"sources":["/home/nevin/Project-2/test-react-auth/frontend/src/node_modules/@mui/base/Transitions/CssTransition.js"],"sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"lastTransitionedPropertyOnExit\", \"enterClassName\", \"exitClassName\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useTransitionStateManager } from '../useTransition';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * A utility component that hooks up to the Base UI transitions API and\n * applies a CSS transition to its children when necessary.\n *\n * Demos:\n *\n * - [Transitions](https://mui.com/base-ui/react-transitions/)\n *\n * API:\n *\n * - [CssTransition API](https://mui.com/base-ui/react-transitions/components-api/#css-transition)\n */\nconst CssTransition = /*#__PURE__*/React.forwardRef(function CssTransition(props, forwardedRef) {\n  const {\n      children,\n      className,\n      lastTransitionedPropertyOnExit,\n      enterClassName,\n      exitClassName\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    requestedEnter,\n    onExited\n  } = useTransitionStateManager();\n  const [isEntering, setIsEntering] = React.useState(false);\n\n  // The `isEntering` state (which is used to determine the right CSS class to apply)\n  // is updated slightly (one animation frame) after the `requestedEnter` state is updated.\n  // Thanks to this, elements that are mounted will have their enter transition applied\n  // (if the `enterClassName` was applied when the element was mounted, the transition would not be fired).\n  React.useEffect(() => {\n    if (requestedEnter) {\n      requestAnimationFrame(() => {\n        setIsEntering(true);\n      });\n    } else {\n      setIsEntering(false);\n    }\n  }, [requestedEnter]);\n  const handleTransitionEnd = React.useCallback(event => {\n    if (!requestedEnter && (lastTransitionedPropertyOnExit == null || event.propertyName === lastTransitionedPropertyOnExit)) {\n      onExited();\n    }\n  }, [onExited, requestedEnter, lastTransitionedPropertyOnExit]);\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    onTransitionEnd: handleTransitionEnd,\n    className: clsx(className, isEntering ? enterClassName : exitClassName)\n  }, other, {\n    ref: forwardedRef,\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CssTransition.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  enterClassName: PropTypes.string,\n  exitClassName: PropTypes.string,\n  lastTransitionedPropertyOnEnter: PropTypes.string,\n  lastTransitionedPropertyOnExit: PropTypes.string\n} : void 0;\nexport { CssTransition };"],"mappings":"AAAA,YAAY,CAEZ,MAAO,CAAAA,QAAQ,KAAM,oCAAoC,CACzD,MAAO,CAAAC,6BAA6B,KAAM,yDAAyD,CACnG,KAAM,CAAAC,SAAS,CAAG,CAAC,UAAU,CAAE,WAAW,CAAE,gCAAgC,CAAE,gBAAgB,CAAE,eAAe,CAAC,CAChH,MAAO,GAAK,CAAAC,KAAK,KAAM,OAAO,CAC9B,MAAO,CAAAC,SAAS,KAAM,YAAY,CAClC,MAAO,CAAAC,IAAI,KAAM,MAAM,CACvB,OAASC,yBAAyB,KAAQ,kBAAkB,CAC5D,OAASC,GAAG,GAAI,CAAAC,IAAI,KAAQ,mBAAmB,CAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,KAAM,CAAAC,aAAa,CAAG,aAAaN,KAAK,CAACO,UAAU,CAAC,QAAS,CAAAD,aAAaA,CAACE,KAAK,CAAEC,YAAY,CAAE,CAC9F,KAAM,CACFC,QAAQ,CACRC,SAAS,CACTC,8BAA8B,CAC9BC,cAAc,CACdC,aACF,CAAC,CAAGN,KAAK,CACTO,KAAK,CAAGjB,6BAA6B,CAACU,KAAK,CAAET,SAAS,CAAC,CACzD,KAAM,CACJiB,cAAc,CACdC,QACF,CAAC,CAAGd,yBAAyB,CAAC,CAAC,CAC/B,KAAM,CAACe,UAAU,CAAEC,aAAa,CAAC,CAAGnB,KAAK,CAACoB,QAAQ,CAAC,KAAK,CAAC,CAEzD;AACA;AACA;AACA;AACApB,KAAK,CAACqB,SAAS,CAAC,IAAM,CACpB,GAAIL,cAAc,CAAE,CAClBM,qBAAqB,CAAC,IAAM,CAC1BH,aAAa,CAAC,IAAI,CAAC,CACrB,CAAC,CAAC,CACJ,CAAC,IAAM,CACLA,aAAa,CAAC,KAAK,CAAC,CACtB,CACF,CAAC,CAAE,CAACH,cAAc,CAAC,CAAC,CACpB,KAAM,CAAAO,mBAAmB,CAAGvB,KAAK,CAACwB,WAAW,CAACC,KAAK,EAAI,CACrD,GAAI,CAACT,cAAc,GAAKJ,8BAA8B,EAAI,IAAI,EAAIa,KAAK,CAACC,YAAY,GAAKd,8BAA8B,CAAC,CAAE,CACxHK,QAAQ,CAAC,CAAC,CACZ,CACF,CAAC,CAAE,CAACA,QAAQ,CAAED,cAAc,CAAEJ,8BAA8B,CAAC,CAAC,CAC9D,MAAO,aAAaP,IAAI,CAAC,KAAK,CAAER,QAAQ,CAAC,CACvC8B,eAAe,CAAEJ,mBAAmB,CACpCZ,SAAS,CAAET,IAAI,CAACS,SAAS,CAAEO,UAAU,CAAGL,cAAc,CAAGC,aAAa,CACxE,CAAC,CAAEC,KAAK,CAAE,CACRa,GAAG,CAAEnB,YAAY,CACjBC,QAAQ,CAAEA,QACZ,CAAC,CAAC,CAAC,CACL,CAAC,CAAC,CACFmB,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAK,YAAY,CAAGzB,aAAa,CAAC0B,SAAS,CAAG,CAChEtB,QAAQ,CAAET,SAAS,CAACgC,IAAI,CACxBtB,SAAS,CAAEV,SAAS,CAACiC,MAAM,CAC3BrB,cAAc,CAAEZ,SAAS,CAACiC,MAAM,CAChCpB,aAAa,CAAEb,SAAS,CAACiC,MAAM,CAC/BC,+BAA+B,CAAElC,SAAS,CAACiC,MAAM,CACjDtB,8BAA8B,CAAEX,SAAS,CAACiC,MAC5C,CAAC,CAAG,IAAK,EAAC,CACV,OAAS5B,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module"}