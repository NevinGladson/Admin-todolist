{"ast":null,"code":"'use client';import*as React from'react';/**\n * @ignore - do not document.\n *\n * Use this function determine the host element correctly on the server (in a SSR context, for example Next.js)\n */export function useRootElementName(parameters){const{rootElementName:rootElementNameProp='',componentName}=parameters;const[rootElementName,setRootElementName]=React.useState(rootElementNameProp.toUpperCase());if(process.env.NODE_ENV!=='production'){// eslint-disable-next-line react-hooks/rules-of-hooks\nReact.useEffect(()=>{if(rootElementNameProp&&rootElementName!==rootElementNameProp.toUpperCase()){console.error(\"useRootElementName: the `rootElementName` prop of \".concat(componentName?\"the \".concat(componentName,\" component\"):'a component',\" expected the '\").concat(rootElementNameProp,\"' element, but a '\").concat(rootElementName.toLowerCase(),\"' was rendered instead\"),'This may cause hydration issues in an SSR context, for example in a Next.js app');}},[rootElementNameProp,rootElementName,componentName]);}const updateRootElementName=React.useCallback(instance=>{var _instance$tagName;setRootElementName((_instance$tagName=instance==null?void 0:instance.tagName)!=null?_instance$tagName:'');},[]);return[rootElementName,updateRootElementName];}","map":{"version":3,"names":["React","useRootElementName","parameters","rootElementName","rootElementNameProp","componentName","setRootElementName","useState","toUpperCase","process","env","NODE_ENV","useEffect","console","error","concat","toLowerCase","updateRootElementName","useCallback","instance","_instance$tagName","tagName"],"sources":["/home/nevin/Project-2/test-react-auth/frontend/src/node_modules/@mui/base/utils/useRootElementName.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\n/**\n * @ignore - do not document.\n *\n * Use this function determine the host element correctly on the server (in a SSR context, for example Next.js)\n */\nexport function useRootElementName(parameters) {\n  const {\n    rootElementName: rootElementNameProp = '',\n    componentName\n  } = parameters;\n  const [rootElementName, setRootElementName] = React.useState(rootElementNameProp.toUpperCase());\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (rootElementNameProp && rootElementName !== rootElementNameProp.toUpperCase()) {\n        console.error(`useRootElementName: the \\`rootElementName\\` prop of ${componentName ? `the ${componentName} component` : 'a component'} expected the '${rootElementNameProp}' element, but a '${rootElementName.toLowerCase()}' was rendered instead`, 'This may cause hydration issues in an SSR context, for example in a Next.js app');\n      }\n    }, [rootElementNameProp, rootElementName, componentName]);\n  }\n  const updateRootElementName = React.useCallback(instance => {\n    var _instance$tagName;\n    setRootElementName((_instance$tagName = instance == null ? void 0 : instance.tagName) != null ? _instance$tagName : '');\n  }, []);\n  return [rootElementName, updateRootElementName];\n}"],"mappings":"AAAA,YAAY,CAEZ,MAAO,GAAK,CAAAA,KAAK,KAAM,OAAO,CAC9B;AACA;AACA;AACA;AACA,GACA,MAAO,SAAS,CAAAC,kBAAkBA,CAACC,UAAU,CAAE,CAC7C,KAAM,CACJC,eAAe,CAAEC,mBAAmB,CAAG,EAAE,CACzCC,aACF,CAAC,CAAGH,UAAU,CACd,KAAM,CAACC,eAAe,CAAEG,kBAAkB,CAAC,CAAGN,KAAK,CAACO,QAAQ,CAACH,mBAAmB,CAACI,WAAW,CAAC,CAAC,CAAC,CAC/F,GAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAK,YAAY,CAAE,CACzC;AACAX,KAAK,CAACY,SAAS,CAAC,IAAM,CACpB,GAAIR,mBAAmB,EAAID,eAAe,GAAKC,mBAAmB,CAACI,WAAW,CAAC,CAAC,CAAE,CAChFK,OAAO,CAACC,KAAK,sDAAAC,MAAA,CAAwDV,aAAa,QAAAU,MAAA,CAAUV,aAAa,eAAe,aAAa,oBAAAU,MAAA,CAAkBX,mBAAmB,uBAAAW,MAAA,CAAqBZ,eAAe,CAACa,WAAW,CAAC,CAAC,2BAA0B,iFAAiF,CAAC,CAC1U,CACF,CAAC,CAAE,CAACZ,mBAAmB,CAAED,eAAe,CAAEE,aAAa,CAAC,CAAC,CAC3D,CACA,KAAM,CAAAY,qBAAqB,CAAGjB,KAAK,CAACkB,WAAW,CAACC,QAAQ,EAAI,CAC1D,GAAI,CAAAC,iBAAiB,CACrBd,kBAAkB,CAAC,CAACc,iBAAiB,CAAGD,QAAQ,EAAI,IAAI,CAAG,IAAK,EAAC,CAAGA,QAAQ,CAACE,OAAO,GAAK,IAAI,CAAGD,iBAAiB,CAAG,EAAE,CAAC,CACzH,CAAC,CAAE,EAAE,CAAC,CACN,MAAO,CAACjB,eAAe,CAAEc,qBAAqB,CAAC,CACjD","ignoreList":[]},"metadata":{},"sourceType":"module"}