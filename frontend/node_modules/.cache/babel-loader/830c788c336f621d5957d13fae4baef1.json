{"ast":null,"code":"'use client';import*as React from'react';import*as ReactDOM from'react-dom';import{exactProp,HTMLElementType,unstable_useEnhancedEffect as useEnhancedEffect,unstable_useForkRef as useForkRef,unstable_setRef as setRef}from'@mui/utils';import{jsx as _jsx}from\"react/jsx-runtime\";function getContainer(container){return typeof container==='function'?container():container;}/**\n * Portals provide a first-class way to render children into a DOM node\n * that exists outside the DOM hierarchy of the parent component.\n *\n * Demos:\n *\n * - [Portal](https://mui.com/base-ui/react-portal/)\n *\n * API:\n *\n * - [Portal API](https://mui.com/base-ui/react-portal/components-api/#portal)\n */const Portal=/*#__PURE__*/React.forwardRef(function Portal(props,forwardedRef){const{children,container,disablePortal=false}=props;const[mountNode,setMountNode]=React.useState(null);// @ts-expect-error TODO upstream fix\nconst handleRef=useForkRef(/*#__PURE__*/ /*#__PURE__*/React.isValidElement(children)?children.ref:null,forwardedRef);useEnhancedEffect(()=>{if(!disablePortal){setMountNode(getContainer(container)||document.body);}},[container,disablePortal]);useEnhancedEffect(()=>{if(mountNode&&!disablePortal){setRef(forwardedRef,mountNode);return()=>{setRef(forwardedRef,null);};}return undefined;},[forwardedRef,mountNode,disablePortal]);if(disablePortal){if(/*#__PURE__*/React.isValidElement(children)){const newProps={ref:handleRef};return/*#__PURE__*/React.cloneElement(children,newProps);}return/*#__PURE__*/_jsx(React.Fragment,{children:children});}return/*#__PURE__*/_jsx(React.Fragment,{children:mountNode?/*#__PURE__*/ReactDOM.createPortal(children,mountNode):mountNode});});process.env.NODE_ENV!==\"production\"?void 0:void 0;if(process.env.NODE_ENV!=='production'){// eslint-disable-next-line\nPortal['propTypes'+'']=exactProp(Portal.propTypes);}export{Portal};","map":{"version":3,"names":["React","ReactDOM","exactProp","HTMLElementType","unstable_useEnhancedEffect","useEnhancedEffect","unstable_useForkRef","useForkRef","unstable_setRef","setRef","jsx","_jsx","getContainer","container","Portal","forwardRef","props","forwardedRef","children","disablePortal","mountNode","setMountNode","useState","handleRef","isValidElement","ref","document","body","undefined","newProps","cloneElement","Fragment","createPortal","process","env","NODE_ENV","propTypes"],"sources":["/home/nevin/Project-2/test-react-auth/frontend/src/node_modules/@mui/base/Portal/Portal.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { exactProp, HTMLElementType, unstable_useEnhancedEffect as useEnhancedEffect, unstable_useForkRef as useForkRef, unstable_setRef as setRef } from '@mui/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction getContainer(container) {\n  return typeof container === 'function' ? container() : container;\n}\n\n/**\n * Portals provide a first-class way to render children into a DOM node\n * that exists outside the DOM hierarchy of the parent component.\n *\n * Demos:\n *\n * - [Portal](https://mui.com/base-ui/react-portal/)\n *\n * API:\n *\n * - [Portal API](https://mui.com/base-ui/react-portal/components-api/#portal)\n */\nconst Portal = /*#__PURE__*/React.forwardRef(function Portal(props, forwardedRef) {\n  const {\n    children,\n    container,\n    disablePortal = false\n  } = props;\n  const [mountNode, setMountNode] = React.useState(null);\n  // @ts-expect-error TODO upstream fix\n  const handleRef = useForkRef( /*#__PURE__*/React.isValidElement(children) ? children.ref : null, forwardedRef);\n  useEnhancedEffect(() => {\n    if (!disablePortal) {\n      setMountNode(getContainer(container) || document.body);\n    }\n  }, [container, disablePortal]);\n  useEnhancedEffect(() => {\n    if (mountNode && !disablePortal) {\n      setRef(forwardedRef, mountNode);\n      return () => {\n        setRef(forwardedRef, null);\n      };\n    }\n    return undefined;\n  }, [forwardedRef, mountNode, disablePortal]);\n  if (disablePortal) {\n    if ( /*#__PURE__*/React.isValidElement(children)) {\n      const newProps = {\n        ref: handleRef\n      };\n      return /*#__PURE__*/React.cloneElement(children, newProps);\n    }\n    return /*#__PURE__*/_jsx(React.Fragment, {\n      children: children\n    });\n  }\n  return /*#__PURE__*/_jsx(React.Fragment, {\n    children: mountNode ? /*#__PURE__*/ReactDOM.createPortal(children, mountNode) : mountNode\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Portal.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The children to render into the `container`.\n   */\n  children: PropTypes.node,\n  /**\n   * An HTML element or function that returns one.\n   * The `container` will have the portal children appended to it.\n   *\n   * You can also provide a callback, which is called in a React layout effect.\n   * This lets you set the container from a ref, and also makes server-side rendering possible.\n   *\n   * By default, it uses the body of the top-level document object,\n   * so it's simply `document.body` most of the time.\n   */\n  container: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([HTMLElementType, PropTypes.func]),\n  /**\n   * The `children` will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  Portal['propTypes' + ''] = exactProp(Portal.propTypes);\n}\nexport { Portal };"],"mappings":"AAAA,YAAY,CAEZ,MAAO,GAAK,CAAAA,KAAK,KAAM,OAAO,CAC9B,MAAO,GAAK,CAAAC,QAAQ,KAAM,WAAW,CAErC,OAASC,SAAS,CAAEC,eAAe,CAAEC,0BAA0B,GAAI,CAAAC,iBAAiB,CAAEC,mBAAmB,GAAI,CAAAC,UAAU,CAAEC,eAAe,GAAI,CAAAC,MAAM,KAAQ,YAAY,CACtK,OAASC,GAAG,GAAI,CAAAC,IAAI,KAAQ,mBAAmB,CAC/C,QAAS,CAAAC,YAAYA,CAACC,SAAS,CAAE,CAC/B,MAAO,OAAO,CAAAA,SAAS,GAAK,UAAU,CAAGA,SAAS,CAAC,CAAC,CAAGA,SAAS,CAClE,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,KAAM,CAAAC,MAAM,CAAG,aAAad,KAAK,CAACe,UAAU,CAAC,QAAS,CAAAD,MAAMA,CAACE,KAAK,CAAEC,YAAY,CAAE,CAChF,KAAM,CACJC,QAAQ,CACRL,SAAS,CACTM,aAAa,CAAG,KAClB,CAAC,CAAGH,KAAK,CACT,KAAM,CAACI,SAAS,CAAEC,YAAY,CAAC,CAAGrB,KAAK,CAACsB,QAAQ,CAAC,IAAI,CAAC,CACtD;AACA,KAAM,CAAAC,SAAS,CAAGhB,UAAU,CAAE,aAAa,cAAAP,KAAK,CAACwB,cAAc,CAACN,QAAQ,CAAC,CAAGA,QAAQ,CAACO,GAAG,CAAG,IAAI,CAAER,YAAY,CAAC,CAC9GZ,iBAAiB,CAAC,IAAM,CACtB,GAAI,CAACc,aAAa,CAAE,CAClBE,YAAY,CAACT,YAAY,CAACC,SAAS,CAAC,EAAIa,QAAQ,CAACC,IAAI,CAAC,CACxD,CACF,CAAC,CAAE,CAACd,SAAS,CAAEM,aAAa,CAAC,CAAC,CAC9Bd,iBAAiB,CAAC,IAAM,CACtB,GAAIe,SAAS,EAAI,CAACD,aAAa,CAAE,CAC/BV,MAAM,CAACQ,YAAY,CAAEG,SAAS,CAAC,CAC/B,MAAO,IAAM,CACXX,MAAM,CAACQ,YAAY,CAAE,IAAI,CAAC,CAC5B,CAAC,CACH,CACA,MAAO,CAAAW,SAAS,CAClB,CAAC,CAAE,CAACX,YAAY,CAAEG,SAAS,CAAED,aAAa,CAAC,CAAC,CAC5C,GAAIA,aAAa,CAAE,CACjB,GAAK,aAAanB,KAAK,CAACwB,cAAc,CAACN,QAAQ,CAAC,CAAE,CAChD,KAAM,CAAAW,QAAQ,CAAG,CACfJ,GAAG,CAAEF,SACP,CAAC,CACD,MAAO,aAAavB,KAAK,CAAC8B,YAAY,CAACZ,QAAQ,CAAEW,QAAQ,CAAC,CAC5D,CACA,MAAO,aAAalB,IAAI,CAACX,KAAK,CAAC+B,QAAQ,CAAE,CACvCb,QAAQ,CAAEA,QACZ,CAAC,CAAC,CACJ,CACA,MAAO,aAAaP,IAAI,CAACX,KAAK,CAAC+B,QAAQ,CAAE,CACvCb,QAAQ,CAAEE,SAAS,CAAG,aAAanB,QAAQ,CAAC+B,YAAY,CAACd,QAAQ,CAAEE,SAAS,CAAC,CAAGA,SAClF,CAAC,CAAC,CACJ,CAAC,CAAC,CACFa,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAK,YAAY,QAyBjC,IAAK,EAAC,CACV,GAAIF,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAK,YAAY,CAAE,CACzC;AACArB,MAAM,CAAC,WAAW,CAAG,EAAE,CAAC,CAAGZ,SAAS,CAACY,MAAM,CAACsB,SAAS,CAAC,CACxD,CACA,OAAStB,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module"}