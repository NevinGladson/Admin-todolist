{"ast":null,"code":"'use client';import*as React from'react';/**\n * Allows child elements to be transitioned in and out.\n *\n * Demos:\n *\n * - [Transitions](https://mui.com/base-ui/react-transitions/#hooks)\n *\n * API:\n *\n * - [useTransitionTrigger API](https://mui.com/base-ui/react-transitions/hooks-api/#use-transition-trigger)\n */export function useTransitionTrigger(requestEnter){const[exitTransitionFinished,setExitTransitionFinished]=React.useState(true);const hasPendingExitTransition=React.useRef(false);const registeredTransitions=React.useRef(0);const[hasTransition,setHasTransition]=React.useState(false);const previousRequestEnter=React.useRef(requestEnter);React.useEffect(()=>{if(!requestEnter&&// checking registeredTransitions.current instead of hasTransition to avoid this effect re-firing whenever hasTransition changes\nregisteredTransitions.current>0&&// prevents waiting for a pending transition right after mounting\npreviousRequestEnter.current!==requestEnter){hasPendingExitTransition.current=true;setExitTransitionFinished(false);}previousRequestEnter.current=requestEnter;},[requestEnter]);const handleExited=React.useCallback(()=>{hasPendingExitTransition.current=false;setExitTransitionFinished(true);},[]);const registerTransition=React.useCallback(()=>{registeredTransitions.current+=1;setHasTransition(true);return()=>{registeredTransitions.current-=1;if(registeredTransitions.current===0){setHasTransition(false);}};},[]);let hasExited;if(!hasTransition){// If there are no transitions registered, the `exited` state is opposite of `requestEnter` immediately.\nhasExited=!requestEnter;}else if(requestEnter){hasExited=false;}else{hasExited=!hasPendingExitTransition.current&&exitTransitionFinished;}const contextValue=React.useMemo(()=>({requestedEnter:requestEnter,onExited:handleExited,registerTransition,hasExited}),[handleExited,requestEnter,registerTransition,hasExited]);return{contextValue,hasExited};}","map":{"version":3,"names":["React","useTransitionTrigger","requestEnter","exitTransitionFinished","setExitTransitionFinished","useState","hasPendingExitTransition","useRef","registeredTransitions","hasTransition","setHasTransition","previousRequestEnter","useEffect","current","handleExited","useCallback","registerTransition","hasExited","contextValue","useMemo","requestedEnter","onExited"],"sources":["/home/nevin/Project-2/test-react-auth/frontend/src/node_modules/@mui/base/useTransition/useTransitionTrigger.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\n/**\n * Allows child elements to be transitioned in and out.\n *\n * Demos:\n *\n * - [Transitions](https://mui.com/base-ui/react-transitions/#hooks)\n *\n * API:\n *\n * - [useTransitionTrigger API](https://mui.com/base-ui/react-transitions/hooks-api/#use-transition-trigger)\n */\nexport function useTransitionTrigger(requestEnter) {\n  const [exitTransitionFinished, setExitTransitionFinished] = React.useState(true);\n  const hasPendingExitTransition = React.useRef(false);\n  const registeredTransitions = React.useRef(0);\n  const [hasTransition, setHasTransition] = React.useState(false);\n  const previousRequestEnter = React.useRef(requestEnter);\n  React.useEffect(() => {\n    if (!requestEnter &&\n    // checking registeredTransitions.current instead of hasTransition to avoid this effect re-firing whenever hasTransition changes\n    registeredTransitions.current > 0 &&\n    // prevents waiting for a pending transition right after mounting\n    previousRequestEnter.current !== requestEnter) {\n      hasPendingExitTransition.current = true;\n      setExitTransitionFinished(false);\n    }\n    previousRequestEnter.current = requestEnter;\n  }, [requestEnter]);\n  const handleExited = React.useCallback(() => {\n    hasPendingExitTransition.current = false;\n    setExitTransitionFinished(true);\n  }, []);\n  const registerTransition = React.useCallback(() => {\n    registeredTransitions.current += 1;\n    setHasTransition(true);\n    return () => {\n      registeredTransitions.current -= 1;\n      if (registeredTransitions.current === 0) {\n        setHasTransition(false);\n      }\n    };\n  }, []);\n  let hasExited;\n  if (!hasTransition) {\n    // If there are no transitions registered, the `exited` state is opposite of `requestEnter` immediately.\n    hasExited = !requestEnter;\n  } else if (requestEnter) {\n    hasExited = false;\n  } else {\n    hasExited = !hasPendingExitTransition.current && exitTransitionFinished;\n  }\n  const contextValue = React.useMemo(() => ({\n    requestedEnter: requestEnter,\n    onExited: handleExited,\n    registerTransition,\n    hasExited\n  }), [handleExited, requestEnter, registerTransition, hasExited]);\n  return {\n    contextValue,\n    hasExited\n  };\n}"],"mappings":"AAAA,YAAY,CAEZ,MAAO,GAAK,CAAAA,KAAK,KAAM,OAAO,CAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,SAAS,CAAAC,oBAAoBA,CAACC,YAAY,CAAE,CACjD,KAAM,CAACC,sBAAsB,CAAEC,yBAAyB,CAAC,CAAGJ,KAAK,CAACK,QAAQ,CAAC,IAAI,CAAC,CAChF,KAAM,CAAAC,wBAAwB,CAAGN,KAAK,CAACO,MAAM,CAAC,KAAK,CAAC,CACpD,KAAM,CAAAC,qBAAqB,CAAGR,KAAK,CAACO,MAAM,CAAC,CAAC,CAAC,CAC7C,KAAM,CAACE,aAAa,CAAEC,gBAAgB,CAAC,CAAGV,KAAK,CAACK,QAAQ,CAAC,KAAK,CAAC,CAC/D,KAAM,CAAAM,oBAAoB,CAAGX,KAAK,CAACO,MAAM,CAACL,YAAY,CAAC,CACvDF,KAAK,CAACY,SAAS,CAAC,IAAM,CACpB,GAAI,CAACV,YAAY,EACjB;AACAM,qBAAqB,CAACK,OAAO,CAAG,CAAC,EACjC;AACAF,oBAAoB,CAACE,OAAO,GAAKX,YAAY,CAAE,CAC7CI,wBAAwB,CAACO,OAAO,CAAG,IAAI,CACvCT,yBAAyB,CAAC,KAAK,CAAC,CAClC,CACAO,oBAAoB,CAACE,OAAO,CAAGX,YAAY,CAC7C,CAAC,CAAE,CAACA,YAAY,CAAC,CAAC,CAClB,KAAM,CAAAY,YAAY,CAAGd,KAAK,CAACe,WAAW,CAAC,IAAM,CAC3CT,wBAAwB,CAACO,OAAO,CAAG,KAAK,CACxCT,yBAAyB,CAAC,IAAI,CAAC,CACjC,CAAC,CAAE,EAAE,CAAC,CACN,KAAM,CAAAY,kBAAkB,CAAGhB,KAAK,CAACe,WAAW,CAAC,IAAM,CACjDP,qBAAqB,CAACK,OAAO,EAAI,CAAC,CAClCH,gBAAgB,CAAC,IAAI,CAAC,CACtB,MAAO,IAAM,CACXF,qBAAqB,CAACK,OAAO,EAAI,CAAC,CAClC,GAAIL,qBAAqB,CAACK,OAAO,GAAK,CAAC,CAAE,CACvCH,gBAAgB,CAAC,KAAK,CAAC,CACzB,CACF,CAAC,CACH,CAAC,CAAE,EAAE,CAAC,CACN,GAAI,CAAAO,SAAS,CACb,GAAI,CAACR,aAAa,CAAE,CAClB;AACAQ,SAAS,CAAG,CAACf,YAAY,CAC3B,CAAC,IAAM,IAAIA,YAAY,CAAE,CACvBe,SAAS,CAAG,KAAK,CACnB,CAAC,IAAM,CACLA,SAAS,CAAG,CAACX,wBAAwB,CAACO,OAAO,EAAIV,sBAAsB,CACzE,CACA,KAAM,CAAAe,YAAY,CAAGlB,KAAK,CAACmB,OAAO,CAAC,KAAO,CACxCC,cAAc,CAAElB,YAAY,CAC5BmB,QAAQ,CAAEP,YAAY,CACtBE,kBAAkB,CAClBC,SACF,CAAC,CAAC,CAAE,CAACH,YAAY,CAAEZ,YAAY,CAAEc,kBAAkB,CAAEC,SAAS,CAAC,CAAC,CAChE,MAAO,CACLC,YAAY,CACZD,SACF,CAAC,CACH","ignoreList":[]},"metadata":{},"sourceType":"module"}