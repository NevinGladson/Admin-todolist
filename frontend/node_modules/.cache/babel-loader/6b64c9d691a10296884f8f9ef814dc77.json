{"ast":null,"code":"import{Button,TextField}from\"@mui/material\";import{useContext,useEffect,useState}from\"react\";import{Link,useLocation,useNavigate}from\"react-router-dom\";import{useUser,UserContext}from\"../contexts/user.context\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const Login=()=>{const navigate=useNavigate();const location=useLocation();// We are consuming our user-management context to\n// get & set the user details here\n//  const { user, fetchUser, emailPasswordLogin } = useContext(UserContext);\nconst{user,fetchUser,emailPasswordLogin}=useUser();// We are using React's \"useState\" hook to keep track\n//  of the form values.\nconst[form,setForm]=useState({email:\"\",password:\"\"});// This function will be called whenever the user edits the form.\nconst onFormInputChange=event=>{const{name,value}=event.target;setForm({...form,[name]:value});};// This function will redirect the user to the\n// appropriate page once the authentication is done.\nconst redirectNow=()=>{const redirectTo=location.search.replace(\"?redirectTo=\",\"\");navigate(redirectTo?redirectTo:\"/\");};// Once a user logs in to our app, we don’t want to ask them for their\n// credentials again every time the user refreshes or revisits our app, \n// so we are checking if the user is already logged in and\n// if so we are redirecting the user to the home page.\n// Otherwise we will do nothing and let the user to login.\nconst loadUser=async()=>{if(!user){const fetchedUser=await fetchUser();if(fetchedUser){// Redirecting them once fetched.\nredirectNow();}}};// This useEffect will run only once when the component is mounted.\n// Hence this is helping us in verifying whether the user is already logged in\n// or not.\nuseEffect(()=>{loadUser();// eslint-disable-next-line react-hooks/exhaustive-deps\n},[]);// This function gets fired when the user clicks on the \"Login\" button.\nconst onSubmit=async event=>{try{// Here we are passing user details to our emailPasswordLogin\n// function that we imported from our realm/authentication.js\n// to validate the user credentials and log in the user into our App.\nconst user=await emailPasswordLogin(form.email,form.password);if(user){redirectNow();}}catch(error){if(error.statusCode===401){alert(\"Invalid username/password. Try again!\");}else{alert(error);}}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"form\",{style:{display:\"flex\",flexDirection:\"column\",maxWidth:\"300px\",margin:\"auto\"},children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Login\"}),/*#__PURE__*/_jsx(TextField,{label:\"Username or Email\",type:\"email\",variant:\"outlined\",name:\"email\",value:form.email,onChange:onFormInputChange,style:{marginBottom:\"1rem\"}}),/*#__PURE__*/_jsx(TextField,{label:\"Password\",type:\"password\",variant:\"outlined\",name:\"password\",value:form.password,onChange:onFormInputChange,style:{marginBottom:\"1rem\"}}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",onClick:onSubmit,children:\"Login\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"disclaimer\",children:[\"*Disclaimer: You can use the following credentials \",/*#__PURE__*/_jsx(\"br\",{children:\" username: admin, password=admin. Creating new admins is only allowed post Login\"})]})]}),/*#__PURE__*/_jsxs(\"style\",{children:[\".disclaimer \",color,\": #d32f2f; /* red color for attention */ font-size: 0.8rem; /* smaller font size */ margin-top: 20px; /* space above the disclaimer */ text-align: center; /* center alignment */\"]})]});};export default Login;","map":{"version":3,"names":["Button","TextField","useContext","useEffect","useState","Link","useLocation","useNavigate","useUser","UserContext","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Login","navigate","location","user","fetchUser","emailPasswordLogin","form","setForm","email","password","onFormInputChange","event","name","value","target","redirectNow","redirectTo","search","replace","loadUser","fetchedUser","onSubmit","error","statusCode","alert","children","style","display","flexDirection","maxWidth","margin","label","type","variant","onChange","marginBottom","color","onClick","className"],"sources":["/home/nevin/Project-2/test-react-auth/frontend/src/pages/Login.page.js"],"sourcesContent":["import { Button, TextField } from \"@mui/material\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport { useUser, UserContext } from \"../contexts/user.context\";\n \nconst Login = () => {\n const navigate = useNavigate();\n const location = useLocation();\n \n // We are consuming our user-management context to\n // get & set the user details here\n//  const { user, fetchUser, emailPasswordLogin } = useContext(UserContext);\nconst { user, fetchUser, emailPasswordLogin } = useUser();\n // We are using React's \"useState\" hook to keep track\n //  of the form values.\n const [form, setForm] = useState({\n   email: \"\",\n   password: \"\"\n });\n \n // This function will be called whenever the user edits the form.\n const onFormInputChange = (event) => {\n   const { name, value } = event.target;\n   setForm({ ...form, [name]: value });\n };\n \n // This function will redirect the user to the\n // appropriate page once the authentication is done.\n const redirectNow = () => {\n   const redirectTo = location.search.replace(\"?redirectTo=\", \"\");\n   navigate(redirectTo ? redirectTo : \"/\");\n }\n \n // Once a user logs in to our app, we don’t want to ask them for their\n // credentials again every time the user refreshes or revisits our app, \n // so we are checking if the user is already logged in and\n // if so we are redirecting the user to the home page.\n // Otherwise we will do nothing and let the user to login.\n const loadUser = async () => {\n   if (!user) {\n     const fetchedUser = await fetchUser();\n     if (fetchedUser) {\n       // Redirecting them once fetched.\n       redirectNow();\n     }\n   }\n }\n \n // This useEffect will run only once when the component is mounted.\n // Hence this is helping us in verifying whether the user is already logged in\n // or not.\n useEffect(() => {\n   loadUser(); // eslint-disable-next-line react-hooks/exhaustive-deps\n }, []);\n \n // This function gets fired when the user clicks on the \"Login\" button.\n const onSubmit = async (event) => {\n   try {\n     // Here we are passing user details to our emailPasswordLogin\n     // function that we imported from our realm/authentication.js\n     // to validate the user credentials and log in the user into our App.\n     const user = await emailPasswordLogin(form.email, form.password);\n     if (user) {\n       redirectNow();\n     }\n   } catch (error) {\n       if (error.statusCode === 401) {\n          alert(\"Invalid username/password. Try again!\");\n      } else {\n          alert(error);\n      }\n \n   }\n };\n \n return <><form style={{ display: \"flex\", flexDirection: \"column\", maxWidth: \"300px\", margin: \"auto\" }}>\n   <h1>Login</h1>\n   <TextField\n     label=\"Username or Email\"\n     type=\"email\"\n     variant=\"outlined\"\n     name=\"email\"\n     value={form.email}\n     onChange={onFormInputChange}\n     style={{ marginBottom: \"1rem\" }} />\n   <TextField\n     label=\"Password\"\n     type=\"password\"\n     variant=\"outlined\"\n     name=\"password\"\n     value={form.password}\n     onChange={onFormInputChange}\n     style={{ marginBottom: \"1rem\" }} />\n   <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\n     Login\n   </Button>\n   <p className=\"disclaimer\">\n     *Disclaimer: You can use the following credentials <br> username: admin, password=admin. Creating new admins is only allowed post Login</br>\n   </p>\n </form><style>\n     .disclaimer {color}: #d32f2f; /* red color for attention */\n     font-size: 0.8rem; /* smaller font size */\n     margin-top: 20px; /* space above the disclaimer */\n     text-align: center; /* center alignment */\n\n   </style></>\n}\n \nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}