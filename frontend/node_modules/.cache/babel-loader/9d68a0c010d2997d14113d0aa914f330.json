{"ast":null,"code":"'use client';import _extends from\"@babel/runtime/helpers/esm/extends\";import _objectWithoutPropertiesLoose from\"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";const _excluded=[\"className\",\"elementType\",\"ownerState\",\"externalForwardedProps\",\"getSlotOwnerState\",\"internalForwardedProps\"],_excluded2=[\"component\",\"slots\",\"slotProps\"],_excluded3=[\"component\"];import useForkRef from'@mui/utils/useForkRef';import{appendOwnerState,resolveComponentProps,mergeSlotProps}from'@mui/base/utils';/**\n * An internal function to create a Material UI slot.\n *\n * This is an advanced version of Base UI `useSlotProps` because Material UI allows leaf component to be customized via `component` prop\n * while Base UI does not need to support leaf component customization.\n *\n * @param {string} name: name of the slot\n * @param {object} parameters\n * @returns {[Slot, slotProps]} The slot's React component and the slot's props\n *\n * Note: the returned slot's props\n * - will never contain `component` prop.\n * - might contain `as` prop.\n */export default function useSlot(/**\n * The slot's name. All Material UI components should have `root` slot.\n *\n * If the name is `root`, the logic behaves differently from other slots,\n * e.g. the `externalForwardedProps` are spread to `root` slot but not other slots.\n */name,parameters){const{className,elementType:initialElementType,ownerState,externalForwardedProps,getSlotOwnerState,internalForwardedProps}=parameters,useSlotPropsParams=_objectWithoutPropertiesLoose(parameters,_excluded);const{component:rootComponent,slots={[name]:undefined},slotProps={[name]:undefined}}=externalForwardedProps,other=_objectWithoutPropertiesLoose(externalForwardedProps,_excluded2);const elementType=slots[name]||initialElementType;// `slotProps[name]` can be a callback that receives the component's ownerState.\n// `resolvedComponentsProps` is always a plain object.\nconst resolvedComponentsProps=resolveComponentProps(slotProps[name],ownerState);const _mergeSlotProps=mergeSlotProps(_extends({className},useSlotPropsParams,{externalForwardedProps:name==='root'?other:undefined,externalSlotProps:resolvedComponentsProps})),{props:{component:slotComponent},internalRef}=_mergeSlotProps,mergedProps=_objectWithoutPropertiesLoose(_mergeSlotProps.props,_excluded3);const ref=useForkRef(internalRef,resolvedComponentsProps==null?void 0:resolvedComponentsProps.ref,parameters.ref);const slotOwnerState=getSlotOwnerState?getSlotOwnerState(mergedProps):{};const finalOwnerState=_extends({},ownerState,slotOwnerState);const LeafComponent=name==='root'?slotComponent||rootComponent:slotComponent;const props=appendOwnerState(elementType,_extends({},name==='root'&&!rootComponent&&!slots[name]&&internalForwardedProps,name!=='root'&&!slots[name]&&internalForwardedProps,mergedProps,LeafComponent&&{as:LeafComponent},{ref}),finalOwnerState);Object.keys(slotOwnerState).forEach(propName=>{delete props[propName];});return[elementType,props];}","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","_excluded2","_excluded3","useForkRef","appendOwnerState","resolveComponentProps","mergeSlotProps","useSlot","name","parameters","className","elementType","initialElementType","ownerState","externalForwardedProps","getSlotOwnerState","internalForwardedProps","useSlotPropsParams","component","rootComponent","slots","undefined","slotProps","other","resolvedComponentsProps","_mergeSlotProps","externalSlotProps","props","slotComponent","internalRef","mergedProps","ref","slotOwnerState","finalOwnerState","LeafComponent","as","Object","keys","forEach","propName"],"sources":["/home/nevin/Project-2/test-react-auth/frontend/src/node_modules/@mui/material/utils/useSlot.js"],"sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"elementType\", \"ownerState\", \"externalForwardedProps\", \"getSlotOwnerState\", \"internalForwardedProps\"],\n  _excluded2 = [\"component\", \"slots\", \"slotProps\"],\n  _excluded3 = [\"component\"];\nimport useForkRef from '@mui/utils/useForkRef';\nimport { appendOwnerState, resolveComponentProps, mergeSlotProps } from '@mui/base/utils';\n/**\n * An internal function to create a Material UI slot.\n *\n * This is an advanced version of Base UI `useSlotProps` because Material UI allows leaf component to be customized via `component` prop\n * while Base UI does not need to support leaf component customization.\n *\n * @param {string} name: name of the slot\n * @param {object} parameters\n * @returns {[Slot, slotProps]} The slot's React component and the slot's props\n *\n * Note: the returned slot's props\n * - will never contain `component` prop.\n * - might contain `as` prop.\n */\nexport default function useSlot(\n/**\n * The slot's name. All Material UI components should have `root` slot.\n *\n * If the name is `root`, the logic behaves differently from other slots,\n * e.g. the `externalForwardedProps` are spread to `root` slot but not other slots.\n */\nname, parameters) {\n  const {\n      className,\n      elementType: initialElementType,\n      ownerState,\n      externalForwardedProps,\n      getSlotOwnerState,\n      internalForwardedProps\n    } = parameters,\n    useSlotPropsParams = _objectWithoutPropertiesLoose(parameters, _excluded);\n  const {\n      component: rootComponent,\n      slots = {\n        [name]: undefined\n      },\n      slotProps = {\n        [name]: undefined\n      }\n    } = externalForwardedProps,\n    other = _objectWithoutPropertiesLoose(externalForwardedProps, _excluded2);\n  const elementType = slots[name] || initialElementType;\n\n  // `slotProps[name]` can be a callback that receives the component's ownerState.\n  // `resolvedComponentsProps` is always a plain object.\n  const resolvedComponentsProps = resolveComponentProps(slotProps[name], ownerState);\n  const _mergeSlotProps = mergeSlotProps(_extends({\n      className\n    }, useSlotPropsParams, {\n      externalForwardedProps: name === 'root' ? other : undefined,\n      externalSlotProps: resolvedComponentsProps\n    })),\n    {\n      props: {\n        component: slotComponent\n      },\n      internalRef\n    } = _mergeSlotProps,\n    mergedProps = _objectWithoutPropertiesLoose(_mergeSlotProps.props, _excluded3);\n  const ref = useForkRef(internalRef, resolvedComponentsProps == null ? void 0 : resolvedComponentsProps.ref, parameters.ref);\n  const slotOwnerState = getSlotOwnerState ? getSlotOwnerState(mergedProps) : {};\n  const finalOwnerState = _extends({}, ownerState, slotOwnerState);\n  const LeafComponent = name === 'root' ? slotComponent || rootComponent : slotComponent;\n  const props = appendOwnerState(elementType, _extends({}, name === 'root' && !rootComponent && !slots[name] && internalForwardedProps, name !== 'root' && !slots[name] && internalForwardedProps, mergedProps, LeafComponent && {\n    as: LeafComponent\n  }, {\n    ref\n  }), finalOwnerState);\n  Object.keys(slotOwnerState).forEach(propName => {\n    delete props[propName];\n  });\n  return [elementType, props];\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}