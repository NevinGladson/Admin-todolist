{"ast":null,"code":"var isBrowser=\"object\"!=='undefined';function getRegisteredStyles(registered,registeredStyles,classNames){var rawClassName='';classNames.split(' ').forEach(function(className){if(registered[className]!==undefined){registeredStyles.push(registered[className]+\";\");}else{rawClassName+=className+\" \";}});return rawClassName;}var registerStyles=function registerStyles(cache,serialized,isStringTag){var className=cache.key+\"-\"+serialized.name;if(// we only need to add the styles to the registered cache if the\n// class name could be used further down\n// the tree but if it's a string tag, we know it won't\n// so we don't have to add it to registered cache.\n// this improves memory usage since we can avoid storing the whole style string\n(isStringTag===false||// we need to always store it if we're in compat mode and\n// in node since emotion-server relies on whether a style is in\n// the registered cache to know whether a style is global or not\n// also, note that this check will be dead code eliminated in the browser\nisBrowser===false)&&cache.registered[className]===undefined){cache.registered[className]=serialized.styles;}};var insertStyles=function insertStyles(cache,serialized,isStringTag){registerStyles(cache,serialized,isStringTag);var className=cache.key+\"-\"+serialized.name;if(cache.inserted[serialized.name]===undefined){var current=serialized;do{cache.insert(serialized===current?\".\"+className:'',current,cache.sheet,true);current=current.next;}while(current!==undefined);}};export{getRegisteredStyles,insertStyles,registerStyles};","map":{"version":3,"names":["isBrowser","getRegisteredStyles","registered","registeredStyles","classNames","rawClassName","split","forEach","className","undefined","push","registerStyles","cache","serialized","isStringTag","key","name","styles","insertStyles","inserted","current","insert","sheet","next"],"sources":["/home/nevin/Project-2/test-react-auth/frontend/src/node_modules/@emotion/utils/dist/emotion-utils.browser.esm.js"],"sourcesContent":["var isBrowser = \"object\" !== 'undefined';\nfunction getRegisteredStyles(registered, registeredStyles, classNames) {\n  var rawClassName = '';\n  classNames.split(' ').forEach(function (className) {\n    if (registered[className] !== undefined) {\n      registeredStyles.push(registered[className] + \";\");\n    } else {\n      rawClassName += className + \" \";\n    }\n  });\n  return rawClassName;\n}\nvar registerStyles = function registerStyles(cache, serialized, isStringTag) {\n  var className = cache.key + \"-\" + serialized.name;\n\n  if ( // we only need to add the styles to the registered cache if the\n  // class name could be used further down\n  // the tree but if it's a string tag, we know it won't\n  // so we don't have to add it to registered cache.\n  // this improves memory usage since we can avoid storing the whole style string\n  (isStringTag === false || // we need to always store it if we're in compat mode and\n  // in node since emotion-server relies on whether a style is in\n  // the registered cache to know whether a style is global or not\n  // also, note that this check will be dead code eliminated in the browser\n  isBrowser === false ) && cache.registered[className] === undefined) {\n    cache.registered[className] = serialized.styles;\n  }\n};\nvar insertStyles = function insertStyles(cache, serialized, isStringTag) {\n  registerStyles(cache, serialized, isStringTag);\n  var className = cache.key + \"-\" + serialized.name;\n\n  if (cache.inserted[serialized.name] === undefined) {\n    var current = serialized;\n\n    do {\n      cache.insert(serialized === current ? \".\" + className : '', current, cache.sheet, true);\n\n      current = current.next;\n    } while (current !== undefined);\n  }\n};\n\nexport { getRegisteredStyles, insertStyles, registerStyles };\n"],"mappings":"AAAA,GAAI,CAAAA,SAAS,CAAG,QAAQ,GAAK,WAAW,CACxC,QAAS,CAAAC,mBAAmBA,CAACC,UAAU,CAAEC,gBAAgB,CAAEC,UAAU,CAAE,CACrE,GAAI,CAAAC,YAAY,CAAG,EAAE,CACrBD,UAAU,CAACE,KAAK,CAAC,GAAG,CAAC,CAACC,OAAO,CAAC,SAAUC,SAAS,CAAE,CACjD,GAAIN,UAAU,CAACM,SAAS,CAAC,GAAKC,SAAS,CAAE,CACvCN,gBAAgB,CAACO,IAAI,CAACR,UAAU,CAACM,SAAS,CAAC,CAAG,GAAG,CAAC,CACpD,CAAC,IAAM,CACLH,YAAY,EAAIG,SAAS,CAAG,GAAG,CACjC,CACF,CAAC,CAAC,CACF,MAAO,CAAAH,YAAY,CACrB,CACA,GAAI,CAAAM,cAAc,CAAG,QAAS,CAAAA,cAAcA,CAACC,KAAK,CAAEC,UAAU,CAAEC,WAAW,CAAE,CAC3E,GAAI,CAAAN,SAAS,CAAGI,KAAK,CAACG,GAAG,CAAG,GAAG,CAAGF,UAAU,CAACG,IAAI,CAEjD,GAAK;AACL;AACA;AACA;AACA;AACA,CAACF,WAAW,GAAK,KAAK,EAAI;AAC1B;AACA;AACA;AACAd,SAAS,GAAK,KAAK,GAAMY,KAAK,CAACV,UAAU,CAACM,SAAS,CAAC,GAAKC,SAAS,CAAE,CAClEG,KAAK,CAACV,UAAU,CAACM,SAAS,CAAC,CAAGK,UAAU,CAACI,MAAM,CACjD,CACF,CAAC,CACD,GAAI,CAAAC,YAAY,CAAG,QAAS,CAAAA,YAAYA,CAACN,KAAK,CAAEC,UAAU,CAAEC,WAAW,CAAE,CACvEH,cAAc,CAACC,KAAK,CAAEC,UAAU,CAAEC,WAAW,CAAC,CAC9C,GAAI,CAAAN,SAAS,CAAGI,KAAK,CAACG,GAAG,CAAG,GAAG,CAAGF,UAAU,CAACG,IAAI,CAEjD,GAAIJ,KAAK,CAACO,QAAQ,CAACN,UAAU,CAACG,IAAI,CAAC,GAAKP,SAAS,CAAE,CACjD,GAAI,CAAAW,OAAO,CAAGP,UAAU,CAExB,EAAG,CACDD,KAAK,CAACS,MAAM,CAACR,UAAU,GAAKO,OAAO,CAAG,GAAG,CAAGZ,SAAS,CAAG,EAAE,CAAEY,OAAO,CAAER,KAAK,CAACU,KAAK,CAAE,IAAI,CAAC,CAEvFF,OAAO,CAAGA,OAAO,CAACG,IAAI,CACxB,CAAC,MAAQH,OAAO,GAAKX,SAAS,EAChC,CACF,CAAC,CAED,OAASR,mBAAmB,CAAEiB,YAAY,CAAEP,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module"}