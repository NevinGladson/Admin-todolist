{"ast":null,"code":"'use client';import _extends from\"@babel/runtime/helpers/esm/extends\";import _objectWithoutPropertiesLoose from\"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";const _excluded=[\"children\",\"disabled\",\"label\",\"slotProps\",\"slots\",\"value\"];import*as React from'react';import{unstable_useForkRef as useForkRef}from'@mui/utils';import{unstable_composeClasses as composeClasses}from'../composeClasses';import{getOptionUtilityClass}from'./optionClasses';import{useSlotProps}from'../utils';import{useOption,useOptionContextStabilizer}from'../useOption';import{useClassNamesOverride}from'../utils/ClassNameConfigurator';import{ListContext}from'../useList';import{jsx as _jsx}from\"react/jsx-runtime\";function useUtilityClasses(ownerState){const{disabled,highlighted,selected}=ownerState;const slots={root:['root',disabled&&'disabled',highlighted&&'highlighted',selected&&'selected']};return composeClasses(slots,useClassNamesOverride(getOptionUtilityClass));}const InnerOption=/*#__PURE__*/React.memo(/*#__PURE__*/React.forwardRef(function Option(props,forwardedRef){var _slots$root,_optionRef$current;const{children,disabled=false,label,slotProps={},slots={},value}=props,other=_objectWithoutPropertiesLoose(props,_excluded);const Root=(_slots$root=slots.root)!=null?_slots$root:'li';const optionRef=React.useRef(null);const combinedRef=useForkRef(optionRef,forwardedRef);// If `label` is not explicitly provided, the `children` are used for convenience.\n// This is used to populate the select's trigger with the selected option's label.\nconst computedLabel=label!=null?label:typeof children==='string'?children:(_optionRef$current=optionRef.current)==null||(_optionRef$current=_optionRef$current.textContent)==null?void 0:_optionRef$current.trim();const{getRootProps,selected,highlighted,index}=useOption({disabled,label:computedLabel,rootRef:combinedRef,value});const ownerState=_extends({},props,{disabled,highlighted,index,selected});const classes=useUtilityClasses(ownerState);const rootProps=useSlotProps({getSlotProps:getRootProps,elementType:Root,externalSlotProps:slotProps.root,externalForwardedProps:other,className:classes.root,ownerState});return/*#__PURE__*/_jsx(Root,_extends({},rootProps,{children:children}));}));/**\n * An unstyled option to be used within a Select.\n *\n * Demos:\n *\n * - [Select](https://mui.com/base-ui/react-select/)\n *\n * API:\n *\n * - [Option API](https://mui.com/base-ui/react-select/components-api/#option)\n */const Option=/*#__PURE__*/React.forwardRef(function Option(props,ref){const{value}=props;// This wrapper component is used as a performance optimization.\n// `useOptionContextStabilizer` ensures that the context value\n// is stable across renders, so that the actual Option re-renders\n// only when it needs to.\nconst{contextValue}=useOptionContextStabilizer(value);return/*#__PURE__*/_jsx(ListContext.Provider,{value:contextValue,children:/*#__PURE__*/_jsx(InnerOption,_extends({},props,{ref:ref}))});});process.env.NODE_ENV!==\"production\"?void 0:void 0;export{Option};","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","unstable_useForkRef","useForkRef","unstable_composeClasses","composeClasses","getOptionUtilityClass","useSlotProps","useOption","useOptionContextStabilizer","useClassNamesOverride","ListContext","jsx","_jsx","useUtilityClasses","ownerState","disabled","highlighted","selected","slots","root","InnerOption","memo","forwardRef","Option","props","forwardedRef","_slots$root","_optionRef$current","children","label","slotProps","value","other","Root","optionRef","useRef","combinedRef","computedLabel","current","textContent","trim","getRootProps","index","rootRef","classes","rootProps","getSlotProps","elementType","externalSlotProps","externalForwardedProps","className","ref","contextValue","Provider","process","env","NODE_ENV"],"sources":["/home/nevin/Project-2/test-react-auth/frontend/src/node_modules/@mui/base/Option/Option.js"],"sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"disabled\", \"label\", \"slotProps\", \"slots\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '../composeClasses';\nimport { getOptionUtilityClass } from './optionClasses';\nimport { useSlotProps } from '../utils';\nimport { useOption, useOptionContextStabilizer } from '../useOption';\nimport { useClassNamesOverride } from '../utils/ClassNameConfigurator';\nimport { ListContext } from '../useList';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction useUtilityClasses(ownerState) {\n  const {\n    disabled,\n    highlighted,\n    selected\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', highlighted && 'highlighted', selected && 'selected']\n  };\n  return composeClasses(slots, useClassNamesOverride(getOptionUtilityClass));\n}\nconst InnerOption = /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(function Option(props, forwardedRef) {\n  var _slots$root, _optionRef$current;\n  const {\n      children,\n      disabled = false,\n      label,\n      slotProps = {},\n      slots = {},\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const Root = (_slots$root = slots.root) != null ? _slots$root : 'li';\n  const optionRef = React.useRef(null);\n  const combinedRef = useForkRef(optionRef, forwardedRef);\n\n  // If `label` is not explicitly provided, the `children` are used for convenience.\n  // This is used to populate the select's trigger with the selected option's label.\n  const computedLabel = label != null ? label : typeof children === 'string' ? children : (_optionRef$current = optionRef.current) == null || (_optionRef$current = _optionRef$current.textContent) == null ? void 0 : _optionRef$current.trim();\n  const {\n    getRootProps,\n    selected,\n    highlighted,\n    index\n  } = useOption({\n    disabled,\n    label: computedLabel,\n    rootRef: combinedRef,\n    value\n  });\n  const ownerState = _extends({}, props, {\n    disabled,\n    highlighted,\n    index,\n    selected\n  });\n  const classes = useUtilityClasses(ownerState);\n  const rootProps = useSlotProps({\n    getSlotProps: getRootProps,\n    elementType: Root,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    className: classes.root,\n    ownerState\n  });\n  return /*#__PURE__*/_jsx(Root, _extends({}, rootProps, {\n    children: children\n  }));\n}));\n\n/**\n * An unstyled option to be used within a Select.\n *\n * Demos:\n *\n * - [Select](https://mui.com/base-ui/react-select/)\n *\n * API:\n *\n * - [Option API](https://mui.com/base-ui/react-select/components-api/#option)\n */\nconst Option = /*#__PURE__*/React.forwardRef(function Option(props, ref) {\n  const {\n    value\n  } = props;\n\n  // This wrapper component is used as a performance optimization.\n  // `useOptionContextStabilizer` ensures that the context value\n  // is stable across renders, so that the actual Option re-renders\n  // only when it needs to.\n  const {\n    contextValue\n  } = useOptionContextStabilizer(value);\n  return /*#__PURE__*/_jsx(ListContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(InnerOption, _extends({}, props, {\n      ref: ref\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Option.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the option will be disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * A text representation of the option's content.\n   * Used for keyboard text navigation matching.\n   */\n  label: PropTypes.string,\n  /**\n   * The props used for each slot inside the Option.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the Option.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    root: PropTypes.elementType\n  }),\n  /**\n   * The value of the option.\n   */\n  value: PropTypes.any.isRequired\n} : void 0;\nexport { Option };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}