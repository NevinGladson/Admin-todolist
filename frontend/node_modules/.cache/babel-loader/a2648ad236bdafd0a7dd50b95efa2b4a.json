{"ast":null,"code":"import _objectWithoutPropertiesLoose from\"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";import _inheritsLoose from\"@babel/runtime/helpers/esm/inheritsLoose\";import React from'react';import ReactDOM from'react-dom';import config from'./config';import{timeoutsShape}from'./utils/PropTypes';import TransitionGroupContext from'./TransitionGroupContext';import{forceReflow}from'./utils/reflow';export var UNMOUNTED='unmounted';export var EXITED='exited';export var ENTERING='entering';export var ENTERED='entered';export var EXITING='exiting';/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 1 },\n *   entered:  { opacity: 1 },\n *   exiting:  { opacity: 0 },\n *   exited:  { opacity: 0 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */var Transition=/*#__PURE__*/function(_React$Component){_inheritsLoose(Transition,_React$Component);function Transition(props,context){var _this;_this=_React$Component.call(this,props,context)||this;var parentGroup=context;// In the context of a TransitionGroup all enters are really appears\nvar appear=parentGroup&&!parentGroup.isMounting?props.enter:props.appear;var initialStatus;_this.appearStatus=null;if(props.in){if(appear){initialStatus=EXITED;_this.appearStatus=ENTERING;}else{initialStatus=ENTERED;}}else{if(props.unmountOnExit||props.mountOnEnter){initialStatus=UNMOUNTED;}else{initialStatus=EXITED;}}_this.state={status:initialStatus};_this.nextCallback=null;return _this;}Transition.getDerivedStateFromProps=function getDerivedStateFromProps(_ref,prevState){var nextIn=_ref.in;if(nextIn&&prevState.status===UNMOUNTED){return{status:EXITED};}return null;}// getSnapshotBeforeUpdate(prevProps) {\n//   let nextStatus = null\n//   if (prevProps !== this.props) {\n//     const { status } = this.state\n//     if (this.props.in) {\n//       if (status !== ENTERING && status !== ENTERED) {\n//         nextStatus = ENTERING\n//       }\n//     } else {\n//       if (status === ENTERING || status === ENTERED) {\n//         nextStatus = EXITING\n//       }\n//     }\n//   }\n//   return { nextStatus }\n// }\n;var _proto=Transition.prototype;_proto.componentDidMount=function componentDidMount(){this.updateStatus(true,this.appearStatus);};_proto.componentDidUpdate=function componentDidUpdate(prevProps){var nextStatus=null;if(prevProps!==this.props){var status=this.state.status;if(this.props.in){if(status!==ENTERING&&status!==ENTERED){nextStatus=ENTERING;}}else{if(status===ENTERING||status===ENTERED){nextStatus=EXITING;}}}this.updateStatus(false,nextStatus);};_proto.componentWillUnmount=function componentWillUnmount(){this.cancelNextCallback();};_proto.getTimeouts=function getTimeouts(){var timeout=this.props.timeout;var exit,enter,appear;exit=enter=appear=timeout;if(timeout!=null&&typeof timeout!=='number'){exit=timeout.exit;enter=timeout.enter;// TODO: remove fallback for next major\nappear=timeout.appear!==undefined?timeout.appear:enter;}return{exit:exit,enter:enter,appear:appear};};_proto.updateStatus=function updateStatus(mounting,nextStatus){if(mounting===void 0){mounting=false;}if(nextStatus!==null){// nextStatus will always be ENTERING or EXITING.\nthis.cancelNextCallback();if(nextStatus===ENTERING){if(this.props.unmountOnExit||this.props.mountOnEnter){var node=this.props.nodeRef?this.props.nodeRef.current:ReactDOM.findDOMNode(this);// https://github.com/reactjs/react-transition-group/pull/749\n// With unmountOnExit or mountOnEnter, the enter animation should happen at the transition between `exited` and `entering`.\n// To make the animation happen,  we have to separate each rendering and avoid being processed as batched.\nif(node)forceReflow(node);}this.performEnter(mounting);}else{this.performExit();}}else if(this.props.unmountOnExit&&this.state.status===EXITED){this.setState({status:UNMOUNTED});}};_proto.performEnter=function performEnter(mounting){var _this2=this;var enter=this.props.enter;var appearing=this.context?this.context.isMounting:mounting;var _ref2=this.props.nodeRef?[appearing]:[ReactDOM.findDOMNode(this),appearing],maybeNode=_ref2[0],maybeAppearing=_ref2[1];var timeouts=this.getTimeouts();var enterTimeout=appearing?timeouts.appear:timeouts.enter;// no enter animation skip right to ENTERED\n// if we are mounting and running this it means appear _must_ be set\nif(!mounting&&!enter||config.disabled){this.safeSetState({status:ENTERED},function(){_this2.props.onEntered(maybeNode);});return;}this.props.onEnter(maybeNode,maybeAppearing);this.safeSetState({status:ENTERING},function(){_this2.props.onEntering(maybeNode,maybeAppearing);_this2.onTransitionEnd(enterTimeout,function(){_this2.safeSetState({status:ENTERED},function(){_this2.props.onEntered(maybeNode,maybeAppearing);});});});};_proto.performExit=function performExit(){var _this3=this;var exit=this.props.exit;var timeouts=this.getTimeouts();var maybeNode=this.props.nodeRef?undefined:ReactDOM.findDOMNode(this);// no exit animation skip right to EXITED\nif(!exit||config.disabled){this.safeSetState({status:EXITED},function(){_this3.props.onExited(maybeNode);});return;}this.props.onExit(maybeNode);this.safeSetState({status:EXITING},function(){_this3.props.onExiting(maybeNode);_this3.onTransitionEnd(timeouts.exit,function(){_this3.safeSetState({status:EXITED},function(){_this3.props.onExited(maybeNode);});});});};_proto.cancelNextCallback=function cancelNextCallback(){if(this.nextCallback!==null){this.nextCallback.cancel();this.nextCallback=null;}};_proto.safeSetState=function safeSetState(nextState,callback){// This shouldn't be necessary, but there are weird race conditions with\n// setState callbacks and unmounting in testing, so always make sure that\n// we can cancel any pending setState callbacks after we unmount.\ncallback=this.setNextCallback(callback);this.setState(nextState,callback);};_proto.setNextCallback=function setNextCallback(callback){var _this4=this;var active=true;this.nextCallback=function(event){if(active){active=false;_this4.nextCallback=null;callback(event);}};this.nextCallback.cancel=function(){active=false;};return this.nextCallback;};_proto.onTransitionEnd=function onTransitionEnd(timeout,handler){this.setNextCallback(handler);var node=this.props.nodeRef?this.props.nodeRef.current:ReactDOM.findDOMNode(this);var doesNotHaveTimeoutOrListener=timeout==null&&!this.props.addEndListener;if(!node||doesNotHaveTimeoutOrListener){setTimeout(this.nextCallback,0);return;}if(this.props.addEndListener){var _ref3=this.props.nodeRef?[this.nextCallback]:[node,this.nextCallback],maybeNode=_ref3[0],maybeNextCallback=_ref3[1];this.props.addEndListener(maybeNode,maybeNextCallback);}if(timeout!=null){setTimeout(this.nextCallback,timeout);}};_proto.render=function render(){var status=this.state.status;if(status===UNMOUNTED){return null;}var _this$props=this.props,children=_this$props.children,_in=_this$props.in,_mountOnEnter=_this$props.mountOnEnter,_unmountOnExit=_this$props.unmountOnExit,_appear=_this$props.appear,_enter=_this$props.enter,_exit=_this$props.exit,_timeout=_this$props.timeout,_addEndListener=_this$props.addEndListener,_onEnter=_this$props.onEnter,_onEntering=_this$props.onEntering,_onEntered=_this$props.onEntered,_onExit=_this$props.onExit,_onExiting=_this$props.onExiting,_onExited=_this$props.onExited,_nodeRef=_this$props.nodeRef,childProps=_objectWithoutPropertiesLoose(_this$props,[\"children\",\"in\",\"mountOnEnter\",\"unmountOnExit\",\"appear\",\"enter\",\"exit\",\"timeout\",\"addEndListener\",\"onEnter\",\"onEntering\",\"onEntered\",\"onExit\",\"onExiting\",\"onExited\",\"nodeRef\"]);return/*#__PURE__*/ (// allows for nested Transitions\nReact.createElement(TransitionGroupContext.Provider,{value:null},typeof children==='function'?children(status,childProps):/*#__PURE__*/React.cloneElement(React.Children.only(children),childProps)));};return Transition;}(React.Component);Transition.contextType=TransitionGroupContext;// Name the function so it is clearer in the documentation\nfunction noop(){}Transition.defaultProps={in:false,mountOnEnter:false,unmountOnExit:false,appear:false,enter:true,exit:true,onEnter:noop,onEntering:noop,onEntered:noop,onExit:noop,onExiting:noop,onExited:noop};Transition.UNMOUNTED=UNMOUNTED;Transition.EXITED=EXITED;Transition.ENTERING=ENTERING;Transition.ENTERED=ENTERED;Transition.EXITING=EXITING;export default Transition;","map":{"version":3,"names":["_objectWithoutPropertiesLoose","_inheritsLoose","React","ReactDOM","config","timeoutsShape","TransitionGroupContext","forceReflow","UNMOUNTED","EXITED","ENTERING","ENTERED","EXITING","Transition","_React$Component","props","context","_this","call","parentGroup","appear","isMounting","enter","initialStatus","appearStatus","in","unmountOnExit","mountOnEnter","state","status","nextCallback","getDerivedStateFromProps","_ref","prevState","nextIn","_proto","prototype","componentDidMount","updateStatus","componentDidUpdate","prevProps","nextStatus","componentWillUnmount","cancelNextCallback","getTimeouts","timeout","exit","undefined","mounting","node","nodeRef","current","findDOMNode","performEnter","performExit","setState","_this2","appearing","_ref2","maybeNode","maybeAppearing","timeouts","enterTimeout","disabled","safeSetState","onEntered","onEnter","onEntering","onTransitionEnd","_this3","onExited","onExit","onExiting","cancel","nextState","callback","setNextCallback","_this4","active","event","handler","doesNotHaveTimeoutOrListener","addEndListener","setTimeout","_ref3","maybeNextCallback","render","_this$props","children","_in","_mountOnEnter","_unmountOnExit","_appear","_enter","_exit","_timeout","_addEndListener","_onEnter","_onEntering","_onEntered","_onExit","_onExiting","_onExited","_nodeRef","childProps","createElement","Provider","value","cloneElement","Children","only","Component","contextType","noop","defaultProps"],"sources":["/home/nevin/Project-2/test-react-auth/frontend/src/node_modules/react-transition-group/esm/Transition.js"],"sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport config from './config';\nimport { timeoutsShape } from './utils/PropTypes';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { forceReflow } from './utils/reflow';\nexport var UNMOUNTED = 'unmounted';\nexport var EXITED = 'exited';\nexport var ENTERING = 'entering';\nexport var ENTERED = 'entered';\nexport var EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 1 },\n *   entered:  { opacity: 1 },\n *   exiting:  { opacity: 0 },\n *   exited:  { opacity: 0 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nvar Transition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  } // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n  ;\n\n  var _proto = Transition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      if (nextStatus === ENTERING) {\n        if (this.props.unmountOnExit || this.props.mountOnEnter) {\n          var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this); // https://github.com/reactjs/react-transition-group/pull/749\n          // With unmountOnExit or mountOnEnter, the enter animation should happen at the transition between `exited` and `entering`.\n          // To make the animation happen,  we have to separate each rendering and avoid being processed as batched.\n\n          if (node) forceReflow(node);\n        }\n\n        this.performEnter(mounting);\n      } else {\n        this.performExit();\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context ? this.context.isMounting : mounting;\n\n    var _ref2 = this.props.nodeRef ? [appearing] : [ReactDOM.findDOMNode(this), appearing],\n        maybeNode = _ref2[0],\n        maybeAppearing = _ref2[1];\n\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter || config.disabled) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onEnter(maybeNode, maybeAppearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(maybeNode, maybeAppearing);\n\n      _this2.onTransitionEnd(enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(maybeNode, maybeAppearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit() {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts();\n    var maybeNode = this.props.nodeRef ? undefined : ReactDOM.findDOMNode(this); // no exit animation skip right to EXITED\n\n    if (!exit || config.disabled) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onExit(maybeNode);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(maybeNode);\n\n      _this3.onTransitionEnd(timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(maybeNode);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {\n    this.setNextCallback(handler);\n    var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],\n          maybeNode = _ref3[0],\n          maybeNextCallback = _ref3[1];\n\n      this.props.addEndListener(maybeNode, maybeNextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        _in = _this$props.in,\n        _mountOnEnter = _this$props.mountOnEnter,\n        _unmountOnExit = _this$props.unmountOnExit,\n        _appear = _this$props.appear,\n        _enter = _this$props.enter,\n        _exit = _this$props.exit,\n        _timeout = _this$props.timeout,\n        _addEndListener = _this$props.addEndListener,\n        _onEnter = _this$props.onEnter,\n        _onEntering = _this$props.onEntering,\n        _onEntered = _this$props.onEntered,\n        _onExit = _this$props.onExit,\n        _onExiting = _this$props.onExiting,\n        _onExited = _this$props.onExited,\n        _nodeRef = _this$props.nodeRef,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"in\", \"mountOnEnter\", \"unmountOnExit\", \"appear\", \"enter\", \"exit\", \"timeout\", \"addEndListener\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"nodeRef\"]);\n\n    return (\n      /*#__PURE__*/\n      // allows for nested Transitions\n      React.createElement(TransitionGroupContext.Provider, {\n        value: null\n      }, typeof children === 'function' ? children(status, childProps) : React.cloneElement(React.Children.only(children), childProps))\n    );\n  };\n\n  return Transition;\n}(React.Component);\n\nTransition.contextType = TransitionGroupContext;\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A React reference to DOM element that need to transition:\n   * https://stackoverflow.com/a/51127130/4671932\n   *\n   *   - When `nodeRef` prop is used, `node` is not passed to callback functions\n   *      (e.g. `onEnter`) because user already has direct access to the node.\n   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new\n   *     `nodeRef` need to be provided to `Transition` with changed `key` prop\n   *     (see\n   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).\n   */\n  nodeRef: PropTypes.shape({\n    current: typeof Element === 'undefined' ? PropTypes.any : function (propValue, key, componentName, location, propFullName, secret) {\n      var value = propValue[key];\n      return PropTypes.instanceOf(value && 'ownerDocument' in value ? value.ownerDocument.defaultView.Element : Element)(propValue, key, componentName, location, propFullName, secret);\n    }\n  }),\n\n  /**\n   * A `function` child can be used instead of a React element. This function is\n   * called with the current transition status (`'entering'`, `'entered'`,\n   * `'exiting'`, `'exited'`), which can be used to apply context\n   * specific props to a component.\n   *\n   * ```jsx\n   * <Transition in={this.state.in} timeout={150}>\n   *   {state => (\n   *     <MyComponent className={`fade fade-${state}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * By default the child component does not perform the enter transition when\n   * it first mounts, regardless of the value of `in`. If you want this\n   * behavior, set both `appear` and `in` to `true`.\n   *\n   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop\n   * > only adds an additional enter transition. However, in the\n   * > `<CSSTransition>` component that first enter transition does result in\n   * > additional `.appear-*` classes, that way you can choose to style it\n   * > differently.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided.\n   *\n   * You may specify a single timeout for all transitions:\n   *\n   * ```jsx\n   * timeout={500}\n   * ```\n   *\n   * or individually:\n   *\n   * ```jsx\n   * timeout={{\n   *  appear: 500,\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * - `appear` defaults to the value of `enter`\n   * - `enter` defaults to `0`\n   * - `exit` defaults to `0`\n   *\n   * @type {number | { enter?: number, exit?: number, appear?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. Timeouts are still used as a fallback if provided.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func\n} : {}; // Name the function so it is clearer in the documentation\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = UNMOUNTED;\nTransition.EXITED = EXITED;\nTransition.ENTERING = ENTERING;\nTransition.ENTERED = ENTERED;\nTransition.EXITING = EXITING;\nexport default Transition;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}