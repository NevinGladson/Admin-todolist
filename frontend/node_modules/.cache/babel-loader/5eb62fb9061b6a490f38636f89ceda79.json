{"ast":null,"code":"'use client';import*as React from'react';import{useControllableReducer}from'../utils/useControllableReducer';import{DropdownActionTypes}from'./useDropdown.types';import{dropdownReducer}from'./dropdownReducer';/**\n *\n * Demos:\n *\n * - [Menu](https://mui.com/base-ui/react-menu/#hooks)\n *\n * API:\n *\n * - [useDropdown API](https://mui.com/base-ui/react-menu/hooks-api/#use-dropdown)\n */export function useDropdown(){let parameters=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const{defaultOpen,onOpenChange,open:openProp,componentName='useDropdown'}=parameters;const[popupId,setPopupId]=React.useState('');const[triggerElement,setTriggerElement]=React.useState(null);const lastActionType=React.useRef(null);const handleStateChange=React.useCallback((event,field,value,reason)=>{if(field==='open'){onOpenChange==null||onOpenChange(event,value);}lastActionType.current=reason;},[onOpenChange]);const controlledProps=React.useMemo(()=>openProp!==undefined?{open:openProp}:{},[openProp]);const[state,dispatch]=useControllableReducer({controlledProps,initialState:defaultOpen?{open:true,changeReason:null}:{open:false,changeReason:null},onStateChange:handleStateChange,reducer:dropdownReducer,componentName});React.useEffect(()=>{if(!state.open&&lastActionType.current!==null&&lastActionType.current!==DropdownActionTypes.blur){triggerElement==null||triggerElement.focus();}},[state.open,triggerElement]);const contextValue={state,dispatch,popupId,registerPopup:setPopupId,registerTrigger:setTriggerElement,triggerElement};return{contextValue,open:state.open};}","map":{"version":3,"names":["React","useControllableReducer","DropdownActionTypes","dropdownReducer","useDropdown","parameters","arguments","length","undefined","defaultOpen","onOpenChange","open","openProp","componentName","popupId","setPopupId","useState","triggerElement","setTriggerElement","lastActionType","useRef","handleStateChange","useCallback","event","field","value","reason","current","controlledProps","useMemo","state","dispatch","initialState","changeReason","onStateChange","reducer","useEffect","blur","focus","contextValue","registerPopup","registerTrigger"],"sources":["/home/nevin/Project-2/test-react-auth/frontend/src/node_modules/@mui/base/useDropdown/useDropdown.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { useControllableReducer } from '../utils/useControllableReducer';\nimport { DropdownActionTypes } from './useDropdown.types';\nimport { dropdownReducer } from './dropdownReducer';\n\n/**\n *\n * Demos:\n *\n * - [Menu](https://mui.com/base-ui/react-menu/#hooks)\n *\n * API:\n *\n * - [useDropdown API](https://mui.com/base-ui/react-menu/hooks-api/#use-dropdown)\n */\nexport function useDropdown(parameters = {}) {\n  const {\n    defaultOpen,\n    onOpenChange,\n    open: openProp,\n    componentName = 'useDropdown'\n  } = parameters;\n  const [popupId, setPopupId] = React.useState('');\n  const [triggerElement, setTriggerElement] = React.useState(null);\n  const lastActionType = React.useRef(null);\n  const handleStateChange = React.useCallback((event, field, value, reason) => {\n    if (field === 'open') {\n      onOpenChange == null || onOpenChange(event, value);\n    }\n    lastActionType.current = reason;\n  }, [onOpenChange]);\n  const controlledProps = React.useMemo(() => openProp !== undefined ? {\n    open: openProp\n  } : {}, [openProp]);\n  const [state, dispatch] = useControllableReducer({\n    controlledProps,\n    initialState: defaultOpen ? {\n      open: true,\n      changeReason: null\n    } : {\n      open: false,\n      changeReason: null\n    },\n    onStateChange: handleStateChange,\n    reducer: dropdownReducer,\n    componentName\n  });\n  React.useEffect(() => {\n    if (!state.open && lastActionType.current !== null && lastActionType.current !== DropdownActionTypes.blur) {\n      triggerElement == null || triggerElement.focus();\n    }\n  }, [state.open, triggerElement]);\n  const contextValue = {\n    state,\n    dispatch,\n    popupId,\n    registerPopup: setPopupId,\n    registerTrigger: setTriggerElement,\n    triggerElement\n  };\n  return {\n    contextValue,\n    open: state.open\n  };\n}"],"mappings":"AAAA,YAAY,CAEZ,MAAO,GAAK,CAAAA,KAAK,KAAM,OAAO,CAC9B,OAASC,sBAAsB,KAAQ,iCAAiC,CACxE,OAASC,mBAAmB,KAAQ,qBAAqB,CACzD,OAASC,eAAe,KAAQ,mBAAmB,CAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,SAAS,CAAAC,WAAWA,CAAA,CAAkB,IAAjB,CAAAC,UAAU,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,CACzC,KAAM,CACJG,WAAW,CACXC,YAAY,CACZC,IAAI,CAAEC,QAAQ,CACdC,aAAa,CAAG,aAClB,CAAC,CAAGR,UAAU,CACd,KAAM,CAACS,OAAO,CAAEC,UAAU,CAAC,CAAGf,KAAK,CAACgB,QAAQ,CAAC,EAAE,CAAC,CAChD,KAAM,CAACC,cAAc,CAAEC,iBAAiB,CAAC,CAAGlB,KAAK,CAACgB,QAAQ,CAAC,IAAI,CAAC,CAChE,KAAM,CAAAG,cAAc,CAAGnB,KAAK,CAACoB,MAAM,CAAC,IAAI,CAAC,CACzC,KAAM,CAAAC,iBAAiB,CAAGrB,KAAK,CAACsB,WAAW,CAAC,CAACC,KAAK,CAAEC,KAAK,CAAEC,KAAK,CAAEC,MAAM,GAAK,CAC3E,GAAIF,KAAK,GAAK,MAAM,CAAE,CACpBd,YAAY,EAAI,IAAI,EAAIA,YAAY,CAACa,KAAK,CAAEE,KAAK,CAAC,CACpD,CACAN,cAAc,CAACQ,OAAO,CAAGD,MAAM,CACjC,CAAC,CAAE,CAAChB,YAAY,CAAC,CAAC,CAClB,KAAM,CAAAkB,eAAe,CAAG5B,KAAK,CAAC6B,OAAO,CAAC,IAAMjB,QAAQ,GAAKJ,SAAS,CAAG,CACnEG,IAAI,CAAEC,QACR,CAAC,CAAG,CAAC,CAAC,CAAE,CAACA,QAAQ,CAAC,CAAC,CACnB,KAAM,CAACkB,KAAK,CAAEC,QAAQ,CAAC,CAAG9B,sBAAsB,CAAC,CAC/C2B,eAAe,CACfI,YAAY,CAAEvB,WAAW,CAAG,CAC1BE,IAAI,CAAE,IAAI,CACVsB,YAAY,CAAE,IAChB,CAAC,CAAG,CACFtB,IAAI,CAAE,KAAK,CACXsB,YAAY,CAAE,IAChB,CAAC,CACDC,aAAa,CAAEb,iBAAiB,CAChCc,OAAO,CAAEhC,eAAe,CACxBU,aACF,CAAC,CAAC,CACFb,KAAK,CAACoC,SAAS,CAAC,IAAM,CACpB,GAAI,CAACN,KAAK,CAACnB,IAAI,EAAIQ,cAAc,CAACQ,OAAO,GAAK,IAAI,EAAIR,cAAc,CAACQ,OAAO,GAAKzB,mBAAmB,CAACmC,IAAI,CAAE,CACzGpB,cAAc,EAAI,IAAI,EAAIA,cAAc,CAACqB,KAAK,CAAC,CAAC,CAClD,CACF,CAAC,CAAE,CAACR,KAAK,CAACnB,IAAI,CAAEM,cAAc,CAAC,CAAC,CAChC,KAAM,CAAAsB,YAAY,CAAG,CACnBT,KAAK,CACLC,QAAQ,CACRjB,OAAO,CACP0B,aAAa,CAAEzB,UAAU,CACzB0B,eAAe,CAAEvB,iBAAiB,CAClCD,cACF,CAAC,CACD,MAAO,CACLsB,YAAY,CACZ5B,IAAI,CAAEmB,KAAK,CAACnB,IACd,CAAC,CACH","ignoreList":[]},"metadata":{},"sourceType":"module"}