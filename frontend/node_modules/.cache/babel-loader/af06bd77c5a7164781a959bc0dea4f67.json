{"ast":null,"code":"import{isShadowRoot}from\"./instanceOf.js\";export default function contains(parent,child){var rootNode=child.getRootNode&&child.getRootNode();// First, attempt with faster native method\nif(parent.contains(child)){return true;}// then fallback to custom implementation with Shadow DOM support\nelse if(rootNode&&isShadowRoot(rootNode)){var next=child;do{if(next&&parent.isSameNode(next)){return true;}// $FlowFixMe[prop-missing]: need a better way to handle this...\nnext=next.parentNode||next.host;}while(next);}// Give up, the result is false\nreturn false;}","map":{"version":3,"names":["isShadowRoot","contains","parent","child","rootNode","getRootNode","next","isSameNode","parentNode","host"],"sources":["/home/nevin/Project-2/test-react-auth/frontend/src/node_modules/@popperjs/core/lib/dom-utils/contains.js"],"sourcesContent":["import { isShadowRoot } from \"./instanceOf.js\";\nexport default function contains(parent, child) {\n  var rootNode = child.getRootNode && child.getRootNode(); // First, attempt with faster native method\n\n  if (parent.contains(child)) {\n    return true;\n  } // then fallback to custom implementation with Shadow DOM support\n  else if (rootNode && isShadowRoot(rootNode)) {\n      var next = child;\n\n      do {\n        if (next && parent.isSameNode(next)) {\n          return true;\n        } // $FlowFixMe[prop-missing]: need a better way to handle this...\n\n\n        next = next.parentNode || next.host;\n      } while (next);\n    } // Give up, the result is false\n\n\n  return false;\n}"],"mappings":"AAAA,OAASA,YAAY,KAAQ,iBAAiB,CAC9C,cAAe,SAAS,CAAAC,QAAQA,CAACC,MAAM,CAAEC,KAAK,CAAE,CAC9C,GAAI,CAAAC,QAAQ,CAAGD,KAAK,CAACE,WAAW,EAAIF,KAAK,CAACE,WAAW,CAAC,CAAC,CAAE;AAEzD,GAAIH,MAAM,CAACD,QAAQ,CAACE,KAAK,CAAC,CAAE,CAC1B,MAAO,KAAI,CACb,CAAE;AAAA,IACG,IAAIC,QAAQ,EAAIJ,YAAY,CAACI,QAAQ,CAAC,CAAE,CACzC,GAAI,CAAAE,IAAI,CAAGH,KAAK,CAEhB,EAAG,CACD,GAAIG,IAAI,EAAIJ,MAAM,CAACK,UAAU,CAACD,IAAI,CAAC,CAAE,CACnC,MAAO,KAAI,CACb,CAAE;AAGFA,IAAI,CAAGA,IAAI,CAACE,UAAU,EAAIF,IAAI,CAACG,IAAI,CACrC,CAAC,MAAQH,IAAI,EACf,CAAE;AAGJ,MAAO,MAAK,CACd","ignoreList":[]},"metadata":{},"sourceType":"module"}