{"ast":null,"code":"'use client';import*as React from'react';import{elementAcceptingRef,exactProp,unstable_ownerDocument as ownerDocument,unstable_useForkRef as useForkRef,unstable_useEventCallback as useEventCallback}from'@mui/utils';// TODO: return `EventHandlerName extends `on${infer EventName}` ? Lowercase<EventName> : never` once generatePropTypes runs with TS 4.1\nimport{jsx as _jsx}from\"react/jsx-runtime\";function mapEventPropToEvent(eventProp){return eventProp.substring(2).toLowerCase();}function clickedRootScrollbar(event,doc){return doc.documentElement.clientWidth<event.clientX||doc.documentElement.clientHeight<event.clientY;}/**\n * Listen for click events that occur somewhere in the document, outside of the element itself.\n * For instance, if you need to hide a menu when people click anywhere else on your page.\n *\n * Demos:\n *\n * - [Click-Away Listener](https://mui.com/base-ui/react-click-away-listener/)\n *\n * API:\n *\n * - [ClickAwayListener API](https://mui.com/base-ui/react-click-away-listener/components-api/#click-away-listener)\n */function ClickAwayListener(props){const{children,disableReactTree=false,mouseEvent='onClick',onClickAway,touchEvent='onTouchEnd'}=props;const movedRef=React.useRef(false);const nodeRef=React.useRef(null);const activatedRef=React.useRef(false);const syntheticEventRef=React.useRef(false);React.useEffect(()=>{// Ensure that this component is not \"activated\" synchronously.\n// https://github.com/facebook/react/issues/20074\nsetTimeout(()=>{activatedRef.current=true;},0);return()=>{activatedRef.current=false;};},[]);const handleRef=useForkRef(// @ts-expect-error TODO upstream fix\nchildren.ref,nodeRef);// The handler doesn't take event.defaultPrevented into account:\n//\n// event.preventDefault() is meant to stop default behaviors like\n// clicking a checkbox to check it, hitting a button to submit a form,\n// and hitting left arrow to move the cursor in a text input etc.\n// Only special HTML elements have these default behaviors.\nconst handleClickAway=useEventCallback(event=>{// Given developers can stop the propagation of the synthetic event,\n// we can only be confident with a positive value.\nconst insideReactTree=syntheticEventRef.current;syntheticEventRef.current=false;const doc=ownerDocument(nodeRef.current);// 1. IE11 support, which trigger the handleClickAway even after the unbind\n// 2. The child might render null.\n// 3. Behave like a blur listener.\nif(!activatedRef.current||!nodeRef.current||'clientX'in event&&clickedRootScrollbar(event,doc)){return;}// Do not act if user performed touchmove\nif(movedRef.current){movedRef.current=false;return;}let insideDOM;// If not enough, can use https://github.com/DieterHolvoet/event-propagation-path/blob/master/propagationPath.js\nif(event.composedPath){insideDOM=event.composedPath().indexOf(nodeRef.current)>-1;}else{insideDOM=!doc.documentElement.contains(// @ts-expect-error returns `false` as intended when not dispatched from a Node\nevent.target)||nodeRef.current.contains(// @ts-expect-error returns `false` as intended when not dispatched from a Node\nevent.target);}if(!insideDOM&&(disableReactTree||!insideReactTree)){onClickAway(event);}});// Keep track of mouse/touch events that bubbled up through the portal.\nconst createHandleSynthetic=handlerName=>event=>{syntheticEventRef.current=true;const childrenPropsHandler=children.props[handlerName];if(childrenPropsHandler){childrenPropsHandler(event);}};const childrenProps={ref:handleRef};if(touchEvent!==false){childrenProps[touchEvent]=createHandleSynthetic(touchEvent);}React.useEffect(()=>{if(touchEvent!==false){const mappedTouchEvent=mapEventPropToEvent(touchEvent);const doc=ownerDocument(nodeRef.current);const handleTouchMove=()=>{movedRef.current=true;};doc.addEventListener(mappedTouchEvent,handleClickAway);doc.addEventListener('touchmove',handleTouchMove);return()=>{doc.removeEventListener(mappedTouchEvent,handleClickAway);doc.removeEventListener('touchmove',handleTouchMove);};}return undefined;},[handleClickAway,touchEvent]);if(mouseEvent!==false){childrenProps[mouseEvent]=createHandleSynthetic(mouseEvent);}React.useEffect(()=>{if(mouseEvent!==false){const mappedMouseEvent=mapEventPropToEvent(mouseEvent);const doc=ownerDocument(nodeRef.current);doc.addEventListener(mappedMouseEvent,handleClickAway);return()=>{doc.removeEventListener(mappedMouseEvent,handleClickAway);};}return undefined;},[handleClickAway,mouseEvent]);return/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/React.cloneElement(children,childrenProps)});}process.env.NODE_ENV!==\"production\"?void 0:void 0;if(process.env.NODE_ENV!=='production'){// eslint-disable-next-line\nClickAwayListener['propTypes'+'']=exactProp(ClickAwayListener.propTypes);}export{ClickAwayListener};","map":{"version":3,"names":["React","elementAcceptingRef","exactProp","unstable_ownerDocument","ownerDocument","unstable_useForkRef","useForkRef","unstable_useEventCallback","useEventCallback","jsx","_jsx","mapEventPropToEvent","eventProp","substring","toLowerCase","clickedRootScrollbar","event","doc","documentElement","clientWidth","clientX","clientHeight","clientY","ClickAwayListener","props","children","disableReactTree","mouseEvent","onClickAway","touchEvent","movedRef","useRef","nodeRef","activatedRef","syntheticEventRef","useEffect","setTimeout","current","handleRef","ref","handleClickAway","insideReactTree","insideDOM","composedPath","indexOf","contains","target","createHandleSynthetic","handlerName","childrenPropsHandler","childrenProps","mappedTouchEvent","handleTouchMove","addEventListener","removeEventListener","undefined","mappedMouseEvent","Fragment","cloneElement","process","env","NODE_ENV","propTypes"],"sources":["/home/nevin/Project-2/test-react-auth/frontend/src/node_modules/@mui/base/ClickAwayListener/ClickAwayListener.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { elementAcceptingRef, exactProp, unstable_ownerDocument as ownerDocument, unstable_useForkRef as useForkRef, unstable_useEventCallback as useEventCallback } from '@mui/utils';\n\n// TODO: return `EventHandlerName extends `on${infer EventName}` ? Lowercase<EventName> : never` once generatePropTypes runs with TS 4.1\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction mapEventPropToEvent(eventProp) {\n  return eventProp.substring(2).toLowerCase();\n}\nfunction clickedRootScrollbar(event, doc) {\n  return doc.documentElement.clientWidth < event.clientX || doc.documentElement.clientHeight < event.clientY;\n}\n/**\n * Listen for click events that occur somewhere in the document, outside of the element itself.\n * For instance, if you need to hide a menu when people click anywhere else on your page.\n *\n * Demos:\n *\n * - [Click-Away Listener](https://mui.com/base-ui/react-click-away-listener/)\n *\n * API:\n *\n * - [ClickAwayListener API](https://mui.com/base-ui/react-click-away-listener/components-api/#click-away-listener)\n */\nfunction ClickAwayListener(props) {\n  const {\n    children,\n    disableReactTree = false,\n    mouseEvent = 'onClick',\n    onClickAway,\n    touchEvent = 'onTouchEnd'\n  } = props;\n  const movedRef = React.useRef(false);\n  const nodeRef = React.useRef(null);\n  const activatedRef = React.useRef(false);\n  const syntheticEventRef = React.useRef(false);\n  React.useEffect(() => {\n    // Ensure that this component is not \"activated\" synchronously.\n    // https://github.com/facebook/react/issues/20074\n    setTimeout(() => {\n      activatedRef.current = true;\n    }, 0);\n    return () => {\n      activatedRef.current = false;\n    };\n  }, []);\n  const handleRef = useForkRef(\n  // @ts-expect-error TODO upstream fix\n  children.ref, nodeRef);\n\n  // The handler doesn't take event.defaultPrevented into account:\n  //\n  // event.preventDefault() is meant to stop default behaviors like\n  // clicking a checkbox to check it, hitting a button to submit a form,\n  // and hitting left arrow to move the cursor in a text input etc.\n  // Only special HTML elements have these default behaviors.\n  const handleClickAway = useEventCallback(event => {\n    // Given developers can stop the propagation of the synthetic event,\n    // we can only be confident with a positive value.\n    const insideReactTree = syntheticEventRef.current;\n    syntheticEventRef.current = false;\n    const doc = ownerDocument(nodeRef.current);\n\n    // 1. IE11 support, which trigger the handleClickAway even after the unbind\n    // 2. The child might render null.\n    // 3. Behave like a blur listener.\n    if (!activatedRef.current || !nodeRef.current || 'clientX' in event && clickedRootScrollbar(event, doc)) {\n      return;\n    }\n\n    // Do not act if user performed touchmove\n    if (movedRef.current) {\n      movedRef.current = false;\n      return;\n    }\n    let insideDOM;\n\n    // If not enough, can use https://github.com/DieterHolvoet/event-propagation-path/blob/master/propagationPath.js\n    if (event.composedPath) {\n      insideDOM = event.composedPath().indexOf(nodeRef.current) > -1;\n    } else {\n      insideDOM = !doc.documentElement.contains(\n      // @ts-expect-error returns `false` as intended when not dispatched from a Node\n      event.target) || nodeRef.current.contains(\n      // @ts-expect-error returns `false` as intended when not dispatched from a Node\n      event.target);\n    }\n    if (!insideDOM && (disableReactTree || !insideReactTree)) {\n      onClickAway(event);\n    }\n  });\n\n  // Keep track of mouse/touch events that bubbled up through the portal.\n  const createHandleSynthetic = handlerName => event => {\n    syntheticEventRef.current = true;\n    const childrenPropsHandler = children.props[handlerName];\n    if (childrenPropsHandler) {\n      childrenPropsHandler(event);\n    }\n  };\n  const childrenProps = {\n    ref: handleRef\n  };\n  if (touchEvent !== false) {\n    childrenProps[touchEvent] = createHandleSynthetic(touchEvent);\n  }\n  React.useEffect(() => {\n    if (touchEvent !== false) {\n      const mappedTouchEvent = mapEventPropToEvent(touchEvent);\n      const doc = ownerDocument(nodeRef.current);\n      const handleTouchMove = () => {\n        movedRef.current = true;\n      };\n      doc.addEventListener(mappedTouchEvent, handleClickAway);\n      doc.addEventListener('touchmove', handleTouchMove);\n      return () => {\n        doc.removeEventListener(mappedTouchEvent, handleClickAway);\n        doc.removeEventListener('touchmove', handleTouchMove);\n      };\n    }\n    return undefined;\n  }, [handleClickAway, touchEvent]);\n  if (mouseEvent !== false) {\n    childrenProps[mouseEvent] = createHandleSynthetic(mouseEvent);\n  }\n  React.useEffect(() => {\n    if (mouseEvent !== false) {\n      const mappedMouseEvent = mapEventPropToEvent(mouseEvent);\n      const doc = ownerDocument(nodeRef.current);\n      doc.addEventListener(mappedMouseEvent, handleClickAway);\n      return () => {\n        doc.removeEventListener(mappedMouseEvent, handleClickAway);\n      };\n    }\n    return undefined;\n  }, [handleClickAway, mouseEvent]);\n  return /*#__PURE__*/_jsx(React.Fragment, {\n    children: /*#__PURE__*/React.cloneElement(children, childrenProps)\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? ClickAwayListener.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The wrapped element.\n   */\n  children: elementAcceptingRef.isRequired,\n  /**\n   * If `true`, the React tree is ignored and only the DOM tree is considered.\n   * This prop changes how portaled elements are handled.\n   * @default false\n   */\n  disableReactTree: PropTypes.bool,\n  /**\n   * The mouse event to listen to. You can disable the listener by providing `false`.\n   * @default 'onClick'\n   */\n  mouseEvent: PropTypes.oneOf(['onClick', 'onMouseDown', 'onMouseUp', 'onPointerDown', 'onPointerUp', false]),\n  /**\n   * Callback fired when a \"click away\" event is detected.\n   */\n  onClickAway: PropTypes.func.isRequired,\n  /**\n   * The touch event to listen to. You can disable the listener by providing `false`.\n   * @default 'onTouchEnd'\n   */\n  touchEvent: PropTypes.oneOf(['onTouchEnd', 'onTouchStart', false])\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  ClickAwayListener['propTypes' + ''] = exactProp(ClickAwayListener.propTypes);\n}\nexport { ClickAwayListener };"],"mappings":"AAAA,YAAY,CAEZ,MAAO,GAAK,CAAAA,KAAK,KAAM,OAAO,CAE9B,OAASC,mBAAmB,CAAEC,SAAS,CAAEC,sBAAsB,GAAI,CAAAC,aAAa,CAAEC,mBAAmB,GAAI,CAAAC,UAAU,CAAEC,yBAAyB,GAAI,CAAAC,gBAAgB,KAAQ,YAAY,CAEtL;AACA,OAASC,GAAG,GAAI,CAAAC,IAAI,KAAQ,mBAAmB,CAC/C,QAAS,CAAAC,mBAAmBA,CAACC,SAAS,CAAE,CACtC,MAAO,CAAAA,SAAS,CAACC,SAAS,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAC7C,CACA,QAAS,CAAAC,oBAAoBA,CAACC,KAAK,CAAEC,GAAG,CAAE,CACxC,MAAO,CAAAA,GAAG,CAACC,eAAe,CAACC,WAAW,CAAGH,KAAK,CAACI,OAAO,EAAIH,GAAG,CAACC,eAAe,CAACG,YAAY,CAAGL,KAAK,CAACM,OAAO,CAC5G,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,QAAS,CAAAC,iBAAiBA,CAACC,KAAK,CAAE,CAChC,KAAM,CACJC,QAAQ,CACRC,gBAAgB,CAAG,KAAK,CACxBC,UAAU,CAAG,SAAS,CACtBC,WAAW,CACXC,UAAU,CAAG,YACf,CAAC,CAAGL,KAAK,CACT,KAAM,CAAAM,QAAQ,CAAG9B,KAAK,CAAC+B,MAAM,CAAC,KAAK,CAAC,CACpC,KAAM,CAAAC,OAAO,CAAGhC,KAAK,CAAC+B,MAAM,CAAC,IAAI,CAAC,CAClC,KAAM,CAAAE,YAAY,CAAGjC,KAAK,CAAC+B,MAAM,CAAC,KAAK,CAAC,CACxC,KAAM,CAAAG,iBAAiB,CAAGlC,KAAK,CAAC+B,MAAM,CAAC,KAAK,CAAC,CAC7C/B,KAAK,CAACmC,SAAS,CAAC,IAAM,CACpB;AACA;AACAC,UAAU,CAAC,IAAM,CACfH,YAAY,CAACI,OAAO,CAAG,IAAI,CAC7B,CAAC,CAAE,CAAC,CAAC,CACL,MAAO,IAAM,CACXJ,YAAY,CAACI,OAAO,CAAG,KAAK,CAC9B,CAAC,CACH,CAAC,CAAE,EAAE,CAAC,CACN,KAAM,CAAAC,SAAS,CAAGhC,UAAU,CAC5B;AACAmB,QAAQ,CAACc,GAAG,CAAEP,OAAO,CAAC,CAEtB;AACA;AACA;AACA;AACA;AACA;AACA,KAAM,CAAAQ,eAAe,CAAGhC,gBAAgB,CAACQ,KAAK,EAAI,CAChD;AACA;AACA,KAAM,CAAAyB,eAAe,CAAGP,iBAAiB,CAACG,OAAO,CACjDH,iBAAiB,CAACG,OAAO,CAAG,KAAK,CACjC,KAAM,CAAApB,GAAG,CAAGb,aAAa,CAAC4B,OAAO,CAACK,OAAO,CAAC,CAE1C;AACA;AACA;AACA,GAAI,CAACJ,YAAY,CAACI,OAAO,EAAI,CAACL,OAAO,CAACK,OAAO,EAAI,SAAS,EAAI,CAAArB,KAAK,EAAID,oBAAoB,CAACC,KAAK,CAAEC,GAAG,CAAC,CAAE,CACvG,OACF,CAEA;AACA,GAAIa,QAAQ,CAACO,OAAO,CAAE,CACpBP,QAAQ,CAACO,OAAO,CAAG,KAAK,CACxB,OACF,CACA,GAAI,CAAAK,SAAS,CAEb;AACA,GAAI1B,KAAK,CAAC2B,YAAY,CAAE,CACtBD,SAAS,CAAG1B,KAAK,CAAC2B,YAAY,CAAC,CAAC,CAACC,OAAO,CAACZ,OAAO,CAACK,OAAO,CAAC,CAAG,CAAC,CAAC,CAChE,CAAC,IAAM,CACLK,SAAS,CAAG,CAACzB,GAAG,CAACC,eAAe,CAAC2B,QAAQ,CACzC;AACA7B,KAAK,CAAC8B,MAAM,CAAC,EAAId,OAAO,CAACK,OAAO,CAACQ,QAAQ,CACzC;AACA7B,KAAK,CAAC8B,MAAM,CAAC,CACf,CACA,GAAI,CAACJ,SAAS,GAAKhB,gBAAgB,EAAI,CAACe,eAAe,CAAC,CAAE,CACxDb,WAAW,CAACZ,KAAK,CAAC,CACpB,CACF,CAAC,CAAC,CAEF;AACA,KAAM,CAAA+B,qBAAqB,CAAGC,WAAW,EAAIhC,KAAK,EAAI,CACpDkB,iBAAiB,CAACG,OAAO,CAAG,IAAI,CAChC,KAAM,CAAAY,oBAAoB,CAAGxB,QAAQ,CAACD,KAAK,CAACwB,WAAW,CAAC,CACxD,GAAIC,oBAAoB,CAAE,CACxBA,oBAAoB,CAACjC,KAAK,CAAC,CAC7B,CACF,CAAC,CACD,KAAM,CAAAkC,aAAa,CAAG,CACpBX,GAAG,CAAED,SACP,CAAC,CACD,GAAIT,UAAU,GAAK,KAAK,CAAE,CACxBqB,aAAa,CAACrB,UAAU,CAAC,CAAGkB,qBAAqB,CAAClB,UAAU,CAAC,CAC/D,CACA7B,KAAK,CAACmC,SAAS,CAAC,IAAM,CACpB,GAAIN,UAAU,GAAK,KAAK,CAAE,CACxB,KAAM,CAAAsB,gBAAgB,CAAGxC,mBAAmB,CAACkB,UAAU,CAAC,CACxD,KAAM,CAAAZ,GAAG,CAAGb,aAAa,CAAC4B,OAAO,CAACK,OAAO,CAAC,CAC1C,KAAM,CAAAe,eAAe,CAAGA,CAAA,GAAM,CAC5BtB,QAAQ,CAACO,OAAO,CAAG,IAAI,CACzB,CAAC,CACDpB,GAAG,CAACoC,gBAAgB,CAACF,gBAAgB,CAAEX,eAAe,CAAC,CACvDvB,GAAG,CAACoC,gBAAgB,CAAC,WAAW,CAAED,eAAe,CAAC,CAClD,MAAO,IAAM,CACXnC,GAAG,CAACqC,mBAAmB,CAACH,gBAAgB,CAAEX,eAAe,CAAC,CAC1DvB,GAAG,CAACqC,mBAAmB,CAAC,WAAW,CAAEF,eAAe,CAAC,CACvD,CAAC,CACH,CACA,MAAO,CAAAG,SAAS,CAClB,CAAC,CAAE,CAACf,eAAe,CAAEX,UAAU,CAAC,CAAC,CACjC,GAAIF,UAAU,GAAK,KAAK,CAAE,CACxBuB,aAAa,CAACvB,UAAU,CAAC,CAAGoB,qBAAqB,CAACpB,UAAU,CAAC,CAC/D,CACA3B,KAAK,CAACmC,SAAS,CAAC,IAAM,CACpB,GAAIR,UAAU,GAAK,KAAK,CAAE,CACxB,KAAM,CAAA6B,gBAAgB,CAAG7C,mBAAmB,CAACgB,UAAU,CAAC,CACxD,KAAM,CAAAV,GAAG,CAAGb,aAAa,CAAC4B,OAAO,CAACK,OAAO,CAAC,CAC1CpB,GAAG,CAACoC,gBAAgB,CAACG,gBAAgB,CAAEhB,eAAe,CAAC,CACvD,MAAO,IAAM,CACXvB,GAAG,CAACqC,mBAAmB,CAACE,gBAAgB,CAAEhB,eAAe,CAAC,CAC5D,CAAC,CACH,CACA,MAAO,CAAAe,SAAS,CAClB,CAAC,CAAE,CAACf,eAAe,CAAEb,UAAU,CAAC,CAAC,CACjC,MAAO,aAAajB,IAAI,CAACV,KAAK,CAACyD,QAAQ,CAAE,CACvChC,QAAQ,CAAE,aAAazB,KAAK,CAAC0D,YAAY,CAACjC,QAAQ,CAAEyB,aAAa,CACnE,CAAC,CAAC,CACJ,CACAS,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAK,YAAY,QA6BjC,IAAK,EAAC,CACV,GAAIF,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAK,YAAY,CAAE,CACzC;AACAtC,iBAAiB,CAAC,WAAW,CAAG,EAAE,CAAC,CAAGrB,SAAS,CAACqB,iBAAiB,CAACuC,SAAS,CAAC,CAC9E,CACA,OAASvC,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module"}