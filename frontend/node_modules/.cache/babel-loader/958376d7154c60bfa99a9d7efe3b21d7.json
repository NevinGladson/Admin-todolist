{"ast":null,"code":"'use client';import _extends from\"@babel/runtime/helpers/esm/extends\";import _objectWithoutPropertiesLoose from\"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";const _excluded=[\"actions\",\"children\",\"defaultValue\",\"name\",\"onChange\",\"value\"];import*as React from'react';import FormGroup from'../FormGroup';import useForkRef from'../utils/useForkRef';import useControlled from'../utils/useControlled';import RadioGroupContext from'./RadioGroupContext';import useId from'../utils/useId';import{jsx as _jsx}from\"react/jsx-runtime\";const RadioGroup=/*#__PURE__*/React.forwardRef(function RadioGroup(props,ref){const{// private\n// eslint-disable-next-line react/prop-types\nactions,children,defaultValue,name:nameProp,onChange,value:valueProp}=props,other=_objectWithoutPropertiesLoose(props,_excluded);const rootRef=React.useRef(null);const[value,setValueState]=useControlled({controlled:valueProp,default:defaultValue,name:'RadioGroup'});React.useImperativeHandle(actions,()=>({focus:()=>{let input=rootRef.current.querySelector('input:not(:disabled):checked');if(!input){input=rootRef.current.querySelector('input:not(:disabled)');}if(input){input.focus();}}}),[]);const handleRef=useForkRef(ref,rootRef);const name=useId(nameProp);const contextValue=React.useMemo(()=>({name,onChange(event){setValueState(event.target.value);if(onChange){onChange(event,event.target.value);}},value}),[name,onChange,setValueState,value]);return/*#__PURE__*/_jsx(RadioGroupContext.Provider,{value:contextValue,children:/*#__PURE__*/_jsx(FormGroup,_extends({role:\"radiogroup\",ref:handleRef},other,{children:children}))});});process.env.NODE_ENV!==\"production\"?void 0:void 0;export default RadioGroup;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","FormGroup","useForkRef","useControlled","RadioGroupContext","useId","jsx","_jsx","RadioGroup","forwardRef","props","ref","actions","children","defaultValue","name","nameProp","onChange","value","valueProp","other","rootRef","useRef","setValueState","controlled","default","useImperativeHandle","focus","input","current","querySelector","handleRef","contextValue","useMemo","event","target","Provider","role","process","env","NODE_ENV"],"sources":["/home/nevin/Project-2/test-react-auth/frontend/src/node_modules/@mui/material/RadioGroup/RadioGroup.js"],"sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"actions\", \"children\", \"defaultValue\", \"name\", \"onChange\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport FormGroup from '../FormGroup';\nimport useForkRef from '../utils/useForkRef';\nimport useControlled from '../utils/useControlled';\nimport RadioGroupContext from './RadioGroupContext';\nimport useId from '../utils/useId';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst RadioGroup = /*#__PURE__*/React.forwardRef(function RadioGroup(props, ref) {\n  const {\n      // private\n      // eslint-disable-next-line react/prop-types\n      actions,\n      children,\n      defaultValue,\n      name: nameProp,\n      onChange,\n      value: valueProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootRef = React.useRef(null);\n  const [value, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: 'RadioGroup'\n  });\n  React.useImperativeHandle(actions, () => ({\n    focus: () => {\n      let input = rootRef.current.querySelector('input:not(:disabled):checked');\n      if (!input) {\n        input = rootRef.current.querySelector('input:not(:disabled)');\n      }\n      if (input) {\n        input.focus();\n      }\n    }\n  }), []);\n  const handleRef = useForkRef(ref, rootRef);\n  const name = useId(nameProp);\n  const contextValue = React.useMemo(() => ({\n    name,\n    onChange(event) {\n      setValueState(event.target.value);\n      if (onChange) {\n        onChange(event, event.target.value);\n      }\n    },\n    value\n  }), [name, onChange, setValueState, value]);\n  return /*#__PURE__*/_jsx(RadioGroupContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(FormGroup, _extends({\n      role: \"radiogroup\",\n      ref: handleRef\n    }, other, {\n      children: children\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? RadioGroup.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * The default value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n  /**\n   * The name used to reference the value of the control.\n   * If you don't provide this prop, it falls back to a randomly generated name.\n   */\n  name: PropTypes.string,\n  /**\n   * Callback fired when a radio button is selected.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {string} value The value of the selected radio button.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n  /**\n   * Value of the selected radio button. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default RadioGroup;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}