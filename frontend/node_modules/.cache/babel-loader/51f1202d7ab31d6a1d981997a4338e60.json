{"ast":null,"code":"// Supports determination of isControlled().\n// Controlled input accepts its current value as a prop.\n//\n// @see https://facebook.github.io/react/docs/forms.html#controlled-components\n// @param value\n// @returns {boolean} true if string (including '') or number (including zero)\nexport function hasValue(value){return value!=null&&!(Array.isArray(value)&&value.length===0);}// Determine if field is empty or filled.\n// Response determines if label is presented above field or as placeholder.\n//\n// @param obj\n// @param SSR\n// @returns {boolean} False when not present or empty string.\n//                    True when any number or string with length.\nexport function isFilled(obj){let SSR=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;return obj&&(hasValue(obj.value)&&obj.value!==''||SSR&&hasValue(obj.defaultValue)&&obj.defaultValue!=='');}// Determine if an Input is adorned on start.\n// It's corresponding to the left with LTR.\n//\n// @param obj\n// @returns {boolean} False when no adornments.\n//                    True when adorned at the start.\nexport function isAdornedStart(obj){return obj.startAdornment;}","map":{"version":3,"names":["hasValue","value","Array","isArray","length","isFilled","obj","SSR","arguments","undefined","defaultValue","isAdornedStart","startAdornment"],"sources":["/home/nevin/Project-2/test-react-auth/frontend/src/node_modules/@mui/material/InputBase/utils.js"],"sourcesContent":["// Supports determination of isControlled().\n// Controlled input accepts its current value as a prop.\n//\n// @see https://facebook.github.io/react/docs/forms.html#controlled-components\n// @param value\n// @returns {boolean} true if string (including '') or number (including zero)\nexport function hasValue(value) {\n  return value != null && !(Array.isArray(value) && value.length === 0);\n}\n\n// Determine if field is empty or filled.\n// Response determines if label is presented above field or as placeholder.\n//\n// @param obj\n// @param SSR\n// @returns {boolean} False when not present or empty string.\n//                    True when any number or string with length.\nexport function isFilled(obj, SSR = false) {\n  return obj && (hasValue(obj.value) && obj.value !== '' || SSR && hasValue(obj.defaultValue) && obj.defaultValue !== '');\n}\n\n// Determine if an Input is adorned on start.\n// It's corresponding to the left with LTR.\n//\n// @param obj\n// @returns {boolean} False when no adornments.\n//                    True when adorned at the start.\nexport function isAdornedStart(obj) {\n  return obj.startAdornment;\n}"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,MAAO,SAAS,CAAAA,QAAQA,CAACC,KAAK,CAAE,CAC9B,MAAO,CAAAA,KAAK,EAAI,IAAI,EAAI,EAAEC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,EAAIA,KAAK,CAACG,MAAM,GAAK,CAAC,CAAC,CACvE,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAO,SAAS,CAAAC,QAAQA,CAACC,GAAG,CAAe,IAAb,CAAAC,GAAG,CAAAC,SAAA,CAAAJ,MAAA,IAAAI,SAAA,MAAAC,SAAA,CAAAD,SAAA,IAAG,KAAK,CACvC,MAAO,CAAAF,GAAG,GAAKN,QAAQ,CAACM,GAAG,CAACL,KAAK,CAAC,EAAIK,GAAG,CAACL,KAAK,GAAK,EAAE,EAAIM,GAAG,EAAIP,QAAQ,CAACM,GAAG,CAACI,YAAY,CAAC,EAAIJ,GAAG,CAACI,YAAY,GAAK,EAAE,CAAC,CACzH,CAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAO,SAAS,CAAAC,cAAcA,CAACL,GAAG,CAAE,CAClC,MAAO,CAAAA,GAAG,CAACM,cAAc,CAC3B","ignoreList":[]},"metadata":{},"sourceType":"module"}