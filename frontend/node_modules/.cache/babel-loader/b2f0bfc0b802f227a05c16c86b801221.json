{"ast":null,"code":"'use client';import _extends from\"@babel/runtime/helpers/esm/extends\";import _objectWithoutPropertiesLoose from\"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";const _excluded=[\"autoHideDuration\",\"children\",\"disableWindowBlurListener\",\"exited\",\"onBlur\",\"onClose\",\"onFocus\",\"onMouseEnter\",\"onMouseLeave\",\"open\",\"resumeHideDuration\",\"slotProps\",\"slots\"];import*as React from'react';import{ClickAwayListener}from'../ClickAwayListener';import{unstable_composeClasses as composeClasses}from'../composeClasses';import{getSnackbarUtilityClass}from'./snackbarClasses';import{useSnackbar}from'../useSnackbar';import{useSlotProps}from'../utils';import{useClassNamesOverride}from'../utils/ClassNameConfigurator';import{jsx as _jsx}from\"react/jsx-runtime\";const useUtilityClasses=()=>{const slots={root:['root']};return composeClasses(slots,useClassNamesOverride(getSnackbarUtilityClass));};/**\n *\n * Demos:\n *\n * - [Snackbar](https://mui.com/base-ui/react-snackbar/)\n * - [Snackbar](https://mui.com/joy-ui/react-snackbar/)\n * - [Snackbar](https://mui.com/material-ui/react-snackbar/)\n *\n * API:\n *\n * - [Snackbar API](https://mui.com/base-ui/react-snackbar/components-api/#snackbar)\n */const Snackbar=/*#__PURE__*/React.forwardRef(function Snackbar(props,forwardedRef){const{autoHideDuration=null,children,disableWindowBlurListener=false,exited=true,onClose,open,resumeHideDuration,slotProps={},slots={}}=props,other=_objectWithoutPropertiesLoose(props,_excluded);const classes=useUtilityClasses();const{getRootProps,onClickAway}=useSnackbar(_extends({},props,{autoHideDuration,disableWindowBlurListener,onClose,open,resumeHideDuration}));const ownerState=props;const Root=slots.root||'div';const rootProps=useSlotProps({elementType:Root,getSlotProps:getRootProps,externalForwardedProps:other,externalSlotProps:slotProps.root,additionalProps:{ref:forwardedRef},ownerState,className:classes.root});const clickAwayListenerProps=useSlotProps({elementType:ClickAwayListener,externalSlotProps:slotProps.clickAwayListener,additionalProps:{onClickAway},ownerState});// ClickAwayListener doesn't support ownerState\ndelete clickAwayListenerProps.ownerState;// So that we only render active snackbars.\nif(!open&&exited){return null;}return/*#__PURE__*/_jsx(ClickAwayListener,_extends({},clickAwayListenerProps,{children:/*#__PURE__*/_jsx(Root,_extends({},rootProps,{children:children}))}));});process.env.NODE_ENV!==\"production\"?void 0:void 0;export{Snackbar};","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","ClickAwayListener","unstable_composeClasses","composeClasses","getSnackbarUtilityClass","useSnackbar","useSlotProps","useClassNamesOverride","jsx","_jsx","useUtilityClasses","slots","root","Snackbar","forwardRef","props","forwardedRef","autoHideDuration","children","disableWindowBlurListener","exited","onClose","open","resumeHideDuration","slotProps","other","classes","getRootProps","onClickAway","ownerState","Root","rootProps","elementType","getSlotProps","externalForwardedProps","externalSlotProps","additionalProps","ref","className","clickAwayListenerProps","clickAwayListener","process","env","NODE_ENV"],"sources":["/home/nevin/Project-2/test-react-auth/frontend/src/node_modules/@mui/base/Snackbar/Snackbar.js"],"sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"autoHideDuration\", \"children\", \"disableWindowBlurListener\", \"exited\", \"onBlur\", \"onClose\", \"onFocus\", \"onMouseEnter\", \"onMouseLeave\", \"open\", \"resumeHideDuration\", \"slotProps\", \"slots\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { ClickAwayListener } from '../ClickAwayListener';\nimport { unstable_composeClasses as composeClasses } from '../composeClasses';\nimport { getSnackbarUtilityClass } from './snackbarClasses';\nimport { useSnackbar } from '../useSnackbar';\nimport { useSlotProps } from '../utils';\nimport { useClassNamesOverride } from '../utils/ClassNameConfigurator';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = () => {\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, useClassNamesOverride(getSnackbarUtilityClass));\n};\n/**\n *\n * Demos:\n *\n * - [Snackbar](https://mui.com/base-ui/react-snackbar/)\n * - [Snackbar](https://mui.com/joy-ui/react-snackbar/)\n * - [Snackbar](https://mui.com/material-ui/react-snackbar/)\n *\n * API:\n *\n * - [Snackbar API](https://mui.com/base-ui/react-snackbar/components-api/#snackbar)\n */\nconst Snackbar = /*#__PURE__*/React.forwardRef(function Snackbar(props, forwardedRef) {\n  const {\n      autoHideDuration = null,\n      children,\n      disableWindowBlurListener = false,\n      exited = true,\n      onClose,\n      open,\n      resumeHideDuration,\n      slotProps = {},\n      slots = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const classes = useUtilityClasses();\n  const {\n    getRootProps,\n    onClickAway\n  } = useSnackbar(_extends({}, props, {\n    autoHideDuration,\n    disableWindowBlurListener,\n    onClose,\n    open,\n    resumeHideDuration\n  }));\n  const ownerState = props;\n  const Root = slots.root || 'div';\n  const rootProps = useSlotProps({\n    elementType: Root,\n    getSlotProps: getRootProps,\n    externalForwardedProps: other,\n    externalSlotProps: slotProps.root,\n    additionalProps: {\n      ref: forwardedRef\n    },\n    ownerState,\n    className: classes.root\n  });\n  const clickAwayListenerProps = useSlotProps({\n    elementType: ClickAwayListener,\n    externalSlotProps: slotProps.clickAwayListener,\n    additionalProps: {\n      onClickAway\n    },\n    ownerState\n  });\n\n  // ClickAwayListener doesn't support ownerState\n  delete clickAwayListenerProps.ownerState;\n\n  // So that we only render active snackbars.\n  if (!open && exited) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(ClickAwayListener, _extends({}, clickAwayListenerProps, {\n    children: /*#__PURE__*/_jsx(Root, _extends({}, rootProps, {\n      children: children\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Snackbar.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The number of milliseconds to wait before automatically calling the\n   * `onClose` function. `onClose` should then set the state of the `open`\n   * prop to hide the Snackbar. This behavior is disabled by default with\n   * the `null` value.\n   * @default null\n   */\n  autoHideDuration: PropTypes.number,\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * If `true`, the `autoHideDuration` timer will expire even if the window is not focused.\n   * @default false\n   */\n  disableWindowBlurListener: PropTypes.bool,\n  /**\n   * The prop used to handle exited transition and unmount the component.\n   * @default true\n   */\n  exited: PropTypes.bool,\n  /**\n   * Callback fired when the component requests to be closed.\n   * Typically `onClose` is used to set state in the parent component,\n   * which is used to control the `Snackbar` `open` prop.\n   * The `reason` parameter can optionally be used to control the response to `onClose`,\n   * for example ignoring `clickaway`.\n   *\n   * @param {React.SyntheticEvent<any> | Event} event The event source of the callback.\n   * @param {string} reason Can be: `\"timeout\"` (`autoHideDuration` expired), `\"clickaway\"`, or `\"escapeKeyDown\"`.\n   */\n  onClose: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n  /**\n   * The number of milliseconds to wait before dismissing after user interaction.\n   * If `autoHideDuration` prop isn't specified, it does nothing.\n   * If `autoHideDuration` prop is specified but `resumeHideDuration` isn't,\n   * we default to `autoHideDuration / 2` ms.\n   */\n  resumeHideDuration: PropTypes.number,\n  /**\n   * The props used for each slot inside the Snackbar.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    clickAwayListener: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n      children: PropTypes.element.isRequired,\n      disableReactTree: PropTypes.bool,\n      mouseEvent: PropTypes.oneOf(['onClick', 'onMouseDown', 'onMouseUp', 'onPointerDown', 'onPointerUp', false]),\n      onClickAway: PropTypes.func,\n      touchEvent: PropTypes.oneOf(['onTouchEnd', 'onTouchStart', false])\n    })]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the Snackbar.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    root: PropTypes.elementType\n  })\n} : void 0;\nexport { Snackbar };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}