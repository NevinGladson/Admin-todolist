{"ast":null,"code":"'use client';import _extends from\"@babel/runtime/helpers/esm/extends\";import*as React from'react';import{DEFAULT_MODE_STORAGE_KEY,DEFAULT_COLOR_SCHEME_STORAGE_KEY}from'./getInitColorSchemeScript';export function getSystemMode(mode){if(typeof window!=='undefined'&&mode==='system'){const mql=window.matchMedia('(prefers-color-scheme: dark)');if(mql.matches){return'dark';}return'light';}return undefined;}function processState(state,callback){if(state.mode==='light'||state.mode==='system'&&state.systemMode==='light'){return callback('light');}if(state.mode==='dark'||state.mode==='system'&&state.systemMode==='dark'){return callback('dark');}return undefined;}export function getColorScheme(state){return processState(state,mode=>{if(mode==='light'){return state.lightColorScheme;}if(mode==='dark'){return state.darkColorScheme;}return undefined;});}function initializeValue(key,defaultValue){if(typeof window==='undefined'){return undefined;}let value;try{value=localStorage.getItem(key)||undefined;if(!value){// the first time that user enters the site.\nlocalStorage.setItem(key,defaultValue);}}catch(e){// Unsupported\n}return value||defaultValue;}export default function useCurrentColorScheme(options){const{defaultMode='light',defaultLightColorScheme,defaultDarkColorScheme,supportedColorSchemes=[],modeStorageKey=DEFAULT_MODE_STORAGE_KEY,colorSchemeStorageKey=DEFAULT_COLOR_SCHEME_STORAGE_KEY,storageWindow=typeof window==='undefined'?undefined:window}=options;const joinedColorSchemes=supportedColorSchemes.join(',');const[state,setState]=React.useState(()=>{const initialMode=initializeValue(modeStorageKey,defaultMode);const lightColorScheme=initializeValue(\"\".concat(colorSchemeStorageKey,\"-light\"),defaultLightColorScheme);const darkColorScheme=initializeValue(\"\".concat(colorSchemeStorageKey,\"-dark\"),defaultDarkColorScheme);return{mode:initialMode,systemMode:getSystemMode(initialMode),lightColorScheme,darkColorScheme};});const colorScheme=getColorScheme(state);const setMode=React.useCallback(mode=>{setState(currentState=>{if(mode===currentState.mode){// do nothing if mode does not change\nreturn currentState;}const newMode=mode!=null?mode:defaultMode;try{localStorage.setItem(modeStorageKey,newMode);}catch(e){// Unsupported\n}return _extends({},currentState,{mode:newMode,systemMode:getSystemMode(newMode)});});},[modeStorageKey,defaultMode]);const setColorScheme=React.useCallback(value=>{if(!value){setState(currentState=>{try{localStorage.setItem(\"\".concat(colorSchemeStorageKey,\"-light\"),defaultLightColorScheme);localStorage.setItem(\"\".concat(colorSchemeStorageKey,\"-dark\"),defaultDarkColorScheme);}catch(e){// Unsupported\n}return _extends({},currentState,{lightColorScheme:defaultLightColorScheme,darkColorScheme:defaultDarkColorScheme});});}else if(typeof value==='string'){if(value&&!joinedColorSchemes.includes(value)){console.error(\"`\".concat(value,\"` does not exist in `theme.colorSchemes`.\"));}else{setState(currentState=>{const newState=_extends({},currentState);processState(currentState,mode=>{try{localStorage.setItem(\"\".concat(colorSchemeStorageKey,\"-\").concat(mode),value);}catch(e){// Unsupported\n}if(mode==='light'){newState.lightColorScheme=value;}if(mode==='dark'){newState.darkColorScheme=value;}});return newState;});}}else{setState(currentState=>{const newState=_extends({},currentState);const newLightColorScheme=value.light===null?defaultLightColorScheme:value.light;const newDarkColorScheme=value.dark===null?defaultDarkColorScheme:value.dark;if(newLightColorScheme){if(!joinedColorSchemes.includes(newLightColorScheme)){console.error(\"`\".concat(newLightColorScheme,\"` does not exist in `theme.colorSchemes`.\"));}else{newState.lightColorScheme=newLightColorScheme;try{localStorage.setItem(\"\".concat(colorSchemeStorageKey,\"-light\"),newLightColorScheme);}catch(error){// Unsupported\n}}}if(newDarkColorScheme){if(!joinedColorSchemes.includes(newDarkColorScheme)){console.error(\"`\".concat(newDarkColorScheme,\"` does not exist in `theme.colorSchemes`.\"));}else{newState.darkColorScheme=newDarkColorScheme;try{localStorage.setItem(\"\".concat(colorSchemeStorageKey,\"-dark\"),newDarkColorScheme);}catch(error){// Unsupported\n}}}return newState;});}},[joinedColorSchemes,colorSchemeStorageKey,defaultLightColorScheme,defaultDarkColorScheme]);const handleMediaQuery=React.useCallback(event=>{if(state.mode==='system'){setState(currentState=>{const systemMode=event!=null&&event.matches?'dark':'light';// Early exit, nothing changed.\nif(currentState.systemMode===systemMode){return currentState;}return _extends({},currentState,{systemMode});});}},[state.mode]);// Ref hack to avoid adding handleMediaQuery as a dep\nconst mediaListener=React.useRef(handleMediaQuery);mediaListener.current=handleMediaQuery;React.useEffect(()=>{const handler=function(){return mediaListener.current(...arguments);};// Always listen to System preference\nconst media=window.matchMedia('(prefers-color-scheme: dark)');// Intentionally use deprecated listener methods to support iOS & old browsers\nmedia.addListener(handler);handler(media);return()=>{media.removeListener(handler);};},[]);// Handle when localStorage has changed\nReact.useEffect(()=>{if(storageWindow){const handleStorage=event=>{const value=event.newValue;if(typeof event.key==='string'&&event.key.startsWith(colorSchemeStorageKey)&&(!value||joinedColorSchemes.match(value))){// If the key is deleted, value will be null then reset color scheme to the default one.\nif(event.key.endsWith('light')){setColorScheme({light:value});}if(event.key.endsWith('dark')){setColorScheme({dark:value});}}if(event.key===modeStorageKey&&(!value||['light','dark','system'].includes(value))){setMode(value||defaultMode);}};// For syncing color-scheme changes between iframes\nstorageWindow.addEventListener('storage',handleStorage);return()=>{storageWindow.removeEventListener('storage',handleStorage);};}return undefined;},[setColorScheme,setMode,modeStorageKey,colorSchemeStorageKey,joinedColorSchemes,defaultMode,storageWindow]);return _extends({},state,{colorScheme,setMode,setColorScheme});}","map":{"version":3,"names":["_extends","React","DEFAULT_MODE_STORAGE_KEY","DEFAULT_COLOR_SCHEME_STORAGE_KEY","getSystemMode","mode","window","mql","matchMedia","matches","undefined","processState","state","callback","systemMode","getColorScheme","lightColorScheme","darkColorScheme","initializeValue","key","defaultValue","value","localStorage","getItem","setItem","e","useCurrentColorScheme","options","defaultMode","defaultLightColorScheme","defaultDarkColorScheme","supportedColorSchemes","modeStorageKey","colorSchemeStorageKey","storageWindow","joinedColorSchemes","join","setState","useState","initialMode","concat","colorScheme","setMode","useCallback","currentState","newMode","setColorScheme","includes","console","error","newState","newLightColorScheme","light","newDarkColorScheme","dark","handleMediaQuery","event","mediaListener","useRef","current","useEffect","handler","arguments","media","addListener","removeListener","handleStorage","newValue","startsWith","match","endsWith","addEventListener","removeEventListener"],"sources":["/home/nevin/Project-2/test-react-auth/frontend/src/node_modules/@mui/system/esm/cssVars/useCurrentColorScheme.js"],"sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { DEFAULT_MODE_STORAGE_KEY, DEFAULT_COLOR_SCHEME_STORAGE_KEY } from './getInitColorSchemeScript';\nexport function getSystemMode(mode) {\n  if (typeof window !== 'undefined' && mode === 'system') {\n    const mql = window.matchMedia('(prefers-color-scheme: dark)');\n    if (mql.matches) {\n      return 'dark';\n    }\n    return 'light';\n  }\n  return undefined;\n}\nfunction processState(state, callback) {\n  if (state.mode === 'light' || state.mode === 'system' && state.systemMode === 'light') {\n    return callback('light');\n  }\n  if (state.mode === 'dark' || state.mode === 'system' && state.systemMode === 'dark') {\n    return callback('dark');\n  }\n  return undefined;\n}\nexport function getColorScheme(state) {\n  return processState(state, mode => {\n    if (mode === 'light') {\n      return state.lightColorScheme;\n    }\n    if (mode === 'dark') {\n      return state.darkColorScheme;\n    }\n    return undefined;\n  });\n}\nfunction initializeValue(key, defaultValue) {\n  if (typeof window === 'undefined') {\n    return undefined;\n  }\n  let value;\n  try {\n    value = localStorage.getItem(key) || undefined;\n    if (!value) {\n      // the first time that user enters the site.\n      localStorage.setItem(key, defaultValue);\n    }\n  } catch (e) {\n    // Unsupported\n  }\n  return value || defaultValue;\n}\nexport default function useCurrentColorScheme(options) {\n  const {\n    defaultMode = 'light',\n    defaultLightColorScheme,\n    defaultDarkColorScheme,\n    supportedColorSchemes = [],\n    modeStorageKey = DEFAULT_MODE_STORAGE_KEY,\n    colorSchemeStorageKey = DEFAULT_COLOR_SCHEME_STORAGE_KEY,\n    storageWindow = typeof window === 'undefined' ? undefined : window\n  } = options;\n  const joinedColorSchemes = supportedColorSchemes.join(',');\n  const [state, setState] = React.useState(() => {\n    const initialMode = initializeValue(modeStorageKey, defaultMode);\n    const lightColorScheme = initializeValue(`${colorSchemeStorageKey}-light`, defaultLightColorScheme);\n    const darkColorScheme = initializeValue(`${colorSchemeStorageKey}-dark`, defaultDarkColorScheme);\n    return {\n      mode: initialMode,\n      systemMode: getSystemMode(initialMode),\n      lightColorScheme,\n      darkColorScheme\n    };\n  });\n  const colorScheme = getColorScheme(state);\n  const setMode = React.useCallback(mode => {\n    setState(currentState => {\n      if (mode === currentState.mode) {\n        // do nothing if mode does not change\n        return currentState;\n      }\n      const newMode = mode != null ? mode : defaultMode;\n      try {\n        localStorage.setItem(modeStorageKey, newMode);\n      } catch (e) {\n        // Unsupported\n      }\n      return _extends({}, currentState, {\n        mode: newMode,\n        systemMode: getSystemMode(newMode)\n      });\n    });\n  }, [modeStorageKey, defaultMode]);\n  const setColorScheme = React.useCallback(value => {\n    if (!value) {\n      setState(currentState => {\n        try {\n          localStorage.setItem(`${colorSchemeStorageKey}-light`, defaultLightColorScheme);\n          localStorage.setItem(`${colorSchemeStorageKey}-dark`, defaultDarkColorScheme);\n        } catch (e) {\n          // Unsupported\n        }\n        return _extends({}, currentState, {\n          lightColorScheme: defaultLightColorScheme,\n          darkColorScheme: defaultDarkColorScheme\n        });\n      });\n    } else if (typeof value === 'string') {\n      if (value && !joinedColorSchemes.includes(value)) {\n        console.error(`\\`${value}\\` does not exist in \\`theme.colorSchemes\\`.`);\n      } else {\n        setState(currentState => {\n          const newState = _extends({}, currentState);\n          processState(currentState, mode => {\n            try {\n              localStorage.setItem(`${colorSchemeStorageKey}-${mode}`, value);\n            } catch (e) {\n              // Unsupported\n            }\n            if (mode === 'light') {\n              newState.lightColorScheme = value;\n            }\n            if (mode === 'dark') {\n              newState.darkColorScheme = value;\n            }\n          });\n          return newState;\n        });\n      }\n    } else {\n      setState(currentState => {\n        const newState = _extends({}, currentState);\n        const newLightColorScheme = value.light === null ? defaultLightColorScheme : value.light;\n        const newDarkColorScheme = value.dark === null ? defaultDarkColorScheme : value.dark;\n        if (newLightColorScheme) {\n          if (!joinedColorSchemes.includes(newLightColorScheme)) {\n            console.error(`\\`${newLightColorScheme}\\` does not exist in \\`theme.colorSchemes\\`.`);\n          } else {\n            newState.lightColorScheme = newLightColorScheme;\n            try {\n              localStorage.setItem(`${colorSchemeStorageKey}-light`, newLightColorScheme);\n            } catch (error) {\n              // Unsupported\n            }\n          }\n        }\n        if (newDarkColorScheme) {\n          if (!joinedColorSchemes.includes(newDarkColorScheme)) {\n            console.error(`\\`${newDarkColorScheme}\\` does not exist in \\`theme.colorSchemes\\`.`);\n          } else {\n            newState.darkColorScheme = newDarkColorScheme;\n            try {\n              localStorage.setItem(`${colorSchemeStorageKey}-dark`, newDarkColorScheme);\n            } catch (error) {\n              // Unsupported\n            }\n          }\n        }\n        return newState;\n      });\n    }\n  }, [joinedColorSchemes, colorSchemeStorageKey, defaultLightColorScheme, defaultDarkColorScheme]);\n  const handleMediaQuery = React.useCallback(event => {\n    if (state.mode === 'system') {\n      setState(currentState => {\n        const systemMode = event != null && event.matches ? 'dark' : 'light';\n\n        // Early exit, nothing changed.\n        if (currentState.systemMode === systemMode) {\n          return currentState;\n        }\n        return _extends({}, currentState, {\n          systemMode\n        });\n      });\n    }\n  }, [state.mode]);\n\n  // Ref hack to avoid adding handleMediaQuery as a dep\n  const mediaListener = React.useRef(handleMediaQuery);\n  mediaListener.current = handleMediaQuery;\n  React.useEffect(() => {\n    const handler = (...args) => mediaListener.current(...args);\n\n    // Always listen to System preference\n    const media = window.matchMedia('(prefers-color-scheme: dark)');\n\n    // Intentionally use deprecated listener methods to support iOS & old browsers\n    media.addListener(handler);\n    handler(media);\n    return () => {\n      media.removeListener(handler);\n    };\n  }, []);\n\n  // Handle when localStorage has changed\n  React.useEffect(() => {\n    if (storageWindow) {\n      const handleStorage = event => {\n        const value = event.newValue;\n        if (typeof event.key === 'string' && event.key.startsWith(colorSchemeStorageKey) && (!value || joinedColorSchemes.match(value))) {\n          // If the key is deleted, value will be null then reset color scheme to the default one.\n          if (event.key.endsWith('light')) {\n            setColorScheme({\n              light: value\n            });\n          }\n          if (event.key.endsWith('dark')) {\n            setColorScheme({\n              dark: value\n            });\n          }\n        }\n        if (event.key === modeStorageKey && (!value || ['light', 'dark', 'system'].includes(value))) {\n          setMode(value || defaultMode);\n        }\n      };\n      // For syncing color-scheme changes between iframes\n      storageWindow.addEventListener('storage', handleStorage);\n      return () => {\n        storageWindow.removeEventListener('storage', handleStorage);\n      };\n    }\n    return undefined;\n  }, [setColorScheme, setMode, modeStorageKey, colorSchemeStorageKey, joinedColorSchemes, defaultMode, storageWindow]);\n  return _extends({}, state, {\n    colorScheme,\n    setMode,\n    setColorScheme\n  });\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}