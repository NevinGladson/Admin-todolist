{"ast":null,"code":"'use client';import*as React from'react';import PropTypes from'prop-types';import{CacheProvider}from'@emotion/react';import createCache from'@emotion/cache';// prepend: true moves MUI styles to the top of the <head> so they're loaded first.\n// It allows developers to easily override MUI styles with other styling solutions, like CSS modules.\nimport{jsx as _jsx}from\"react/jsx-runtime\";let cache;if(typeof document==='object'){cache=createCache({key:'css',prepend:true});}export default function StyledEngineProvider(props){const{injectFirst,children}=props;return injectFirst&&cache?/*#__PURE__*/_jsx(CacheProvider,{value:cache,children:children}):children;}process.env.NODE_ENV!==\"production\"?StyledEngineProvider.propTypes={/**\n   * Your component tree.\n   */children:PropTypes.node,/**\n   * By default, the styles are injected last in the <head> element of the page.\n   * As a result, they gain more specificity than any other style sheet.\n   * If you want to override MUI's styles, set this prop.\n   */injectFirst:PropTypes.bool}:void 0;","map":{"version":3,"names":["React","PropTypes","CacheProvider","createCache","jsx","_jsx","cache","document","key","prepend","StyledEngineProvider","props","injectFirst","children","value","process","env","NODE_ENV","propTypes","node","bool"],"sources":["/home/nevin/Project-2/test-react-auth/frontend/src/node_modules/@mui/styled-engine/StyledEngineProvider/StyledEngineProvider.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { CacheProvider } from '@emotion/react';\nimport createCache from '@emotion/cache';\n\n// prepend: true moves MUI styles to the top of the <head> so they're loaded first.\n// It allows developers to easily override MUI styles with other styling solutions, like CSS modules.\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nlet cache;\nif (typeof document === 'object') {\n  cache = createCache({\n    key: 'css',\n    prepend: true\n  });\n}\nexport default function StyledEngineProvider(props) {\n  const {\n    injectFirst,\n    children\n  } = props;\n  return injectFirst && cache ? /*#__PURE__*/_jsx(CacheProvider, {\n    value: cache,\n    children: children\n  }) : children;\n}\nprocess.env.NODE_ENV !== \"production\" ? StyledEngineProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n  /**\n   * By default, the styles are injected last in the <head> element of the page.\n   * As a result, they gain more specificity than any other style sheet.\n   * If you want to override MUI's styles, set this prop.\n   */\n  injectFirst: PropTypes.bool\n} : void 0;"],"mappings":"AAAA,YAAY,CAEZ,MAAO,GAAK,CAAAA,KAAK,KAAM,OAAO,CAC9B,MAAO,CAAAC,SAAS,KAAM,YAAY,CAClC,OAASC,aAAa,KAAQ,gBAAgB,CAC9C,MAAO,CAAAC,WAAW,KAAM,gBAAgB,CAExC;AACA;AACA,OAASC,GAAG,GAAI,CAAAC,IAAI,KAAQ,mBAAmB,CAC/C,GAAI,CAAAC,KAAK,CACT,GAAI,MAAO,CAAAC,QAAQ,GAAK,QAAQ,CAAE,CAChCD,KAAK,CAAGH,WAAW,CAAC,CAClBK,GAAG,CAAE,KAAK,CACVC,OAAO,CAAE,IACX,CAAC,CAAC,CACJ,CACA,cAAe,SAAS,CAAAC,oBAAoBA,CAACC,KAAK,CAAE,CAClD,KAAM,CACJC,WAAW,CACXC,QACF,CAAC,CAAGF,KAAK,CACT,MAAO,CAAAC,WAAW,EAAIN,KAAK,CAAG,aAAaD,IAAI,CAACH,aAAa,CAAE,CAC7DY,KAAK,CAAER,KAAK,CACZO,QAAQ,CAAEA,QACZ,CAAC,CAAC,CAAGA,QAAQ,CACf,CACAE,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAK,YAAY,CAAGP,oBAAoB,CAACQ,SAAS,CAAG,CACvE;AACF;AACA,KACEL,QAAQ,CAAEZ,SAAS,CAACkB,IAAI,CACxB;AACF;AACA;AACA;AACA,KACEP,WAAW,CAAEX,SAAS,CAACmB,IACzB,CAAC,CAAG,IAAK,EAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}