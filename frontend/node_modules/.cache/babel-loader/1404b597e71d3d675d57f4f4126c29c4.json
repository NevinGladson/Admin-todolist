{"ast":null,"code":"'use client';import*as React from'react';import{exactProp,unstable_useEnhancedEffect as useEnhancedEffect}from'@mui/utils';import{jsx as _jsx}from\"react/jsx-runtime\";/**\n * NoSsr purposely removes components from the subject of Server Side Rendering (SSR).\n *\n * This component can be useful in a variety of situations:\n *\n * *   Escape hatch for broken dependencies not supporting SSR.\n * *   Improve the time-to-first paint on the client by only rendering above the fold.\n * *   Reduce the rendering time on the server.\n * *   Under too heavy server load, you can turn on service degradation.\n *\n * Demos:\n *\n * - [No SSR](https://mui.com/base-ui/react-no-ssr/)\n *\n * API:\n *\n * - [NoSsr API](https://mui.com/base-ui/react-no-ssr/components-api/#no-ssr)\n */function NoSsr(props){const{children,defer=false,fallback=null}=props;const[mountedState,setMountedState]=React.useState(false);useEnhancedEffect(()=>{if(!defer){setMountedState(true);}},[defer]);React.useEffect(()=>{if(defer){setMountedState(true);}},[defer]);// We need the Fragment here to force react-docgen to recognise NoSsr as a component.\nreturn/*#__PURE__*/_jsx(React.Fragment,{children:mountedState?children:fallback});}process.env.NODE_ENV!==\"production\"?void 0:void 0;if(process.env.NODE_ENV!=='production'){// eslint-disable-next-line\nNoSsr['propTypes'+'']=exactProp(NoSsr.propTypes);}export{NoSsr};","map":{"version":3,"names":["React","exactProp","unstable_useEnhancedEffect","useEnhancedEffect","jsx","_jsx","NoSsr","props","children","defer","fallback","mountedState","setMountedState","useState","useEffect","Fragment","process","env","NODE_ENV","propTypes"],"sources":["/home/nevin/Project-2/test-react-auth/frontend/src/node_modules/@mui/base/NoSsr/NoSsr.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { exactProp, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * NoSsr purposely removes components from the subject of Server Side Rendering (SSR).\n *\n * This component can be useful in a variety of situations:\n *\n * *   Escape hatch for broken dependencies not supporting SSR.\n * *   Improve the time-to-first paint on the client by only rendering above the fold.\n * *   Reduce the rendering time on the server.\n * *   Under too heavy server load, you can turn on service degradation.\n *\n * Demos:\n *\n * - [No SSR](https://mui.com/base-ui/react-no-ssr/)\n *\n * API:\n *\n * - [NoSsr API](https://mui.com/base-ui/react-no-ssr/components-api/#no-ssr)\n */\nfunction NoSsr(props) {\n  const {\n    children,\n    defer = false,\n    fallback = null\n  } = props;\n  const [mountedState, setMountedState] = React.useState(false);\n  useEnhancedEffect(() => {\n    if (!defer) {\n      setMountedState(true);\n    }\n  }, [defer]);\n  React.useEffect(() => {\n    if (defer) {\n      setMountedState(true);\n    }\n  }, [defer]);\n\n  // We need the Fragment here to force react-docgen to recognise NoSsr as a component.\n  return /*#__PURE__*/_jsx(React.Fragment, {\n    children: mountedState ? children : fallback\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? NoSsr.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * You can wrap a node.\n   */\n  children: PropTypes.node,\n  /**\n   * If `true`, the component will not only prevent server-side rendering.\n   * It will also defer the rendering of the children into a different screen frame.\n   * @default false\n   */\n  defer: PropTypes.bool,\n  /**\n   * The fallback content to display.\n   * @default null\n   */\n  fallback: PropTypes.node\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  NoSsr['propTypes' + ''] = exactProp(NoSsr.propTypes);\n}\nexport { NoSsr };"],"mappings":"AAAA,YAAY,CAEZ,MAAO,GAAK,CAAAA,KAAK,KAAM,OAAO,CAE9B,OAASC,SAAS,CAAEC,0BAA0B,GAAI,CAAAC,iBAAiB,KAAQ,YAAY,CACvF,OAASC,GAAG,GAAI,CAAAC,IAAI,KAAQ,mBAAmB,CAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,QAAS,CAAAC,KAAKA,CAACC,KAAK,CAAE,CACpB,KAAM,CACJC,QAAQ,CACRC,KAAK,CAAG,KAAK,CACbC,QAAQ,CAAG,IACb,CAAC,CAAGH,KAAK,CACT,KAAM,CAACI,YAAY,CAAEC,eAAe,CAAC,CAAGZ,KAAK,CAACa,QAAQ,CAAC,KAAK,CAAC,CAC7DV,iBAAiB,CAAC,IAAM,CACtB,GAAI,CAACM,KAAK,CAAE,CACVG,eAAe,CAAC,IAAI,CAAC,CACvB,CACF,CAAC,CAAE,CAACH,KAAK,CAAC,CAAC,CACXT,KAAK,CAACc,SAAS,CAAC,IAAM,CACpB,GAAIL,KAAK,CAAE,CACTG,eAAe,CAAC,IAAI,CAAC,CACvB,CACF,CAAC,CAAE,CAACH,KAAK,CAAC,CAAC,CAEX;AACA,MAAO,aAAaJ,IAAI,CAACL,KAAK,CAACe,QAAQ,CAAE,CACvCP,QAAQ,CAAEG,YAAY,CAAGH,QAAQ,CAAGE,QACtC,CAAC,CAAC,CACJ,CACAM,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAK,YAAY,QAoBjC,IAAK,EAAC,CACV,GAAIF,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAK,YAAY,CAAE,CACzC;AACAZ,KAAK,CAAC,WAAW,CAAG,EAAE,CAAC,CAAGL,SAAS,CAACK,KAAK,CAACa,SAAS,CAAC,CACtD,CACA,OAASb,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module"}