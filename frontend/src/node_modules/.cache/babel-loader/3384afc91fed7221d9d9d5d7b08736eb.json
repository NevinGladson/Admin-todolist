{"ast":null,"code":"var _jsxFileName = \"/home/nevin/Project-2/test-react-auth/frontend/src/contexts/user.context.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useState, useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext();\nexport const UserProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n\n  // Updated to interact with your Express backend\n  const emailPasswordLogin = async (email, password) => {\n    try {\n      console.log(`Making login request to URL: http://localhost:3001/api/login`);\n      const response = await fetch('http://localhost:3001/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: email,\n          password: password\n        }),\n        credentials: 'include' // Necessary for cookies if using session authentication\n      });\n      if (!response.ok) {\n        throw new Error('Login failed');\n      }\n      const userData = await response.json();\n      setUser(userData); // Update this based on how you're handling sessions or user data\n      return userData;\n    } catch (error) {\n      console.error(\"Error during login:\", error);\n      throw error;\n    }\n  };\n  const emailPasswordSignup = async (email, password, username) => {\n    try {\n      const response = await fetch('http://localhost:3001/api/signup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password,\n          username\n        }),\n        credentials: 'include' // Include credentials for cross-origin requests\n      });\n      if (!response.ok) {\n        const errorDetails = await response.json(); // Assuming the server sends JSON with error details\n        throw new Error(`Signup failed: ${errorDetails.error || \"Unknown error\"}`);\n      }\n      const userData = await response.json(); // Assuming your endpoint responds with user data\n      setUser(userData); // You might adjust this based on your backend response\n      return userData;\n    } catch (error) {\n      console.error(\"Error during signup:\", error);\n      throw error;\n    }\n  };\n\n  // Placeholder for fetching user data, adjust based on your auth method\n  const fetchUser = async () => {\n    // Implement based on how you're managing user sessions or authentication state\n  };\n  const logOutUser = async () => {\n    // Implement logout functionality, possibly calling a backend endpoint to clear session/cookie\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      user,\n      setUser,\n      emailPasswordLogin,\n      emailPasswordSignup,\n      fetchUser,\n      logOutUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(UserProvider, \"Iei9RGtZU29Y1RhBe1sbfh/MntA=\");\n_c = UserProvider;\nexport const useUser = () => {\n  _s2();\n  return useContext(UserContext);\n};\n_s2(useUser, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["createContext","useState","useContext","jsxDEV","_jsxDEV","UserContext","UserProvider","children","_s","user","setUser","emailPasswordLogin","email","password","console","log","response","fetch","method","headers","body","JSON","stringify","credentials","ok","Error","userData","json","error","emailPasswordSignup","username","errorDetails","fetchUser","logOutUser","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useUser","_s2","$RefreshReg$"],"sources":["/home/nevin/Project-2/test-react-auth/frontend/src/contexts/user.context.js"],"sourcesContent":["import { createContext, useState, useContext } from \"react\";\n\nconst UserContext = createContext();\n\nexport const UserProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n\n  // Updated to interact with your Express backend\n  const emailPasswordLogin = async (email, password) => {\n    try {\n      console.log(`Making login request to URL: http://localhost:3001/api/login`);\n      const response = await fetch('http://localhost:3001/api/login', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          email: email,\n          password: password\n        }),\n        credentials: 'include', // Necessary for cookies if using session authentication\n      });\n      if (!response.ok) {\n        throw new Error('Login failed');\n      }\n      const userData = await response.json();\n      setUser(userData); // Update this based on how you're handling sessions or user data\n      return userData;\n    } catch (error) {\n      console.error(\"Error during login:\", error);\n      throw error;\n    }\n  };\n\n  const emailPasswordSignup = async (email, password, username) => {\n    try {\n      const response = await fetch('http://localhost:3001/api/signup', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ email, password, username }),\n        credentials: 'include', // Include credentials for cross-origin requests\n      });\n      if (!response.ok) {\n        const errorDetails = await response.json(); // Assuming the server sends JSON with error details\n        throw new Error(`Signup failed: ${errorDetails.error || \"Unknown error\"}`);\n      }\n      const userData = await response.json(); // Assuming your endpoint responds with user data\n      setUser(userData); // You might adjust this based on your backend response\n      return userData;\n    } catch (error) {\n      console.error(\"Error during signup:\", error);\n      throw error;\n    }\n  };\n\n  // Placeholder for fetching user data, adjust based on your auth method\n  const fetchUser = async () => {\n    // Implement based on how you're managing user sessions or authentication state\n  };\n\n  const logOutUser = async () => {\n    // Implement logout functionality, possibly calling a backend endpoint to clear session/cookie\n  };\n\n  return (\n    <UserContext.Provider value={{ user, setUser, emailPasswordLogin, emailPasswordSignup, fetchUser, logOutUser }}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n\nexport const useUser = () => useContext(UserContext);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}