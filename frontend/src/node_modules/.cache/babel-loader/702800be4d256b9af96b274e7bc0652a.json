{"ast":null,"code":"var _jsxFileName = \"/home/nevin/Project-2/test-react-auth/frontend/src/contexts/user.context.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useState, useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext();\nexport const UserProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n\n  // Updated to interact with your Express backend\n  const emailPasswordLogin = async (loginIdentifier, password) => {\n    try {\n      const response = await fetch('http://localhost:3001/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          loginIdentifier,\n          // This can be either username or email\n          password\n        }),\n        credentials: 'include'\n      });\n      if (!response.ok) {\n        const errorDetails = await response.json();\n        throw new Error(`Login failed: ${errorDetails.message || \"Unknown error\"}`);\n      }\n      const userData = await response.json();\n      setUser(userData);\n      return userData;\n    } catch (error) {\n      console.error(\"Error during login:\", error);\n      throw error;\n    }\n  };\n  const emailPasswordSignup = async (email, password, username) => {\n    try {\n      const response = await fetch('http://localhost:3001/api/signup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password,\n          username\n        }),\n        credentials: 'include' // Include credentials for cross-origin requests\n      });\n      if (!response.ok) {\n        const errorDetails = await response.json(); // Assuming the server sends JSON with error details\n        throw new Error(`Signup failed: ${errorDetails.error || \"Unknown error\"}`);\n      }\n      const userData = await response.json(); // Assuming your endpoint responds with user data\n      setUser(userData); // You might adjust this based on your backend response\n      return userData;\n    } catch (error) {\n      console.error(\"Error during signup:\", error);\n      throw error;\n    }\n  };\n\n  // Placeholder for fetching user data, adjust based on your auth method\n  const fetchUser = async () => {\n    // Implement based on how you're managing user sessions or authentication state\n  };\n  const logOutUser = async () => {\n    // Implement logout functionality, possibly calling a backend endpoint to clear session/cookie\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      user,\n      setUser,\n      emailPasswordLogin,\n      emailPasswordSignup,\n      fetchUser,\n      logOutUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(UserProvider, \"Iei9RGtZU29Y1RhBe1sbfh/MntA=\");\n_c = UserProvider;\nexport const useUser = () => {\n  _s2();\n  return useContext(UserContext);\n};\n_s2(useUser, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["createContext","useState","useContext","jsxDEV","_jsxDEV","UserContext","UserProvider","children","_s","user","setUser","emailPasswordLogin","loginIdentifier","password","response","fetch","method","headers","body","JSON","stringify","credentials","ok","errorDetails","json","Error","message","userData","error","console","emailPasswordSignup","email","username","fetchUser","logOutUser","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useUser","_s2","$RefreshReg$"],"sources":["/home/nevin/Project-2/test-react-auth/frontend/src/contexts/user.context.js"],"sourcesContent":["import { createContext, useState, useContext } from \"react\";\n\nconst UserContext = createContext();\n\nexport const UserProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n\n  // Updated to interact with your Express backend\n  const emailPasswordLogin = async (loginIdentifier, password) => {\n    try {\n        const response = await fetch('http://localhost:3001/api/login', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                loginIdentifier, // This can be either username or email\n                password\n            }),\n            credentials: 'include'\n        });\n        \n        if (!response.ok) {\n            const errorDetails = await response.json();\n            throw new Error(`Login failed: ${errorDetails.message || \"Unknown error\"}`);\n        }\n\n        const userData = await response.json();\n        setUser(userData);\n        return userData;\n    } catch (error) {\n        console.error(\"Error during login:\", error);\n        throw error;\n    }\n};\n\n\n  const emailPasswordSignup = async (email, password, username) => {\n    try {\n      const response = await fetch('http://localhost:3001/api/signup', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ email, password, username }),\n        credentials: 'include', // Include credentials for cross-origin requests\n      });\n      if (!response.ok) {\n        const errorDetails = await response.json(); // Assuming the server sends JSON with error details\n        throw new Error(`Signup failed: ${errorDetails.error || \"Unknown error\"}`);\n      }\n      const userData = await response.json(); // Assuming your endpoint responds with user data\n      setUser(userData); // You might adjust this based on your backend response\n      return userData;\n    } catch (error) {\n      console.error(\"Error during signup:\", error);\n      throw error;\n    }\n  };\n\n  // Placeholder for fetching user data, adjust based on your auth method\n  const fetchUser = async () => {\n    // Implement based on how you're managing user sessions or authentication state\n  };\n\n  const logOutUser = async () => {\n    // Implement logout functionality, possibly calling a backend endpoint to clear session/cookie\n  };\n\n  return (\n    <UserContext.Provider value={{ user, setUser, emailPasswordLogin, emailPasswordSignup, fetchUser, logOutUser }}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n\nexport const useUser = () => useContext(UserContext);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}